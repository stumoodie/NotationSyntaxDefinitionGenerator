<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">





<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>EasyMock 2.4</title><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>

<style type="text/css" media="screen">
    @import url('../../../style.css');
    @import url('../../../roundedcorners.css');
</style>

</head>
<body onload="onLoad('EasyMock 2.4: org.easymock.tests2.UsageConstraintsTest.java');">
 
 <table cellspacing="0" cellpadding="2" class="barGraph"><tbody>
  <tr>
    <td colspan="6">

    <div class="roundedLarge">
      <b class="ctop"><b class="cb1"></b><b class="cb2"></b><b class="cb3"></b><b class="cb4"></b></b>
      <div class="roundedContent">
    <table width="100%" class="" cellspacing="0"><tr class="reportHeader">
    <td valign="top" class="titleText">Clover Coverage  Report - <a href="http://www.easymock.org" target="_top">EasyMock 2.4</a><div class="timestamp"><b>Coverage timestamp:</b>&nbsp;mer. juil. 2 2008 02:17:38 CEST</div>

        
    
            <div class="navBar"><a href="../../../pkg-summary.html"><b>Overview</b></a>&nbsp;&nbsp;&nbsp;<a href="pkg-summary.html"><b>Package</b></a>&nbsp;&nbsp;&nbsp;<span class="navBarCurrent">File</span></div>
    
    <div class="navBarLink">
        &nbsp;&nbsp;&nbsp;
        <a href="../../../index.html" target="_top">FRAMES</a>&nbsp;&nbsp;
        <a href="UsageConstraintsTest.html" target="_top">NO FRAMES</a>&nbsp;&nbsp;
        <label onclick="toggleHelp(this);" class="nonHelpItem">SHOW HELP</label>&nbsp;&nbsp;
    </div>

    </td>
        
        

     <td  id="td-header-stats" class="headerStats" valign="top" style="font-weight: normal;width:40%; text-align: right; display: ;">
         <table style="text-align: right; white-space:nowrap;">
         <tr>
           <td colspan="11" class="totalText" style="text-align: left"><label>Statistics for file UsageConstraintsTest.java:</label></td>
         </tr>
         <tr>
           <td  class="totalText"><label onkeyup="return help_stmts + 'file';">Stmts:</label></td>
           <td >      376
  </td>
           <td style="width: 5%">&nbsp;</td>
           <td  class="totalText"><label onkeyup="return help_loc + 'file';">LOC:</label></td>
           <td >      641
  </td>
           <td style="width: 10%">&nbsp;</td>
           <td  class="totalText"><label onkeyup="return help_cmp + 'file';">Total cmp:</label></td>
           <td >      47
  </td>
           <td style="width: 5%">&nbsp;</td>
           <td  class="totalText"><label onkeyup="return help_stmts_per_method;">Stmts/Method:</label></td>
           <td >      10,74
  </td>
         </tr>
         <tr>
           <td  class="totalText"><label onkeyup="return help_branches + 'file';">Branches:</label></td>
           <td >      6
  </td>
           <td style="width: 5%">&nbsp;</td>
           <td  class="totalText"><label onkeyup="return help_ncloc + 'file';">NCLOC:</label></td>
           <td >      534
  </td>
           <td style="width: 10%">&nbsp;</td>
           <td  class="totalText"><label onkeyup="return help_cmp_density + 'file';">Cmp density:</label></td>
           <td >      0,12
  </td>
           <td style="width: 5%">&nbsp;</td>
           <td  class="totalText"><label onkeyup="return help_methods_per_class;">Methods/Class:</label></td>
           <td >      17,5
  </td>
         </tr>
         <tr>
           <td  class="totalText"><label onkeyup="return help_methods + 'file';">Methods:</label></td>
           <td >      35
  </td>
           <td style="width: 5%">&nbsp;</td>
                    <td colspan="2"></td>
                    <td style="width: 10%">&nbsp;</td>
           <td  class="totalText"><label onkeyup="return help_avg_method_cmp + 'file';">Avg method cmp:</label></td>
           <td >      1,34
  </td>
           <td style="width: 5%">&nbsp;</td>
                      <td colspan="2"></td>
          
         </tr>
         <tr>
            <td  class="totalText"><label onkeyup="return help_classes + 'file';">Classes:</label></td>
            <td >      2
  </td>
            <td style="width: 5%">&nbsp;</td>
                      <td colspan="2"></td>
                     <td style="width: 10%">&nbsp;</td>
         </tr>
         <tr class="totalText">
             <td colspan="1">
                <a class="sortable totalText" onclick="toggleStats('td-header-stats', 'td-filtered-header-stats');"><label onkeyup="return help_filter_stats;">Filtered</label></a>
             </td>
             <td colspan="5">&nbsp;</td>

         </tr>
      </table>
     </td>

    
    

     <td  id="td-filtered-header-stats" class="headerStats" valign="top" style="font-weight: normal;width:40%; text-align: right; display: none;">
         <table style="text-align: right; white-space:nowrap;">
         <tr>
           <td colspan="11" class="totalText" style="text-align: left"><label>Statistics for file UsageConstraintsTest.java:</label></td>
         </tr>
         <tr>
           <td  class="totalText"><label onkeyup="return help_stmts + 'file';">Stmts:</label></td>
           <td >      376
  </td>
           <td style="width: 5%">&nbsp;</td>
           <td  class="totalText"><label onkeyup="return help_loc + 'file';">LOC:</label></td>
           <td >      641
  </td>
           <td style="width: 10%">&nbsp;</td>
           <td  class="totalText"><label onkeyup="return help_cmp + 'file';">Total cmp:</label></td>
           <td >      47
  </td>
           <td style="width: 5%">&nbsp;</td>
           <td  class="totalText"><label onkeyup="return help_stmts_per_method;">Stmts/Method:</label></td>
           <td >      10,74
  </td>
         </tr>
         <tr>
           <td  class="totalText"><label onkeyup="return help_branches + 'file';">Branches:</label></td>
           <td >      6
  </td>
           <td style="width: 5%">&nbsp;</td>
           <td  class="totalText"><label onkeyup="return help_ncloc + 'file';">NCLOC:</label></td>
           <td >      534
  </td>
           <td style="width: 10%">&nbsp;</td>
           <td  class="totalText"><label onkeyup="return help_cmp_density + 'file';">Cmp density:</label></td>
           <td >      0,12
  </td>
           <td style="width: 5%">&nbsp;</td>
           <td  class="totalText"><label onkeyup="return help_methods_per_class;">Methods/Class:</label></td>
           <td >      17,5
  </td>
         </tr>
         <tr>
           <td  class="totalText"><label onkeyup="return help_methods + 'file';">Methods:</label></td>
           <td >      35
  </td>
           <td style="width: 5%">&nbsp;</td>
                    <td colspan="2"></td>
                    <td style="width: 10%">&nbsp;</td>
           <td  class="totalText"><label onkeyup="return help_avg_method_cmp + 'file';">Avg method cmp:</label></td>
           <td >      1,34
  </td>
           <td style="width: 5%">&nbsp;</td>
                      <td colspan="2"></td>
          
         </tr>
         <tr>
            <td  class="totalText"><label onkeyup="return help_classes + 'file';">Classes:</label></td>
            <td >      2
  </td>
            <td style="width: 5%">&nbsp;</td>
                      <td colspan="2"></td>
                     <td style="width: 10%">&nbsp;</td>
         </tr>
         <tr class="totalText">
             <td colspan="1">
                <a class="sortable totalText" onclick="toggleStats('td-filtered-header-stats', 'td-header-stats');"><label onkeyup="return help_filter_stats;">Unfiltered</label></a>
             </td>
             <td colspan="5">&nbsp;</td>

         </tr>
      </table>
     </td>
</tr>

    </table>
  </div>
  <b class="cbottom"><b class="cb4"></b><b class="cb3"></b><b class="cb2"></b><b class="cb1"></b></b>
  </div>

   </td>
  </tr>


<tr id="legend" style="display:none;"><td colspan="6">
    <div class="hbreak">&nbsp;</div>
    <table class="legend" cellspacing="0" cellpadding="0">
        <tr><td colspan="3" class="legendTitle">Legend</td></tr>

        <tr><td class="methodToggle" align="right">line#</td><td class="methodToggle" align="right">hit count</td>
            <td class="methodToggle"> </td>
        </tr>
        <tr><td class="lineCount Good" align="right">1</td><td class="coverageCount Good hitByTest" align="right">86</td>
               <td class="srcCell"><span class="spacer"/><span class="srcLine">line hit by 1 or more tests which passed</span></td>
        </tr>
        <tr><td class="lineCount Good" align="right">2</td><td class="coverageCount Good missedByTest" align="right">17</td>
               <td class="srcCell"><span class="spacer"/><span class="srcLine">line was covered, but not by a test case</span></td>
        </tr>
        <tr><td class="lineCount Good" align="right">3</td><td class="coverageCount Good hitByFailedTest" align="right">7</td>
               <td class="srcCell"><span class="spacer"/><span class="srcLine">line hit by 1 or more tests which did not pass</span></td>
        </tr>
        <tr><td class="lineCount Good" align="right">4</td><td class="coverageCount Good hitByTest" align="right">5</td>
               <td class="srcCell"><span class="spacer"/><span class="srcLine coveredByTest">line hit by more than one (selected) test</span></td>
        </tr>
        <tr><td class="lineCount Good" align="right">5</td><td class="coverageCount Good hitByTest" align="right">3</td>
               <td class="srcCell"><span class="spacer"/><span class="srcLine coveredByTestUniq">line hit by one test only</span></td>
        </tr>
        <tr><td class="lineCount Good" align="right">6</td><td class="coverageCount Good hitByTest" align="right">2</td>
               <td class="srcCell"><span class="spacer"/><span class="srcLine coveredByFailedTest">line hit by one or more (selected) tests that failed</span></td>
        </tr>
        <tr><td class="lineCount Bad" align="right">7</td><td class="coverageCount Bad hitByTest" align="right">1</td>
               <td class="srcCell"><span class="spacer"/><span class="srcLine srcLineHilight">line has an expression (e.g. a branch) or statement that was not fully covered</span></td>
        </tr>
        <tr><td class="lineCount Bad" align="right">8</td><td class="coverageCount Bad missedByTest" align="right">0</td>
               <td class="srcCell"><span class="spacer"/><span class="srcLine srcLineHilight">line was not covered at all</span></td>
        </tr>
        <tr><td class="lineCount Filtered " align="right">9</td><td class="coverageCount Filtered" align="right"></td>
               <td class="srcCell"><span class="spacer"/><span class="srcLineFiltered">line was filtered</span></td>
        </tr>
        
    </table>
    <div class="hbreak">&nbsp;</div>
    
    
</td></tr>
<tr><td class="hbreak" colspan="6">&nbsp; <label onkeyup="return help_src_file_expandall_summaries;" class="sortable" onclick="toggleAllClasses(this); return false;" id="stat-expander">Expand All</label></td></tr>
</tbody>
         <tbody>
        <tr>             <td class="graphHeaderLeft" id="UsageConstraintsTest" >
                                <span class="expand methodStart" id="span-UsageConstraintsTest" onclick="toggleClass(this, 'UsageConstraintsTest', 33);return false;">&nbsp;</span>
                                <span class="titleText"> <a href="#22" title="UsageConstraintsTest">UsageConstraintsTest</a></span>
                <span class="sortable" onclick="ts_resortTable(document.getElementById('UsageConstraintsTest'), 'alpha', 0);return false;" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
            </td>

            <td class="sortable graphHeader" onclick="ts_resortTable(this, 'number', 1);return false;">
                Line # 22
                <a name="sl-22"></a>
            </td>

                                        
                
                <td class="sortable graphHeader "  onclick="ts_resortTable(this, 'number', 2);return false;">
                    <span class="headerTitle"><label  onkeyup="return 'The total number of statements.';"  >Total Statements</label></span>
                    374
                </td>
                
                                            
                
                <td class="sortable graphHeader "  onclick="ts_resortTable(this, 'number', 3);return false;">
                    <span class="headerTitle"><label  onkeyup="return 'Cyclomatic complexity is a measure of the number of paths in your code.';"  >Complexity</label></span>
                    45
                </td>
                
                                            
                
                <td class="sortable graphHeader "  onclick="ts_resortTable(this, 'number', 4);return false;">
                    <span class="headerTitle"><label  onkeyup="return 'The amount of code that was hit at least once during testing.';"  >TOTAL Coverage</label></span>
                    97,1%
</td>
<td class="graphBar graphHeader" align="center">
<span class="sortValue">0.9709443</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="2,9% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="97,1% Covered" class="barPositive $customBarPositive" style="width: 97.1%"></div>
    </div>
</div>
                </td>
                
                                    </tr> 
                <tr id="UsageConstraintsTest-1" style="display:none">
            <td class="methodSummary" id="summary-25-5">
                <span class="sortValue">setUp()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#25" title="setUp()&nbsp;:&nbsp;void" name="sl-25">setUp()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">25</span>
                25
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-2" style="display:none">
            <td class="methodSummary" id="summary-30-5">
                <span class="sortValue">equalsMissing()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#30" title="equalsMissing()&nbsp;:&nbsp;void" name="sl-30">equalsMissing()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">30</span>
                30
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">13.0</span>
              13
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">4.0</span>
              4
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">0.7692308</span>
              76,9%
</td>
<td class="graphBar " align="center">
<span class="sortValue">0.7692308</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="23,1% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="76,9% Covered" class="barPositive $customBarPositive" style="width: 76.9%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-3" style="display:none">
            <td class="methodSummary" id="summary-54-5">
                <span class="sortValue">differentConstraintsOnSameCall()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#54" title="differentConstraintsOnSameCall()&nbsp;:&nbsp;void" name="sl-54">differentConstraintsOnSameCall()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">54</span>
                54
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">5.0</span>
              5
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-4" style="display:none">
            <td class="methodSummary" id="summary-63-5">
                <span class="sortValue">equals()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#63" title="equals()&nbsp;:&nbsp;void" name="sl-63">equals()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">63</span>
                63
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">7.0</span>
              7
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">2.0</span>
              2
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">0.85714287</span>
              85,7%
</td>
<td class="graphBar " align="center">
<span class="sortValue">0.85714287</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="14,3% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="85,7% Covered" class="barPositive $customBarPositive" style="width: 85.7%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-5" style="display:none">
            <td class="methodSummary" id="summary-76-5">
                <span class="sortValue">constraints()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#76" title="constraints()&nbsp;:&nbsp;void" name="sl-76">constraints()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">76</span>
                76
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">22.0</span>
              22
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">7.0</span>
              7
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">0.78571427</span>
              78,6%
</td>
<td class="graphBar " align="center">
<span class="sortValue">0.78571427</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="21,4% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="78,6% Covered" class="barPositive $customBarPositive" style="width: 78.6%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-6" style="display:none">
            <td class="methodSummary" id="summary-114-5">
                <span class="sortValue">andOverloaded()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#114" title="andOverloaded()&nbsp;:&nbsp;void" name="sl-114">andOverloaded()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">114</span>
                114
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">22.0</span>
              22
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-7" style="display:none">
            <td class="methodSummary" id="summary-141-5">
                <span class="sortValue">orOverloaded()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#141" title="orOverloaded()&nbsp;:&nbsp;void" name="sl-141">orOverloaded()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">141</span>
                141
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">22.0</span>
              22
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-8" style="display:none">
            <td class="methodSummary" id="summary-168-5">
                <span class="sortValue">notOverloaded()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#168" title="notOverloaded()&nbsp;:&nbsp;void" name="sl-168">notOverloaded()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">168</span>
                168
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">22.0</span>
              22
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-9" style="display:none">
            <td class="methodSummary" id="summary-194-5">
                <span class="sortValue">lessOrEqualOverloaded()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#194" title="lessOrEqualOverloaded()&nbsp;:&nbsp;void" name="sl-194">lessOrEqualOverloaded()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">194</span>
                194
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">16.0</span>
              16
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-10" style="display:none">
            <td class="methodSummary" id="summary-214-5">
                <span class="sortValue">lessThanOverloaded()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#214" title="lessThanOverloaded()&nbsp;:&nbsp;void" name="sl-214">lessThanOverloaded()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">214</span>
                214
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">16.0</span>
              16
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-11" style="display:none">
            <td class="methodSummary" id="summary-234-5">
                <span class="sortValue">greaterOrEqualOverloaded()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#234" title="greaterOrEqualOverloaded()&nbsp;:&nbsp;void" name="sl-234">greaterOrEqualOverloaded()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">234</span>
                234
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">16.0</span>
              16
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-12" style="display:none">
            <td class="methodSummary" id="summary-254-5">
                <span class="sortValue">greaterThanOverloaded()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#254" title="greaterThanOverloaded()&nbsp;:&nbsp;void" name="sl-254">greaterThanOverloaded()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">254</span>
                254
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">16.0</span>
              16
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-13" style="display:none">
            <td class="methodSummary" id="summary-274-5">
                <span class="sortValue">cmpTo()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#274" title="cmpTo()&nbsp;:&nbsp;void" name="sl-274">cmpTo()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">274</span>
                274
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">4.0</span>
              4
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-14" style="display:none">
            <td class="methodSummary" id="summary-294-5">
                <span class="sortValue">compareWithComparator()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#294" title="compareWithComparator()&nbsp;:&nbsp;void" name="sl-294">compareWithComparator()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">294</span>
                294
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">33.0</span>
              33
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">2.0</span>
              2
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">0.969697</span>
              97%
</td>
<td class="graphBar " align="center">
<span class="sortValue">0.969697</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="3% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="97% Covered" class="barPositive $customBarPositive" style="width: 97%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-15" style="display:none">
            <td class="methodSummary" id="summary-298-13">
                <span class="sortValue">compare(A,A)&nbsp;:&nbsp;int</span>
                &nbsp;&nbsp;<a href="#298" title="compare(A,A)&nbsp;:&nbsp;int" name="sl-298">compare(A,A)&nbsp;:&nbsp;int</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">298</span>
                298
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-16" style="display:none">
            <td class="methodSummary" id="summary-302-13">
                <span class="sortValue">compare(Object,Object)&nbsp;:&nbsp;int</span>
                &nbsp;&nbsp;<a href="#302" title="compare(Object,Object)&nbsp;:&nbsp;int" name="sl-302">compare(Object,Object)&nbsp;:&nbsp;int</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">302</span>
                302
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-17" style="display:none">
            <td class="methodSummary" id="summary-366-5">
                <span class="sortValue">checkItFails(A)&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#366" title="checkItFails(A)&nbsp;:&nbsp;void" name="sl-366">checkItFails(A)&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">366</span>
                366
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">3.0</span>
              3
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">2.0</span>
              2
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">0.6666667</span>
              66,7%
</td>
<td class="graphBar " align="center">
<span class="sortValue">0.6666667</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="33,3% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="66,7% Covered" class="barPositive $customBarPositive" style="width: 66.7%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-18" style="display:none">
            <td class="methodSummary" id="summary-374-5">
                <span class="sortValue">any()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#374" title="any()&nbsp;:&nbsp;void" name="sl-374">any()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">374</span>
                374
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">22.0</span>
              22
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-19" style="display:none">
            <td class="methodSummary" id="summary-400-5">
                <span class="sortValue">arrayEquals()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#400" title="arrayEquals()&nbsp;:&nbsp;void" name="sl-400">arrayEquals()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">400</span>
                400
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">22.0</span>
              22
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-20" style="display:none">
            <td class="methodSummary" id="summary-426-5">
                <span class="sortValue">greaterOrEqual()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#426" title="greaterOrEqual()&nbsp;:&nbsp;void" name="sl-426">greaterOrEqual()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">426</span>
                426
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">9.0</span>
              9
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-21" style="display:none">
            <td class="methodSummary" id="summary-442-5">
                <span class="sortValue">greaterThan()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#442" title="greaterThan()&nbsp;:&nbsp;void" name="sl-442">greaterThan()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">442</span>
                442
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">9.0</span>
              9
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-22" style="display:none">
            <td class="methodSummary" id="summary-458-5">
                <span class="sortValue">lessOrEqual()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#458" title="lessOrEqual()&nbsp;:&nbsp;void" name="sl-458">lessOrEqual()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">458</span>
                458
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">9.0</span>
              9
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-23" style="display:none">
            <td class="methodSummary" id="summary-474-5">
                <span class="sortValue">lessThan()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#474" title="lessThan()&nbsp;:&nbsp;void" name="sl-474">lessThan()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">474</span>
                474
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">9.0</span>
              9
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-24" style="display:none">
            <td class="methodSummary" id="summary-490-5">
                <span class="sortValue">testOr()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#490" title="testOr()&nbsp;:&nbsp;void" name="sl-490">testOr()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">490</span>
                490
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">7.0</span>
              7
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-25" style="display:none">
            <td class="methodSummary" id="summary-504-5">
                <span class="sortValue">testNull()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#504" title="testNull()&nbsp;:&nbsp;void" name="sl-504">testNull()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">504</span>
                504
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">6.0</span>
              6
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-26" style="display:none">
            <td class="methodSummary" id="summary-519-5">
                <span class="sortValue">testNotNull()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#519" title="testNotNull()&nbsp;:&nbsp;void" name="sl-519">testNotNull()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">519</span>
                519
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">6.0</span>
              6
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-27" style="display:none">
            <td class="methodSummary" id="summary-534-5">
                <span class="sortValue">testFind()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#534" title="testFind()&nbsp;:&nbsp;void" name="sl-534">testFind()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">534</span>
                534
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">6.0</span>
              6
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-28" style="display:none">
            <td class="methodSummary" id="summary-547-5">
                <span class="sortValue">testMatches()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#547" title="testMatches()&nbsp;:&nbsp;void" name="sl-547">testMatches()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">547</span>
                547
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">6.0</span>
              6
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-29" style="display:none">
            <td class="methodSummary" id="summary-561-5">
                <span class="sortValue">testContains()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#561" title="testContains()&nbsp;:&nbsp;void" name="sl-561">testContains()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">561</span>
                561
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">6.0</span>
              6
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-30" style="display:none">
            <td class="methodSummary" id="summary-574-5">
                <span class="sortValue">testStartsWith()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#574" title="testStartsWith()&nbsp;:&nbsp;void" name="sl-574">testStartsWith()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">574</span>
                574
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">6.0</span>
              6
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-31" style="display:none">
            <td class="methodSummary" id="summary-587-5">
                <span class="sortValue">testEndsWith()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#587" title="testEndsWith()&nbsp;:&nbsp;void" name="sl-587">testEndsWith()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">587</span>
                587
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">6.0</span>
              6
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-32" style="display:none">
            <td class="methodSummary" id="summary-600-5">
                <span class="sortValue">equalsWithDelta()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#600" title="equalsWithDelta()&nbsp;:&nbsp;void" name="sl-600">equalsWithDelta()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">600</span>
                600
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">15.0</span>
              15
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest-33" style="display:none">
            <td class="methodSummary" id="summary-623-5">
                <span class="sortValue">testSame()&nbsp;:&nbsp;void</span>
                &nbsp;&nbsp;<a href="#623" title="testSame()&nbsp;:&nbsp;void" name="sl-623">testSame()&nbsp;:&nbsp;void</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">623</span>
                623
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">10.0</span>
              10
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
             </tbody>
         <tbody>
        <tr>             <td class="graphHeaderLeft" id="UsageConstraintsTest.A" >
                                <span class="expand methodStart" id="span-UsageConstraintsTest.A" onclick="toggleClass(this, 'UsageConstraintsTest.A', 2);return false;">&nbsp;</span>
                                <span class="titleText"> <a href="#282" title="UsageConstraintsTest.A">UsageConstraintsTest.A</a></span>
                <span class="sortable" onclick="ts_resortTable(document.getElementById('UsageConstraintsTest.A'), 'alpha', 0);return false;" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
            </td>

            <td class="sortable graphHeader" onclick="ts_resortTable(this, 'number', 1);return false;">
                Line # 282
                <a name="sl-282"></a>
            </td>

                                        
                
                <td class="sortable graphHeader "  onclick="ts_resortTable(this, 'number', 2);return false;">
                    <span class="headerTitle"><label  onkeyup="return 'The total number of statements.';"  >Total Statements</label></span>
                    2
                </td>
                
                                            
                
                <td class="sortable graphHeader "  onclick="ts_resortTable(this, 'number', 3);return false;">
                    <span class="headerTitle"><label  onkeyup="return 'Cyclomatic complexity is a measure of the number of paths in your code.';"  >Complexity</label></span>
                    2
                </td>
                
                                            
                
                <td class="sortable graphHeader "  onclick="ts_resortTable(this, 'number', 4);return false;">
                    <span class="headerTitle"><label  onkeyup="return 'The amount of code that was hit at least once during testing.';"  >TOTAL Coverage</label></span>
                    100%
</td>
<td class="graphBar graphHeader" align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
                </td>
                
                                    </tr> 
                <tr id="UsageConstraintsTest.A-1" style="display:none">
            <td class="methodSummary" id="summary-285-9">
                <span class="sortValue">A(int)</span>
                &nbsp;&nbsp;<a href="#285" title="A(int)" name="sl-285">A(int)</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">285</span>
                285
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
                <tr id="UsageConstraintsTest.A-2" style="display:none">
            <td class="methodSummary" id="summary-289-9">
                <span class="sortValue">getValue()&nbsp;:&nbsp;int</span>
                &nbsp;&nbsp;<a href="#289" title="getValue()&nbsp;:&nbsp;int" name="sl-289">getValue()&nbsp;:&nbsp;int</a>
                            </td>
            <td class="graphPercent" align="right">
                <span class="sortValue">289</span>
                289
            </td>
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              1
            </td>
              
                        
            <td class="graphPercent " align="right">
                <span class="sortValue">1.0</span>
              100%
</td>
<td class="graphBar " align="center">
<span class="sortValue">1.0</span>
<div>
    <div style="width: 200px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 200px;"  class="barNegative $customBarNegative">
       <div title="100% Covered" class="barPositive $customBarPositive" style="width: 100%"></div>
    </div>
</div>
            </td>
              
                   </tr>
             </tbody>
     <tbody><tr><td class="hbreak" colspan="6">&nbsp;</td></tr></tbody>
</table>

<table cellspacing="0" cellpadding="0" class="barGraph">
    <tbody>
<tr>
    <td class="hbreak" align="left" colspan="4">
        &nbsp; <label class="sortable" id="testsToggle" onclick="toggleAllTests(this); return false;" onkeyup="return help_src_file_show_tests;">Show Tests </label>(29) <label onkeyup="return help_select_all;" class="selectable unselected" id="selectalltests" onclick="selectAllTests(this);">Select All </label> <label onkeyup='return help_deselect_all;' class="selectable selected" id="deselectalltests" onclick="deselectAllTests(this);">Deselect All</label>
    </td>
</tr>
</tbody>
<tbody id="tests-body" style="display:none">
<tr id="testHeaderRow">
    <td class="graphHeaderLeft titleText" align="center" >
        <label onkeyup="return help_hilight_test;" id="help_1">Highlight</label>
    </td>
    <td class="graphHeaderLeft titleText sortable" onclick="ts_resortTable(this, 'number', 1);return false;">
        <label onkeyup="return help_test_contribution;" id="help_2">Test Contribution</label>
    </td>
    <td class="graphHeaderLeft titleText sortable" onclick="ts_resortTable(this, 'alpha', 2);return false;">
        <label onkeyup="return help_src_file_test;" id="help_3">Test</label>
    </td>
    <td class="graphHeaderLeft titleText sortable" onclick="ts_resortTable(this, 'alpha', 3);return false;">Result</td>
</tr>

        <tr id="test-436">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-436"></a>
            <input type="checkbox" id="cb-436" value="436" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_compareWithComparator.html';">
            <span class="sortValue">0.105515584</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="89,4% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="10,6% Covered" class="barPositive testBarPositive" style="width: 10.6%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-436">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.compareWithComparator</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=294#src-294" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_compareWithComparator.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.compareWithComparator</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-386">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-386"></a>
            <input type="checkbox" id="cb-386" value="386" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_orOverloaded.html';">
            <span class="sortValue">0.055155877</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="94,5% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="5,5% Covered" class="barPositive testBarPositive" style="width: 5.5%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-386">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.orOverloaded</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=141#src-141" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_orOverloaded.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.orOverloaded</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-56">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-56"></a>
            <input type="checkbox" id="cb-56" value="56" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_any.html';">
            <span class="sortValue">0.055155877</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="94,5% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="5,5% Covered" class="barPositive testBarPositive" style="width: 5.5%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-56">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.any</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=374#src-374" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_any.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.any</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-72">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-72"></a>
            <input type="checkbox" id="cb-72" value="72" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_arrayEquals.html';">
            <span class="sortValue">0.055155877</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="94,5% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="5,5% Covered" class="barPositive testBarPositive" style="width: 5.5%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-72">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.arrayEquals</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=400#src-400" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_arrayEquals.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.arrayEquals</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-401">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-401"></a>
            <input type="checkbox" id="cb-401" value="401" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_constraints.html';">
            <span class="sortValue">0.055155877</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="94,5% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="5,5% Covered" class="barPositive testBarPositive" style="width: 5.5%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-401">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.constraints</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=76#src-76" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_constraints.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.constraints</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-392">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-392"></a>
            <input type="checkbox" id="cb-392" value="392" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_andOverloaded.html';">
            <span class="sortValue">0.055155877</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="94,5% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="5,5% Covered" class="barPositive testBarPositive" style="width: 5.5%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-392">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.andOverloaded</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=114#src-114" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_andOverloaded.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.andOverloaded</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-431">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-431"></a>
            <input type="checkbox" id="cb-431" value="431" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_notOverloaded.html';">
            <span class="sortValue">0.055155877</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="94,5% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="5,5% Covered" class="barPositive testBarPositive" style="width: 5.5%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-431">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.notOverloaded</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=168#src-168" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_notOverloaded.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.notOverloaded</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-446">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-446"></a>
            <input type="checkbox" id="cb-446" value="446" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_greaterThanOverloaded.html';">
            <span class="sortValue">0.040767387</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="95,9% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="4,1% Covered" class="barPositive testBarPositive" style="width: 4.1%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-446">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=254#src-254" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_greaterThanOverloaded.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-405">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-405"></a>
            <input type="checkbox" id="cb-405" value="405" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_lessThanOverloaded.html';">
            <span class="sortValue">0.040767387</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="95,9% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="4,1% Covered" class="barPositive testBarPositive" style="width: 4.1%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-405">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=214#src-214" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_lessThanOverloaded.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-455">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-455"></a>
            <input type="checkbox" id="cb-455" value="455" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_greaterOrEqualOverloaded.html';">
            <span class="sortValue">0.040767387</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="95,9% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="4,1% Covered" class="barPositive testBarPositive" style="width: 4.1%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-455">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=234#src-234" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_greaterOrEqualOverloaded.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-410">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-410"></a>
            <input type="checkbox" id="cb-410" value="410" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_lessOrEqualOverloaded.html';">
            <span class="sortValue">0.040767387</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="95,9% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="4,1% Covered" class="barPositive testBarPositive" style="width: 4.1%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-410">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=194#src-194" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_lessOrEqualOverloaded.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-164">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-164"></a>
            <input type="checkbox" id="cb-164" value="164" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_equalsWithDelta.html';">
            <span class="sortValue">0.038369305</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="96,2% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="3,8% Covered" class="barPositive testBarPositive" style="width: 3.8%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-164">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.equalsWithDelta</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=600#src-600" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_equalsWithDelta.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.equalsWithDelta</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-177">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-177"></a>
            <input type="checkbox" id="cb-177" value="177" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_testSame.html';">
            <span class="sortValue">0.026378896</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="97,4% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="2,6% Covered" class="barPositive testBarPositive" style="width: 2.6%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-177">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.testSame</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=623#src-623" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_testSame.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.testSame</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-373">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-373"></a>
            <input type="checkbox" id="cb-373" value="373" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_equalsMissing.html';">
            <span class="sortValue">0.026378896</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="97,4% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="2,6% Covered" class="barPositive testBarPositive" style="width: 2.6%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-373">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.equalsMissing</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=30#src-30" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_equalsMissing.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.equalsMissing</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-3">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-3"></a>
            <input type="checkbox" id="cb-3" value="3" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_greaterOrEqual.html';">
            <span class="sortValue">0.023980815</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="97,6% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="2,4% Covered" class="barPositive testBarPositive" style="width: 2.4%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-3">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.greaterOrEqual</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=426#src-426" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_greaterOrEqual.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.greaterOrEqual</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-6">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-6"></a>
            <input type="checkbox" id="cb-6" value="6" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_greaterThan.html';">
            <span class="sortValue">0.023980815</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="97,6% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="2,4% Covered" class="barPositive testBarPositive" style="width: 2.4%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-6">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.greaterThan</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=442#src-442" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_greaterThan.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.greaterThan</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-8">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-8"></a>
            <input type="checkbox" id="cb-8" value="8" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_lessOrEqual.html';">
            <span class="sortValue">0.023980815</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="97,6% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="2,4% Covered" class="barPositive testBarPositive" style="width: 2.4%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-8">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.lessOrEqual</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=458#src-458" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_lessOrEqual.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.lessOrEqual</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-10">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-10"></a>
            <input type="checkbox" id="cb-10" value="10" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_lessThan.html';">
            <span class="sortValue">0.023980815</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="97,6% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="2,4% Covered" class="barPositive testBarPositive" style="width: 2.4%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-10">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.lessThan</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=474#src-474" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_lessThan.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.lessThan</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-19">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-19"></a>
            <input type="checkbox" id="cb-19" value="19" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_testOr.html';">
            <span class="sortValue">0.019184653</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="98,1% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="1,9% Covered" class="barPositive testBarPositive" style="width: 1.9%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-19">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.testOr</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=490#src-490" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_testOr.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.testOr</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-145">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-145"></a>
            <input type="checkbox" id="cb-145" value="145" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_testNotNull.html';">
            <span class="sortValue">0.016786572</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="98,3% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="1,7% Covered" class="barPositive testBarPositive" style="width: 1.7%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-145">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.testNotNull</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=519#src-519" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_testNotNull.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.testNotNull</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-143">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-143"></a>
            <input type="checkbox" id="cb-143" value="143" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_testFind.html';">
            <span class="sortValue">0.016786572</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="98,3% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="1,7% Covered" class="barPositive testBarPositive" style="width: 1.7%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-143">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.testFind</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=534#src-534" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_testFind.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.testFind</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-156">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-156"></a>
            <input type="checkbox" id="cb-156" value="156" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_testContains.html';">
            <span class="sortValue">0.016786572</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="98,3% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="1,7% Covered" class="barPositive testBarPositive" style="width: 1.7%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-156">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.testContains</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=561#src-561" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_testContains.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.testContains</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-25">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-25"></a>
            <input type="checkbox" id="cb-25" value="25" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_testNull.html';">
            <span class="sortValue">0.016786572</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="98,3% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="1,7% Covered" class="barPositive testBarPositive" style="width: 1.7%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-25">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.testNull</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=504#src-504" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_testNull.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.testNull</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-136">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-136"></a>
            <input type="checkbox" id="cb-136" value="136" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_testMatches.html';">
            <span class="sortValue">0.016786572</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="98,3% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="1,7% Covered" class="barPositive testBarPositive" style="width: 1.7%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-136">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.testMatches</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=547#src-547" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_testMatches.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.testMatches</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-358">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-358"></a>
            <input type="checkbox" id="cb-358" value="358" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_equals.html';">
            <span class="sortValue">0.016786572</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="98,3% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="1,7% Covered" class="barPositive testBarPositive" style="width: 1.7%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-358">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.equals</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=63#src-63" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_equals.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.equals</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-149">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-149"></a>
            <input type="checkbox" id="cb-149" value="149" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_testStartsWith.html';">
            <span class="sortValue">0.016786572</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="98,3% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="1,7% Covered" class="barPositive testBarPositive" style="width: 1.7%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-149">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.testStartsWith</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=574#src-574" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_testStartsWith.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.testStartsWith</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-169">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-169"></a>
            <input type="checkbox" id="cb-169" value="169" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_testEndsWith.html';">
            <span class="sortValue">0.016786572</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="98,3% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="1,7% Covered" class="barPositive testBarPositive" style="width: 1.7%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-169">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.testEndsWith</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=587#src-587" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_testEndsWith.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.testEndsWith</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-364">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-364"></a>
            <input type="checkbox" id="cb-364" value="364" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_differentConstraintsOnSameCall.html';">
            <span class="sortValue">0.01438849</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="98,6% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="1,4% Covered" class="barPositive testBarPositive" style="width: 1.4%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-364">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=54#src-54" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_differentConstraintsOnSameCall.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
        <tr id="test-444">
        <td class="graphPercent graphPercentLeft" align="center" title="checkbox">
            <a name="testA-444"></a>
            <input type="checkbox" id="cb-444" value="444" name="testMethod" onclick="hiLightByTest(this.value, this.checked); return true;"/>
        </td>
        <td class="graphPercent link" onclick="window.location.href='../../../org/easymock/tests2/UsageConstraintsTest_cmpTo.html';">
            <span class="sortValue">0.0119904075</span>
                        <div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="98,8% Not Covered"  style="min-width: 40px;"  class="barNegative testBarNegative">
       <div title="1,2% Covered" class="barPositive testBarPositive" style="width: 1.2%"></div>
    </div>
</div>        </td>
        <td class="testCase" id="tc-444">
            <span class="sortValue">org.easymock.tests2.UsageConstraintsTest.cmpTo</span>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest.html?line=274#src-274" title="View Test Source"><img class="icon" alt="test" src="../../../img/test.gif"/></a>
            <a href="../../../org/easymock/tests2/UsageConstraintsTest_cmpTo.html" title="Test Summary Page">org.easymock.tests2.UsageConstraintsTest.cmpTo</a>
        </td>
        <td class="graphPercent">
                  <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
          </td>

    </tr>
    
</tbody>
<tbody><tr><td class="hbreak" colspan="4">&nbsp;</td></tr></tbody>
</table>

<table cellspacing="0" cellpadding="0" class="srcView">
<tbody>
<tr><td colspan="2" class="sortable methodToggle"><label onkeyup="return help_src_file_expandall_src;" onclick="toggleAllInlineMethods(this); return false;" id="method-expander">Collapse All</label></td><th></th></tr>
</tbody>
<tbody>
        

<tr id="l1">
<td align="right" class="lineCount NoHilight">1</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-1" class="srcLine"><span class="comment">/*</span></span></td>
</tr>
        

<tr id="l2">
<td align="right" class="lineCount NoHilight">2</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-2" class="srcLine"><span class="comment"> * Copyright (c) 2001-2008 OFFIS, Tammo Freese.</span></span></td>
</tr>
        

<tr id="l3">
<td align="right" class="lineCount NoHilight">3</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-3" class="srcLine"><span class="comment"> * This program is made available under the terms of the MIT License.</span></span></td>
</tr>
        

<tr id="l4">
<td align="right" class="lineCount NoHilight">4</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-4" class="srcLine"><span class="comment"> */</span></span></td>
</tr>
        

<tr id="l5">
<td align="right" class="lineCount NoHilight">5</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-5" class="srcLine"><span class="keyword">package</span> org.<a href="../../easymock/pkg-summary.html">easymock</a>.<a href="../tests2/pkg-summary.html">tests2</a>;</span></td>
</tr>
        

<tr id="l6">
<td align="right" class="lineCount NoHilight">6</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-6" class="srcLine"></span></td>
</tr>
        

<tr id="l7">
<td align="right" class="lineCount NoHilight">7</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-7" class="srcLine"><span class="keyword">import</span> <span class="keyword">static</span> org.easymock.EasyMock.*;</span></td>
</tr>
        

<tr id="l8">
<td align="right" class="lineCount NoHilight">8</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-8" class="srcLine"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span></td>
</tr>
        

<tr id="l9">
<td align="right" class="lineCount NoHilight">9</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-9" class="srcLine"></span></td>
</tr>
        

<tr id="l10">
<td align="right" class="lineCount NoHilight">10</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-10" class="srcLine"><span class="keyword">import</span> java.math.BigDecimal;</span></td>
</tr>
        

<tr id="l11">
<td align="right" class="lineCount NoHilight">11</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-11" class="srcLine"><span class="keyword">import</span> java.util.Collections;</span></td>
</tr>
        

<tr id="l12">
<td align="right" class="lineCount NoHilight">12</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-12" class="srcLine"><span class="keyword">import</span> java.util.Comparator;</span></td>
</tr>
        

<tr id="l13">
<td align="right" class="lineCount NoHilight">13</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-13" class="srcLine"><span class="keyword">import</span> java.util.List;</span></td>
</tr>
        

<tr id="l14">
<td align="right" class="lineCount NoHilight">14</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-14" class="srcLine"></span></td>
</tr>
        

<tr id="l15">
<td align="right" class="lineCount NoHilight">15</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-15" class="srcLine"><span class="keyword">import</span> org.<a href="../../easymock/pkg-summary.html">easymock</a>.<a href="../../../org/easymock/EasyMock.html#EasyMock">EasyMock</a>;</span></td>
</tr>
        

<tr id="l16">
<td align="right" class="lineCount NoHilight">16</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-16" class="srcLine"><span class="keyword">import</span> org.<a href="../../easymock/pkg-summary.html">easymock</a>.<a href="../../../org/easymock/LogicalOperator.html#LogicalOperator">LogicalOperator</a>;</span></td>
</tr>
        

<tr id="l17">
<td align="right" class="lineCount NoHilight">17</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-17" class="srcLine"><span class="keyword">import</span> org.<a href="../../easymock/pkg-summary.html">easymock</a>.<a href="../internal/pkg-summary.html">internal</a>.<a href="../internal/matchers/pkg-summary.html">matchers</a>.<a href="../../../org/easymock/internal/matchers/Equals.html#Equals">Equals</a>;</span></td>
</tr>
        

<tr id="l18">
<td align="right" class="lineCount NoHilight">18</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-18" class="srcLine"><span class="keyword">import</span> org.<a href="../../easymock/pkg-summary.html">easymock</a>.<a href="../tests/pkg-summary.html">tests</a>.<a href="../../../org/easymock/tests/IMethods.html#IMethods">IMethods</a>;</span></td>
</tr>
        

<tr id="l19">
<td align="right" class="lineCount NoHilight">19</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-19" class="srcLine"><span class="keyword">import</span> org.junit.Before;</span></td>
</tr>
        

<tr id="l20">
<td align="right" class="lineCount NoHilight">20</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-20" class="srcLine"><span class="keyword">import</span> org.junit.Test;</span></td>
</tr>
        

<tr id="l21">
<td align="right" class="lineCount NoHilight">21</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-21" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="22" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-22' onclick="toggleInlineStats(this, 'inlinestats-22');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-22" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-22'), 'inlinestats-22');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="2,9% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="97,1% Covered" class="barPositive barPositive" style="width: 97.1%"></div>
    </div>
</div></td><td>97,1%</td>
           <td class="inlineStat">Uncovered Elements: 12 (413)</td>
           <td class="inlineStat">Complexity: 45</td>
           <td class="inlineStat">Complexity Density: 0,12</td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l22">
<td align="right" class="lineCount NoHilight">22</td>
<td align="right" class="coverageCount NoHilight "
           onclick="return showTestsForLine(this, 22, 'Tests that hit &lt;span class=\'srcFragment\'&gt; UsageConstraintsTest &lt;/span&gt;');"
       >
    &nbsp;&nbsp;

</td>
<td class="  srcCell" id="id-22" >
    <span class="spacer"></span><span id="src-22" class="srcLineClassStart"><span class="keyword">public</span> <span class="keyword">class</span> UsageConstraintsTest {</span></td>
</tr>
        

<tr id="l23">
<td align="right" class="lineCount NoHilight">23</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-23" class="srcLine">    <span class="keyword">private</span> IMethods mock;</span></td>
</tr>
        

<tr id="l24">
<td align="right" class="lineCount NoHilight">24</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-24" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="25" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-25' onclick="toggleInlineStats(this, 'inlinestats-25');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-25" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-25'), 'inlinestats-25');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (1)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 1</td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l25">
<td align="right" class="lineCount Good">25</td>
<td align="right" class="coverageCount Good missedByTest"
            >
    <a title="Line 25, Col 5: method entered 29 times." class="nolink">&nbsp;29</a>

</td>
<td class="  methodStart  srcCell" id="id-25" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 25,28);" id="img-25" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-25" class="srcLine"><a class="nolink" title="Line 25, Col 5: method entered 29 times.">    @Before</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-25'), 25,28);" id="e25" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l26">
<td align="right" class="lineCount NoHilight">26</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-26" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> setUp() {</span></td>
</tr>
        

<tr id="l27">
<td align="right" class="lineCount Good">27</td>
<td align="right" class="coverageCount Good missedByTest"
         >
    <a title="Line 27, Col 9: statement executed 29 times." class="nolink">&nbsp;29</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-27" class="srcLine"><a class="nolink" title="Line 27, Col 9: statement executed 29 times.">        mock = createMock(IMethods.<span class="keyword">class</span>);</a></span></td>
</tr>
        

<tr id="l28">
<td align="right" class="lineCount NoHilight">28</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-28" class="srcLine">    }</span></td>
</tr>
        

<tr id="l29">
<td align="right" class="lineCount NoHilight">29</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-29" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="30" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-30' onclick="toggleInlineStats(this, 'inlinestats-30');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-30" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-30'), 'inlinestats-30');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="23,1% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="76,9% Covered" class="barPositive barPositive" style="width: 76.9%"></div>
    </div>
</div></td><td>76,9%</td>
           <td class="inlineStat">Uncovered Elements: 3 (13)</td>
           <td class="inlineStat">Complexity: 4</td>
           <td class="inlineStat">Complexity Density: 0,31</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l30">
<td align="right" class="lineCount Good">30</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 30, 'Tests that hit &lt;span class=\'srcFragment\'&gt; equalsMissing()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 30, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-30" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 30,52);" id="img-30" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-30" class="srcLine"><a class="nolink" title="Line 30, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-30'), 30,52);" id="e30" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l31">
<td align="right" class="lineCount NoHilight">31</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-31" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> equalsMissing() {</span></td>
</tr>
        

<tr id="l32">
<td align="right" class="lineCount Good">32</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 32, 'Tests that hit line # 32');"
    >
    <a title="Line 32, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-32" class="srcLine"><a class="nolink" title="Line 32, Col 9: statement executed 1 time.">        mock.simpleMethodWithArgument(not(eq(<span class="string">"asd"</span>)));</a></span></td>
</tr>
        

<tr id="l33">
<td align="right" class="lineCount Good">33</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 33, 'Tests that hit line # 33');"
    >
    <a title="Line 33, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-33" class="srcLine"><a class="nolink" title="Line 33, Col 9: statement executed 1 time.">        <span class="keyword">try</span> {</a></span></td>
</tr>
        

<tr id="l34">
<td align="right" class="lineCount Good">34</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 34, 'Tests that hit line # 34');"
    >
    <a title="Line 34, Col 13: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-34" class="srcLine"><a class="nolink" title="Line 34, Col 13: statement executed 1 time.">            mock.simpleMethodWithArgument(not(<span class="string">"jkl"</span>));</a></span></td>
</tr>
        

<tr id="l35">
<td align="right" class="lineCount Bad">35</td>
<td align="right" class="coverageCount Bad missedByTest"
         >
    <a title="Line 35, Col 13: statement not executed." class="nolink">&nbsp;0</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-35" class="srcLineHilight"><a class="nolink" title="Line 35, Col 13: statement not executed.">            fail();</a></span></td>
</tr>
        

<tr id="l36">
<td align="right" class="lineCount NoHilight">36</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-36" class="srcLine">        } <span class="keyword">catch</span> (IllegalStateException e) {</span></td>
</tr>
        

<tr id="l37">
<td align="right" class="lineCount Good">37</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 37, 'Tests that hit line # 37');"
    >
    <a title="Line 37, Col 13: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-37" class="srcLine"><a class="nolink" title="Line 37, Col 13: statement executed 1 time.">            assertEquals(<span class="string">"no matchers found."</span>, e.getMessage());</a></span></td>
</tr>
        

<tr id="l38">
<td align="right" class="lineCount NoHilight">38</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-38" class="srcLine">        }</span></td>
</tr>
        

<tr id="l39">
<td align="right" class="lineCount Good">39</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 39, 'Tests that hit line # 39');"
    >
    <a title="Line 39, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-39" class="srcLine"><a class="nolink" title="Line 39, Col 9: statement executed 1 time.">        <span class="keyword">try</span> {</a></span></td>
</tr>
        

<tr id="l40">
<td align="right" class="lineCount Good">40</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 40, 'Tests that hit line # 40');"
    >
    <a title="Line 40, Col 13: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-40" class="srcLine"><a class="nolink" title="Line 40, Col 13: statement executed 1 time.">            mock.simpleMethodWithArgument(or(eq(<span class="string">"jkl"</span>), <span class="string">"asd"</span>));</a></span></td>
</tr>
        

<tr id="l41">
<td align="right" class="lineCount Bad">41</td>
<td align="right" class="coverageCount Bad missedByTest"
         >
    <a title="Line 41, Col 13: statement not executed." class="nolink">&nbsp;0</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-41" class="srcLineHilight"><a class="nolink" title="Line 41, Col 13: statement not executed.">            fail();</a></span></td>
</tr>
        

<tr id="l42">
<td align="right" class="lineCount NoHilight">42</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-42" class="srcLine">        } <span class="keyword">catch</span> (IllegalStateException e) {</span></td>
</tr>
        

<tr id="l43">
<td align="right" class="lineCount Good">43</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 43, 'Tests that hit line # 43');"
    >
    <a title="Line 43, Col 13: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-43" class="srcLine"><a class="nolink" title="Line 43, Col 13: statement executed 1 time.">            assertEquals(<span class="string">"2 matchers expected, 1 recorded."</span>, e.getMessage());</a></span></td>
</tr>
        

<tr id="l44">
<td align="right" class="lineCount NoHilight">44</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-44" class="srcLine">        }</span></td>
</tr>
        

<tr id="l45">
<td align="right" class="lineCount Good">45</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 45, 'Tests that hit line # 45');"
    >
    <a title="Line 45, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-45" class="srcLine"><a class="nolink" title="Line 45, Col 9: statement executed 1 time.">        <span class="keyword">try</span> {</a></span></td>
</tr>
        

<tr id="l46">
<td align="right" class="lineCount Good">46</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 46, 'Tests that hit line # 46');"
    >
    <a title="Line 46, Col 13: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-46" class="srcLine"><a class="nolink" title="Line 46, Col 13: statement executed 1 time.">            mock.threeArgumentMethod(1, <span class="string">"asd"</span>, eq(<span class="string">"asd"</span>));</a></span></td>
</tr>
        

<tr id="l47">
<td align="right" class="lineCount Bad">47</td>
<td align="right" class="coverageCount Bad missedByTest"
         >
    <a title="Line 47, Col 13: statement not executed." class="nolink">&nbsp;0</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-47" class="srcLineHilight"><a class="nolink" title="Line 47, Col 13: statement not executed.">            fail();</a></span></td>
</tr>
        

<tr id="l48">
<td align="right" class="lineCount NoHilight">48</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-48" class="srcLine">        } <span class="keyword">catch</span> (IllegalStateException e) {</span></td>
</tr>
        

<tr id="l49">
<td align="right" class="lineCount Good">49</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 49, 'Tests that hit line # 49');"
    >
    <a title="Line 49, Col 13: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-49" class="srcLine"><a class="nolink" title="Line 49, Col 13: statement executed 1 time.">            assertEquals(<span class="string">"3 matchers expected, 1 recorded."</span>, e.getMessage());</a></span></td>
</tr>
        

<tr id="l50">
<td align="right" class="lineCount NoHilight">50</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-50" class="srcLine">        }</span></td>
</tr>
        

<tr id="l51">
<td align="right" class="lineCount NoHilight">51</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-51" class="srcLine"></span></td>
</tr>
        

<tr id="l52">
<td align="right" class="lineCount NoHilight">52</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-52" class="srcLine">    }</span></td>
</tr>
        

<tr id="l53">
<td align="right" class="lineCount NoHilight">53</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-53" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="54" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-54' onclick="toggleInlineStats(this, 'inlinestats-54');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-54" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-54'), 'inlinestats-54');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (5)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,2</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l54">
<td align="right" class="lineCount Good">54</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 54, 'Tests that hit &lt;span class=\'srcFragment\'&gt; differentConstraintsOnSameCall()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 54, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-54" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 54,61);" id="img-54" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-54" class="srcLine"><a class="nolink" title="Line 54, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-54'), 54,61);" id="e54" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l55">
<td align="right" class="lineCount NoHilight">55</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-55" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> differentConstraintsOnSameCall() {</span></td>
</tr>
        

<tr id="l56">
<td align="right" class="lineCount Good">56</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 56, 'Tests that hit line # 56');"
    >
    <a title="Line 56, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-56" class="srcLine"><a class="nolink" title="Line 56, Col 9: statement executed 1 time.">        mock.simpleMethodWithArgument((String) isNull());</a></span></td>
</tr>
        

<tr id="l57">
<td align="right" class="lineCount Good">57</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 57, 'Tests that hit line # 57');"
    >
    <a title="Line 57, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-57" class="srcLine"><a class="nolink" title="Line 57, Col 9: statement executed 1 time.">        mock.simpleMethodWithArgument((String) notNull());</a></span></td>
</tr>
        

<tr id="l58">
<td align="right" class="lineCount Good">58</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 58, 'Tests that hit line # 58');"
    >
    <a title="Line 58, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-58" class="srcLine"><a class="nolink" title="Line 58, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l59">
<td align="right" class="lineCount Good">59</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 59, 'Tests that hit line # 59');"
    >
    <a title="Line 59, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-59" class="srcLine"><a class="nolink" title="Line 59, Col 9: statement executed 1 time.">        mock.simpleMethodWithArgument(<span class="keyword">null</span>);</a></span></td>
</tr>
        

<tr id="l60">
<td align="right" class="lineCount Good">60</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 60, 'Tests that hit line # 60');"
    >
    <a title="Line 60, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-60" class="srcLine"><a class="nolink" title="Line 60, Col 9: statement executed 1 time.">        mock.simpleMethodWithArgument(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l61">
<td align="right" class="lineCount NoHilight">61</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-61" class="srcLine">    }</span></td>
</tr>
        

<tr id="l62">
<td align="right" class="lineCount NoHilight">62</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-62" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="63" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-63' onclick="toggleInlineStats(this, 'inlinestats-63');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-63" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-63'), 'inlinestats-63');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="14,3% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="85,7% Covered" class="barPositive barPositive" style="width: 85.7%"></div>
    </div>
</div></td><td>85,7%</td>
           <td class="inlineStat">Uncovered Elements: 1 (7)</td>
           <td class="inlineStat">Complexity: 2</td>
           <td class="inlineStat">Complexity Density: 0,29</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l63">
<td align="right" class="lineCount Good">63</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 63, 'Tests that hit &lt;span class=\'srcFragment\'&gt; equals()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 63, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-63" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 63,74);" id="img-63" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-63" class="srcLine"><a class="nolink" title="Line 63, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-63'), 63,74);" id="e63" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l64">
<td align="right" class="lineCount NoHilight">64</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-64" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> equals() {</span></td>
</tr>
        

<tr id="l65">
<td align="right" class="lineCount Good">65</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 65, 'Tests that hit line # 65');"
    >
    <a title="Line 65, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-65" class="srcLine"><a class="nolink" title="Line 65, Col 9: statement executed 1 time.">        assertEquals(<span class="keyword">new</span> Equals(<span class="keyword">null</span>), <span class="keyword">new</span> Equals(<span class="keyword">null</span>));</a></span></td>
</tr>
        

<tr id="l66">
<td align="right" class="lineCount Good">66</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 66, 'Tests that hit line # 66');"
    >
    <a title="Line 66, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-66" class="srcLine"><a class="nolink" title="Line 66, Col 9: statement executed 1 time.">        assertEquals(<span class="keyword">new</span> Equals(<span class="keyword">new</span> Integer(2)), <span class="keyword">new</span> Equals(<span class="keyword">new</span> Integer(2)));</a></span></td>
</tr>
        

<tr id="l67">
<td align="right" class="lineCount Good">67</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 67, 'Tests that hit line # 67');"
    >
    <a title="Line 67, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-67" class="srcLine"><a class="nolink" title="Line 67, Col 9: statement executed 1 time.">        assertFalse(<span class="keyword">new</span> Equals(<span class="keyword">null</span>).equals(<span class="keyword">null</span>));</a></span></td>
</tr>
        

<tr id="l68">
<td align="right" class="lineCount Good">68</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 68, 'Tests that hit line # 68');"
    >
    <a title="Line 68, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-68" class="srcLine"><a class="nolink" title="Line 68, Col 9: statement executed 1 time.">        assertFalse(<span class="keyword">new</span> Equals(<span class="keyword">null</span>).equals(<span class="string">"Test"</span>));</a></span></td>
</tr>
        

<tr id="l69">
<td align="right" class="lineCount Good">69</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 69, 'Tests that hit line # 69');"
    >
    <a title="Line 69, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-69" class="srcLine"><a class="nolink" title="Line 69, Col 9: statement executed 1 time.">        <span class="keyword">try</span> {</a></span></td>
</tr>
        

<tr id="l70">
<td align="right" class="lineCount Good">70</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 70, 'Tests that hit line # 70');"
    >
    <a title="Line 70, Col 13: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-70" class="srcLine"><a class="nolink" title="Line 70, Col 13: statement executed 1 time.">            <span class="keyword">new</span> Equals(<span class="keyword">null</span>).hashCode();</a></span></td>
</tr>
        

<tr id="l71">
<td align="right" class="lineCount Bad">71</td>
<td align="right" class="coverageCount Bad missedByTest"
         >
    <a title="Line 71, Col 13: statement not executed." class="nolink">&nbsp;0</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-71" class="srcLineHilight"><a class="nolink" title="Line 71, Col 13: statement not executed.">            fail();</a></span></td>
</tr>
        

<tr id="l72">
<td align="right" class="lineCount NoHilight">72</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-72" class="srcLine">        } <span class="keyword">catch</span> (UnsupportedOperationException expected) {</span></td>
</tr>
        

<tr id="l73">
<td align="right" class="lineCount NoHilight">73</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-73" class="srcLine">        }</span></td>
</tr>
        

<tr id="l74">
<td align="right" class="lineCount NoHilight">74</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-74" class="srcLine">    }</span></td>
</tr>
        

<tr id="l75">
<td align="right" class="lineCount NoHilight">75</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-75" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="76" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-76' onclick="toggleInlineStats(this, 'inlinestats-76');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-76" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-76'), 'inlinestats-76');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="21,4% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="78,6% Covered" class="barPositive barPositive" style="width: 78.6%"></div>
    </div>
</div></td><td>78,6%</td>
           <td class="inlineStat">Uncovered Elements: 6 (28)</td>
           <td class="inlineStat">Complexity: 7</td>
           <td class="inlineStat">Complexity Density: 0,32</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l76">
<td align="right" class="lineCount Good">76</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 76, 'Tests that hit &lt;span class=\'srcFragment\'&gt; constraints()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 76, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-76" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 76,112);" id="img-76" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-76" class="srcLine"><a class="nolink" title="Line 76, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-76'), 76,112);" id="e76" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l77">
<td align="right" class="lineCount NoHilight">77</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-77" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> constraints() {</span></td>
</tr>
        

<tr id="l78">
<td align="right" class="lineCount Good">78</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 78, 'Tests that hit line # 78');"
    >
    <a title="Line 78, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-78" class="srcLine"><a class="nolink" title="Line 78, Col 9: statement executed 1 time.">        expect(</a></span></td>
</tr>
        

<tr id="l79">
<td align="right" class="lineCount NoHilight">79</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-79" class="srcLine">                mock.threeArgumentMethod(and(geq(7), leq(10)),</span></td>
</tr>
        

<tr id="l80">
<td align="right" class="lineCount NoHilight">80</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-80" class="srcLine">                        isA(String.<span class="keyword">class</span>), contains(<span class="string">"123"</span>))).andReturn(<span class="string">"456"</span>)</span></td>
</tr>
        

<tr id="l81">
<td align="right" class="lineCount NoHilight">81</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-81" class="srcLine">                .atLeastOnce();</span></td>
</tr>
        

<tr id="l82">
<td align="right" class="lineCount Good">82</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 82, 'Tests that hit line # 82');"
    >
    <a title="Line 82, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-82" class="srcLine"><a class="nolink" title="Line 82, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l83">
<td align="right" class="lineCount Good">83</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 83, 'Tests that hit line # 83');"
    >
    <a title="Line 83, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-83" class="srcLine"><a class="nolink" title="Line 83, Col 9: statement executed 1 time.">        <span class="keyword">boolean</span> failed = <span class="keyword">false</span>;</a></span></td>
</tr>
        

<tr id="l84">
<td align="right" class="lineCount Good">84</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 84, 'Tests that hit line # 84');"
    >
    <a title="Line 84, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-84" class="srcLine"><a class="nolink" title="Line 84, Col 9: statement executed 1 time.">        <span class="keyword">try</span> {</a></span></td>
</tr>
        

<tr id="l85">
<td align="right" class="lineCount Good">85</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 85, 'Tests that hit line # 85');"
    >
    <a title="Line 85, Col 13: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-85" class="srcLine"><a class="nolink" title="Line 85, Col 13: statement executed 1 time.">            mock.threeArgumentMethod(11, <span class="string">""</span>, <span class="string">"01234"</span>);</a></span></td>
</tr>
        

<tr id="l86">
<td align="right" class="lineCount NoHilight">86</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-86" class="srcLine">        } <span class="keyword">catch</span> (AssertionError expected) {</span></td>
</tr>
        

<tr id="l87">
<td align="right" class="lineCount Good">87</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 87, 'Tests that hit line # 87');"
    >
    <a title="Line 87, Col 13: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-87" class="srcLine"><a class="nolink" title="Line 87, Col 13: statement executed 1 time.">            failed = <span class="keyword">true</span>;</a></span></td>
</tr>
        

<tr id="l88">
<td align="right" class="lineCount NoHilight">88</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-88" class="srcLine">        }</span></td>
</tr>
        

<tr id="l89">
<td align="right" class="lineCount Bad">89</td>
<td align="right" class="coverageCount Bad hitByTest"
           onclick="return showTestsForLine(this, 89, 'Tests that hit line # 89');"
    >
    <a title="Line 89, Col 12: true branch executed 0 times, false branch executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-89" class="srcLineHilight"><a class="nolink" title="Line 89, Col 12: true branch executed 0 times, false branch executed 1 time.">        <span class="keyword">if</span> (!failed) {</a></span></td>
</tr>
        

<tr id="l90">
<td align="right" class="lineCount Bad">90</td>
<td align="right" class="coverageCount Bad missedByTest"
         >
    <a title="Line 90, Col 13: statement not executed." class="nolink">&nbsp;0</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-90" class="srcLineHilight"><a class="nolink" title="Line 90, Col 13: statement not executed.">            fail();</a></span></td>
</tr>
        

<tr id="l91">
<td align="right" class="lineCount NoHilight">91</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-91" class="srcLine">        }</span></td>
</tr>
        

<tr id="l92">
<td align="right" class="lineCount Good">92</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 92, 'Tests that hit line # 92');"
    >
    <a title="Line 92, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-92" class="srcLine"><a class="nolink" title="Line 92, Col 9: statement executed 1 time.">        failed = <span class="keyword">false</span>;</a></span></td>
</tr>
        

<tr id="l93">
<td align="right" class="lineCount Good">93</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 93, 'Tests that hit line # 93');"
    >
    <a title="Line 93, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-93" class="srcLine"><a class="nolink" title="Line 93, Col 9: statement executed 1 time.">        <span class="keyword">try</span> {</a></span></td>
</tr>
        

<tr id="l94">
<td align="right" class="lineCount Good">94</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 94, 'Tests that hit line # 94');"
    >
    <a title="Line 94, Col 13: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-94" class="srcLine"><a class="nolink" title="Line 94, Col 13: statement executed 1 time.">            mock.threeArgumentMethod(8, <span class="keyword">new</span> Object(), <span class="string">"01234"</span>);</a></span></td>
</tr>
        

<tr id="l95">
<td align="right" class="lineCount NoHilight">95</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-95" class="srcLine">        } <span class="keyword">catch</span> (AssertionError expected) {</span></td>
</tr>
        

<tr id="l96">
<td align="right" class="lineCount Good">96</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 96, 'Tests that hit line # 96');"
    >
    <a title="Line 96, Col 13: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-96" class="srcLine"><a class="nolink" title="Line 96, Col 13: statement executed 1 time.">            failed = <span class="keyword">true</span>;</a></span></td>
</tr>
        

<tr id="l97">
<td align="right" class="lineCount NoHilight">97</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-97" class="srcLine">        }</span></td>
</tr>
        

<tr id="l98">
<td align="right" class="lineCount Bad">98</td>
<td align="right" class="coverageCount Bad hitByTest"
           onclick="return showTestsForLine(this, 98, 'Tests that hit line # 98');"
    >
    <a title="Line 98, Col 12: true branch executed 0 times, false branch executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-98" class="srcLineHilight"><a class="nolink" title="Line 98, Col 12: true branch executed 0 times, false branch executed 1 time.">        <span class="keyword">if</span> (!failed) {</a></span></td>
</tr>
        

<tr id="l99">
<td align="right" class="lineCount Bad">99</td>
<td align="right" class="coverageCount Bad missedByTest"
         >
    <a title="Line 99, Col 13: statement not executed." class="nolink">&nbsp;0</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-99" class="srcLineHilight"><a class="nolink" title="Line 99, Col 13: statement not executed.">            fail();</a></span></td>
</tr>
        

<tr id="l100">
<td align="right" class="lineCount NoHilight">100</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-100" class="srcLine">        }</span></td>
</tr>
        

<tr id="l101">
<td align="right" class="lineCount Good">101</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 101, 'Tests that hit line # 101');"
    >
    <a title="Line 101, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-101" class="srcLine"><a class="nolink" title="Line 101, Col 9: statement executed 1 time.">        failed = <span class="keyword">false</span>;</a></span></td>
</tr>
        

<tr id="l102">
<td align="right" class="lineCount Good">102</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 102, 'Tests that hit line # 102');"
    >
    <a title="Line 102, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-102" class="srcLine"><a class="nolink" title="Line 102, Col 9: statement executed 1 time.">        <span class="keyword">try</span> {</a></span></td>
</tr>
        

<tr id="l103">
<td align="right" class="lineCount Good">103</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 103, 'Tests that hit line # 103');"
    >
    <a title="Line 103, Col 13: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-103" class="srcLine"><a class="nolink" title="Line 103, Col 13: statement executed 1 time.">            mock.threeArgumentMethod(8, <span class="string">""</span>, <span class="string">"no match"</span>);</a></span></td>
</tr>
        

<tr id="l104">
<td align="right" class="lineCount NoHilight">104</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-104" class="srcLine">        } <span class="keyword">catch</span> (AssertionError expected) {</span></td>
</tr>
        

<tr id="l105">
<td align="right" class="lineCount Good">105</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 105, 'Tests that hit line # 105');"
    >
    <a title="Line 105, Col 13: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-105" class="srcLine"><a class="nolink" title="Line 105, Col 13: statement executed 1 time.">            failed = <span class="keyword">true</span>;</a></span></td>
</tr>
        

<tr id="l106">
<td align="right" class="lineCount NoHilight">106</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-106" class="srcLine">        }</span></td>
</tr>
        

<tr id="l107">
<td align="right" class="lineCount Bad">107</td>
<td align="right" class="coverageCount Bad hitByTest"
           onclick="return showTestsForLine(this, 107, 'Tests that hit line # 107');"
    >
    <a title="Line 107, Col 12: true branch executed 0 times, false branch executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-107" class="srcLineHilight"><a class="nolink" title="Line 107, Col 12: true branch executed 0 times, false branch executed 1 time.">        <span class="keyword">if</span> (!failed) {</a></span></td>
</tr>
        

<tr id="l108">
<td align="right" class="lineCount Bad">108</td>
<td align="right" class="coverageCount Bad missedByTest"
         >
    <a title="Line 108, Col 13: statement not executed." class="nolink">&nbsp;0</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-108" class="srcLineHilight"><a class="nolink" title="Line 108, Col 13: statement not executed.">            fail();</a></span></td>
</tr>
        

<tr id="l109">
<td align="right" class="lineCount NoHilight">109</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-109" class="srcLine">        }</span></td>
</tr>
        

<tr id="l110">
<td align="right" class="lineCount Good">110</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 110, 'Tests that hit line # 110');"
    >
    <a title="Line 110, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-110" class="srcLine"><a class="nolink" title="Line 110, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"456"</span>, mock.threeArgumentMethod(8, <span class="string">""</span>, <span class="string">"01234"</span>));</a></span></td>
</tr>
        

<tr id="l111">
<td align="right" class="lineCount Good">111</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 111, 'Tests that hit line # 111');"
    >
    <a title="Line 111, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-111" class="srcLine"><a class="nolink" title="Line 111, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l112">
<td align="right" class="lineCount NoHilight">112</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-112" class="srcLine">    }</span></td>
</tr>
        

<tr id="l113">
<td align="right" class="lineCount NoHilight">113</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-113" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="114" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-114' onclick="toggleInlineStats(this, 'inlinestats-114');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-114" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-114'), 'inlinestats-114');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (22)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,05</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l114">
<td align="right" class="lineCount Good">114</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 114, 'Tests that hit &lt;span class=\'srcFragment\'&gt; andOverloaded()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 114, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-114" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 114,139);" id="img-114" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-114" class="srcLine"><a class="nolink" title="Line 114, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-114'), 114,139);" id="e114" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l115">
<td align="right" class="lineCount NoHilight">115</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-115" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> andOverloaded() {</span></td>
</tr>
        

<tr id="l116">
<td align="right" class="lineCount Good">116</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 116, 'Tests that hit line # 116');"
    >
    <a title="Line 116, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-116" class="srcLine"><a class="nolink" title="Line 116, Col 9: statement executed 1 time.">        expect(mock.oneArg(and(eq(<span class="keyword">false</span>), eq(<span class="keyword">false</span>)))).andReturn(<span class="string">"0"</span>);</a></span></td>
</tr>
        

<tr id="l117">
<td align="right" class="lineCount Good">117</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 117, 'Tests that hit line # 117');"
    >
    <a title="Line 117, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-117" class="srcLine"><a class="nolink" title="Line 117, Col 9: statement executed 1 time.">        expect(mock.oneArg(and(eq((<span class="keyword">byte</span>) 1), eq((<span class="keyword">byte</span>) 1)))).andReturn(<span class="string">"1"</span>);</a></span></td>
</tr>
        

<tr id="l118">
<td align="right" class="lineCount Good">118</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 118, 'Tests that hit line # 118');"
    >
    <a title="Line 118, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-118" class="srcLine"><a class="nolink" title="Line 118, Col 9: statement executed 1 time.">        expect(mock.oneArg(and(eq('a'), eq('a')))).andReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l119">
<td align="right" class="lineCount Good">119</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 119, 'Tests that hit line # 119');"
    >
    <a title="Line 119, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-119" class="srcLine"><a class="nolink" title="Line 119, Col 9: statement executed 1 time.">        expect(mock.oneArg(and(eq((<span class="keyword">double</span>) 1), eq((<span class="keyword">double</span>) 1)))).andReturn(<span class="string">"3"</span>);</a></span></td>
</tr>
        

<tr id="l120">
<td align="right" class="lineCount Good">120</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 120, 'Tests that hit line # 120');"
    >
    <a title="Line 120, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-120" class="srcLine"><a class="nolink" title="Line 120, Col 9: statement executed 1 time.">        expect(mock.oneArg(and(eq((<span class="keyword">float</span>) 1), eq((<span class="keyword">float</span>) 1)))).andReturn(<span class="string">"4"</span>);</a></span></td>
</tr>
        

<tr id="l121">
<td align="right" class="lineCount Good">121</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 121, 'Tests that hit line # 121');"
    >
    <a title="Line 121, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-121" class="srcLine"><a class="nolink" title="Line 121, Col 9: statement executed 1 time.">        expect(mock.oneArg(and(eq((<span class="keyword">int</span>) 1), eq((<span class="keyword">int</span>) 1)))).andReturn(<span class="string">"5"</span>);</a></span></td>
</tr>
        

<tr id="l122">
<td align="right" class="lineCount Good">122</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 122, 'Tests that hit line # 122');"
    >
    <a title="Line 122, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-122" class="srcLine"><a class="nolink" title="Line 122, Col 9: statement executed 1 time.">        expect(mock.oneArg(and(eq((<span class="keyword">long</span>) 1), eq((<span class="keyword">long</span>) 1)))).andReturn(<span class="string">"6"</span>);</a></span></td>
</tr>
        

<tr id="l123">
<td align="right" class="lineCount Good">123</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 123, 'Tests that hit line # 123');"
    >
    <a title="Line 123, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-123" class="srcLine"><a class="nolink" title="Line 123, Col 9: statement executed 1 time.">        expect(mock.oneArg(and(eq((<span class="keyword">short</span>) 1), eq((<span class="keyword">short</span>) 1)))).andReturn(<span class="string">"7"</span>);</a></span></td>
</tr>
        

<tr id="l124">
<td align="right" class="lineCount Good">124</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 124, 'Tests that hit line # 124');"
    >
    <a title="Line 124, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-124" class="srcLine"><a class="nolink" title="Line 124, Col 9: statement executed 1 time.">        expect(mock.oneArg(and(contains(<span class="string">"a"</span>), contains(<span class="string">"d"</span>)))).andReturn(<span class="string">"8"</span>);</a></span></td>
</tr>
        

<tr id="l125">
<td align="right" class="lineCount Good">125</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 125, 'Tests that hit line # 125');"
    >
    <a title="Line 125, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-125" class="srcLine"><a class="nolink" title="Line 125, Col 9: statement executed 1 time.">        expect(mock.oneArg(and(isA(Class.<span class="keyword">class</span>), eq(Object.<span class="keyword">class</span>)))).andReturn(</a></span></td>
</tr>
        

<tr id="l126">
<td align="right" class="lineCount NoHilight">126</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-126" class="srcLine">                <span class="string">"9"</span>);</span></td>
</tr>
        

<tr id="l127">
<td align="right" class="lineCount Good">127</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 127, 'Tests that hit line # 127');"
    >
    <a title="Line 127, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-127" class="srcLine"><a class="nolink" title="Line 127, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l128">
<td align="right" class="lineCount Good">128</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 128, 'Tests that hit line # 128');"
    >
    <a title="Line 128, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-128" class="srcLine"><a class="nolink" title="Line 128, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"9"</span>, mock.oneArg(Object.<span class="keyword">class</span>));</a></span></td>
</tr>
        

<tr id="l129">
<td align="right" class="lineCount Good">129</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 129, 'Tests that hit line # 129');"
    >
    <a title="Line 129, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-129" class="srcLine"><a class="nolink" title="Line 129, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"0"</span>, mock.oneArg(<span class="keyword">false</span>));</a></span></td>
</tr>
        

<tr id="l130">
<td align="right" class="lineCount Good">130</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 130, 'Tests that hit line # 130');"
    >
    <a title="Line 130, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-130" class="srcLine"><a class="nolink" title="Line 130, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg((<span class="keyword">byte</span>) 1));</a></span></td>
</tr>
        

<tr id="l131">
<td align="right" class="lineCount Good">131</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 131, 'Tests that hit line # 131');"
    >
    <a title="Line 131, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-131" class="srcLine"><a class="nolink" title="Line 131, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg('a'));</a></span></td>
</tr>
        

<tr id="l132">
<td align="right" class="lineCount Good">132</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 132, 'Tests that hit line # 132');"
    >
    <a title="Line 132, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-132" class="srcLine"><a class="nolink" title="Line 132, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"3"</span>, mock.oneArg((<span class="keyword">double</span>) 1));</a></span></td>
</tr>
        

<tr id="l133">
<td align="right" class="lineCount Good">133</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 133, 'Tests that hit line # 133');"
    >
    <a title="Line 133, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-133" class="srcLine"><a class="nolink" title="Line 133, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"7"</span>, mock.oneArg((<span class="keyword">short</span>) 1));</a></span></td>
</tr>
        

<tr id="l134">
<td align="right" class="lineCount Good">134</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 134, 'Tests that hit line # 134');"
    >
    <a title="Line 134, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-134" class="srcLine"><a class="nolink" title="Line 134, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"8"</span>, mock.oneArg(<span class="string">"abcde"</span>));</a></span></td>
</tr>
        

<tr id="l135">
<td align="right" class="lineCount Good">135</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 135, 'Tests that hit line # 135');"
    >
    <a title="Line 135, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-135" class="srcLine"><a class="nolink" title="Line 135, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"4"</span>, mock.oneArg((<span class="keyword">float</span>) 1));</a></span></td>
</tr>
        

<tr id="l136">
<td align="right" class="lineCount Good">136</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 136, 'Tests that hit line # 136');"
    >
    <a title="Line 136, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-136" class="srcLine"><a class="nolink" title="Line 136, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"5"</span>, mock.oneArg((<span class="keyword">int</span>) 1));</a></span></td>
</tr>
        

<tr id="l137">
<td align="right" class="lineCount Good">137</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 137, 'Tests that hit line # 137');"
    >
    <a title="Line 137, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-137" class="srcLine"><a class="nolink" title="Line 137, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"6"</span>, mock.oneArg((<span class="keyword">long</span>) 1));</a></span></td>
</tr>
        

<tr id="l138">
<td align="right" class="lineCount Good">138</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 138, 'Tests that hit line # 138');"
    >
    <a title="Line 138, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-138" class="srcLine"><a class="nolink" title="Line 138, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l139">
<td align="right" class="lineCount NoHilight">139</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-139" class="srcLine">    }</span></td>
</tr>
        

<tr id="l140">
<td align="right" class="lineCount NoHilight">140</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-140" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="141" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-141' onclick="toggleInlineStats(this, 'inlinestats-141');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-141" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-141'), 'inlinestats-141');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (22)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,05</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l141">
<td align="right" class="lineCount Good">141</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 141, 'Tests that hit &lt;span class=\'srcFragment\'&gt; orOverloaded()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 141, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-141" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 141,166);" id="img-141" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-141" class="srcLine"><a class="nolink" title="Line 141, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-141'), 141,166);" id="e141" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l142">
<td align="right" class="lineCount NoHilight">142</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-142" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> orOverloaded() {</span></td>
</tr>
        

<tr id="l143">
<td align="right" class="lineCount Good">143</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 143, 'Tests that hit line # 143');"
    >
    <a title="Line 143, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-143" class="srcLine"><a class="nolink" title="Line 143, Col 9: statement executed 1 time.">        expect(mock.oneArg(or(eq(<span class="keyword">false</span>), eq(<span class="keyword">true</span>)))).andReturn(<span class="string">"0"</span>);</a></span></td>
</tr>
        

<tr id="l144">
<td align="right" class="lineCount Good">144</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 144, 'Tests that hit line # 144');"
    >
    <a title="Line 144, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-144" class="srcLine"><a class="nolink" title="Line 144, Col 9: statement executed 1 time.">        expect(mock.oneArg(or(eq((<span class="keyword">byte</span>) 1), eq((<span class="keyword">byte</span>) 2)))).andReturn(<span class="string">"1"</span>);</a></span></td>
</tr>
        

<tr id="l145">
<td align="right" class="lineCount Good">145</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 145, 'Tests that hit line # 145');"
    >
    <a title="Line 145, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-145" class="srcLine"><a class="nolink" title="Line 145, Col 9: statement executed 1 time.">        expect(mock.oneArg(or(eq((<span class="keyword">char</span>) 1), eq((<span class="keyword">char</span>) 2)))).andReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l146">
<td align="right" class="lineCount Good">146</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 146, 'Tests that hit line # 146');"
    >
    <a title="Line 146, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-146" class="srcLine"><a class="nolink" title="Line 146, Col 9: statement executed 1 time.">        expect(mock.oneArg(or(eq((<span class="keyword">double</span>) 1), eq((<span class="keyword">double</span>) 2)))).andReturn(<span class="string">"3"</span>);</a></span></td>
</tr>
        

<tr id="l147">
<td align="right" class="lineCount Good">147</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 147, 'Tests that hit line # 147');"
    >
    <a title="Line 147, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-147" class="srcLine"><a class="nolink" title="Line 147, Col 9: statement executed 1 time.">        expect(mock.oneArg(or(eq((<span class="keyword">float</span>) 1), eq((<span class="keyword">float</span>) 2)))).andReturn(<span class="string">"4"</span>);</a></span></td>
</tr>
        

<tr id="l148">
<td align="right" class="lineCount Good">148</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 148, 'Tests that hit line # 148');"
    >
    <a title="Line 148, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-148" class="srcLine"><a class="nolink" title="Line 148, Col 9: statement executed 1 time.">        expect(mock.oneArg(or(eq((<span class="keyword">int</span>) 1), eq((<span class="keyword">int</span>) 2)))).andReturn(<span class="string">"5"</span>);</a></span></td>
</tr>
        

<tr id="l149">
<td align="right" class="lineCount Good">149</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 149, 'Tests that hit line # 149');"
    >
    <a title="Line 149, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-149" class="srcLine"><a class="nolink" title="Line 149, Col 9: statement executed 1 time.">        expect(mock.oneArg(or(eq((<span class="keyword">long</span>) 1), eq((<span class="keyword">long</span>) 2)))).andReturn(<span class="string">"6"</span>);</a></span></td>
</tr>
        

<tr id="l150">
<td align="right" class="lineCount Good">150</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 150, 'Tests that hit line # 150');"
    >
    <a title="Line 150, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-150" class="srcLine"><a class="nolink" title="Line 150, Col 9: statement executed 1 time.">        expect(mock.oneArg(or(eq((<span class="keyword">short</span>) 1), eq((<span class="keyword">short</span>) 2)))).andReturn(<span class="string">"7"</span>);</a></span></td>
</tr>
        

<tr id="l151">
<td align="right" class="lineCount Good">151</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 151, 'Tests that hit line # 151');"
    >
    <a title="Line 151, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-151" class="srcLine"><a class="nolink" title="Line 151, Col 9: statement executed 1 time.">        expect(mock.oneArg(or(eq(<span class="string">"asd"</span>), eq(<span class="string">"jkl"</span>)))).andReturn(<span class="string">"8"</span>);</a></span></td>
</tr>
        

<tr id="l152">
<td align="right" class="lineCount Good">152</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 152, 'Tests that hit line # 152');"
    >
    <a title="Line 152, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-152" class="srcLine"><a class="nolink" title="Line 152, Col 9: statement executed 1 time.">        expect(mock.oneArg(or(eq(<span class="keyword">this</span>.getClass()), eq(Object.<span class="keyword">class</span>))))</a></span></td>
</tr>
        

<tr id="l153">
<td align="right" class="lineCount NoHilight">153</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-153" class="srcLine">                .andReturn(<span class="string">"9"</span>);</span></td>
</tr>
        

<tr id="l154">
<td align="right" class="lineCount Good">154</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 154, 'Tests that hit line # 154');"
    >
    <a title="Line 154, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-154" class="srcLine"><a class="nolink" title="Line 154, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l155">
<td align="right" class="lineCount Good">155</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 155, 'Tests that hit line # 155');"
    >
    <a title="Line 155, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-155" class="srcLine"><a class="nolink" title="Line 155, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"9"</span>, mock.oneArg(Object.<span class="keyword">class</span>));</a></span></td>
</tr>
        

<tr id="l156">
<td align="right" class="lineCount Good">156</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 156, 'Tests that hit line # 156');"
    >
    <a title="Line 156, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-156" class="srcLine"><a class="nolink" title="Line 156, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"0"</span>, mock.oneArg(<span class="keyword">true</span>));</a></span></td>
</tr>
        

<tr id="l157">
<td align="right" class="lineCount Good">157</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 157, 'Tests that hit line # 157');"
    >
    <a title="Line 157, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-157" class="srcLine"><a class="nolink" title="Line 157, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg((<span class="keyword">byte</span>) 2));</a></span></td>
</tr>
        

<tr id="l158">
<td align="right" class="lineCount Good">158</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 158, 'Tests that hit line # 158');"
    >
    <a title="Line 158, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-158" class="srcLine"><a class="nolink" title="Line 158, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg((<span class="keyword">char</span>) 1));</a></span></td>
</tr>
        

<tr id="l159">
<td align="right" class="lineCount Good">159</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 159, 'Tests that hit line # 159');"
    >
    <a title="Line 159, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-159" class="srcLine"><a class="nolink" title="Line 159, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"3"</span>, mock.oneArg((<span class="keyword">double</span>) 2));</a></span></td>
</tr>
        

<tr id="l160">
<td align="right" class="lineCount Good">160</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 160, 'Tests that hit line # 160');"
    >
    <a title="Line 160, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-160" class="srcLine"><a class="nolink" title="Line 160, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"7"</span>, mock.oneArg((<span class="keyword">short</span>) 1));</a></span></td>
</tr>
        

<tr id="l161">
<td align="right" class="lineCount Good">161</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 161, 'Tests that hit line # 161');"
    >
    <a title="Line 161, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-161" class="srcLine"><a class="nolink" title="Line 161, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"8"</span>, mock.oneArg(<span class="string">"jkl"</span>));</a></span></td>
</tr>
        

<tr id="l162">
<td align="right" class="lineCount Good">162</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 162, 'Tests that hit line # 162');"
    >
    <a title="Line 162, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-162" class="srcLine"><a class="nolink" title="Line 162, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"4"</span>, mock.oneArg((<span class="keyword">float</span>) 1));</a></span></td>
</tr>
        

<tr id="l163">
<td align="right" class="lineCount Good">163</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 163, 'Tests that hit line # 163');"
    >
    <a title="Line 163, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-163" class="srcLine"><a class="nolink" title="Line 163, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"5"</span>, mock.oneArg((<span class="keyword">int</span>) 2));</a></span></td>
</tr>
        

<tr id="l164">
<td align="right" class="lineCount Good">164</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 164, 'Tests that hit line # 164');"
    >
    <a title="Line 164, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-164" class="srcLine"><a class="nolink" title="Line 164, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"6"</span>, mock.oneArg((<span class="keyword">long</span>) 1));</a></span></td>
</tr>
        

<tr id="l165">
<td align="right" class="lineCount Good">165</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 165, 'Tests that hit line # 165');"
    >
    <a title="Line 165, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-165" class="srcLine"><a class="nolink" title="Line 165, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l166">
<td align="right" class="lineCount NoHilight">166</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-166" class="srcLine">    }</span></td>
</tr>
        

<tr id="l167">
<td align="right" class="lineCount NoHilight">167</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-167" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="168" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-168' onclick="toggleInlineStats(this, 'inlinestats-168');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-168" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-168'), 'inlinestats-168');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (22)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,05</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l168">
<td align="right" class="lineCount Good">168</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 168, 'Tests that hit &lt;span class=\'srcFragment\'&gt; notOverloaded()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 168, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-168" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 168,192);" id="img-168" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-168" class="srcLine"><a class="nolink" title="Line 168, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-168'), 168,192);" id="e168" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l169">
<td align="right" class="lineCount NoHilight">169</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-169" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> notOverloaded() {</span></td>
</tr>
        

<tr id="l170">
<td align="right" class="lineCount Good">170</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 170, 'Tests that hit line # 170');"
    >
    <a title="Line 170, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-170" class="srcLine"><a class="nolink" title="Line 170, Col 9: statement executed 1 time.">        expect(mock.oneArg(not(eq(<span class="keyword">false</span>)))).andReturn(<span class="string">"0"</span>);</a></span></td>
</tr>
        

<tr id="l171">
<td align="right" class="lineCount Good">171</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 171, 'Tests that hit line # 171');"
    >
    <a title="Line 171, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-171" class="srcLine"><a class="nolink" title="Line 171, Col 9: statement executed 1 time.">        expect(mock.oneArg(not(eq((<span class="keyword">byte</span>) 1)))).andReturn(<span class="string">"1"</span>);</a></span></td>
</tr>
        

<tr id="l172">
<td align="right" class="lineCount Good">172</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 172, 'Tests that hit line # 172');"
    >
    <a title="Line 172, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-172" class="srcLine"><a class="nolink" title="Line 172, Col 9: statement executed 1 time.">        expect(mock.oneArg(not(eq('a')))).andReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l173">
<td align="right" class="lineCount Good">173</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 173, 'Tests that hit line # 173');"
    >
    <a title="Line 173, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-173" class="srcLine"><a class="nolink" title="Line 173, Col 9: statement executed 1 time.">        expect(mock.oneArg(not(eq((<span class="keyword">double</span>) 1)))).andReturn(<span class="string">"3"</span>);</a></span></td>
</tr>
        

<tr id="l174">
<td align="right" class="lineCount Good">174</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 174, 'Tests that hit line # 174');"
    >
    <a title="Line 174, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-174" class="srcLine"><a class="nolink" title="Line 174, Col 9: statement executed 1 time.">        expect(mock.oneArg(not(eq((<span class="keyword">float</span>) 1)))).andReturn(<span class="string">"4"</span>);</a></span></td>
</tr>
        

<tr id="l175">
<td align="right" class="lineCount Good">175</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 175, 'Tests that hit line # 175');"
    >
    <a title="Line 175, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-175" class="srcLine"><a class="nolink" title="Line 175, Col 9: statement executed 1 time.">        expect(mock.oneArg(not(eq((<span class="keyword">int</span>) 1)))).andReturn(<span class="string">"5"</span>);</a></span></td>
</tr>
        

<tr id="l176">
<td align="right" class="lineCount Good">176</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 176, 'Tests that hit line # 176');"
    >
    <a title="Line 176, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-176" class="srcLine"><a class="nolink" title="Line 176, Col 9: statement executed 1 time.">        expect(mock.oneArg(not(eq((<span class="keyword">long</span>) 1)))).andReturn(<span class="string">"6"</span>);</a></span></td>
</tr>
        

<tr id="l177">
<td align="right" class="lineCount Good">177</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 177, 'Tests that hit line # 177');"
    >
    <a title="Line 177, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-177" class="srcLine"><a class="nolink" title="Line 177, Col 9: statement executed 1 time.">        expect(mock.oneArg(not(eq((<span class="keyword">short</span>) 1)))).andReturn(<span class="string">"7"</span>);</a></span></td>
</tr>
        

<tr id="l178">
<td align="right" class="lineCount Good">178</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 178, 'Tests that hit line # 178');"
    >
    <a title="Line 178, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-178" class="srcLine"><a class="nolink" title="Line 178, Col 9: statement executed 1 time.">        expect(mock.oneArg(not(contains(<span class="string">"a"</span>)))).andReturn(<span class="string">"8"</span>);</a></span></td>
</tr>
        

<tr id="l179">
<td align="right" class="lineCount Good">179</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 179, 'Tests that hit line # 179');"
    >
    <a title="Line 179, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-179" class="srcLine"><a class="nolink" title="Line 179, Col 9: statement executed 1 time.">        expect(mock.oneArg(not(isA(Class.<span class="keyword">class</span>)))).andReturn(<span class="string">"9"</span>);</a></span></td>
</tr>
        

<tr id="l180">
<td align="right" class="lineCount Good">180</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 180, 'Tests that hit line # 180');"
    >
    <a title="Line 180, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-180" class="srcLine"><a class="nolink" title="Line 180, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l181">
<td align="right" class="lineCount Good">181</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 181, 'Tests that hit line # 181');"
    >
    <a title="Line 181, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-181" class="srcLine"><a class="nolink" title="Line 181, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"9"</span>, mock.oneArg(<span class="keyword">new</span> Object()));</a></span></td>
</tr>
        

<tr id="l182">
<td align="right" class="lineCount Good">182</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 182, 'Tests that hit line # 182');"
    >
    <a title="Line 182, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-182" class="srcLine"><a class="nolink" title="Line 182, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"0"</span>, mock.oneArg(<span class="keyword">true</span>));</a></span></td>
</tr>
        

<tr id="l183">
<td align="right" class="lineCount Good">183</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 183, 'Tests that hit line # 183');"
    >
    <a title="Line 183, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-183" class="srcLine"><a class="nolink" title="Line 183, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg((<span class="keyword">byte</span>) 2));</a></span></td>
</tr>
        

<tr id="l184">
<td align="right" class="lineCount Good">184</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 184, 'Tests that hit line # 184');"
    >
    <a title="Line 184, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-184" class="srcLine"><a class="nolink" title="Line 184, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg('b'));</a></span></td>
</tr>
        

<tr id="l185">
<td align="right" class="lineCount Good">185</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 185, 'Tests that hit line # 185');"
    >
    <a title="Line 185, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-185" class="srcLine"><a class="nolink" title="Line 185, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"3"</span>, mock.oneArg((<span class="keyword">double</span>) 2));</a></span></td>
</tr>
        

<tr id="l186">
<td align="right" class="lineCount Good">186</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 186, 'Tests that hit line # 186');"
    >
    <a title="Line 186, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-186" class="srcLine"><a class="nolink" title="Line 186, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"7"</span>, mock.oneArg((<span class="keyword">short</span>) 2));</a></span></td>
</tr>
        

<tr id="l187">
<td align="right" class="lineCount Good">187</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 187, 'Tests that hit line # 187');"
    >
    <a title="Line 187, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-187" class="srcLine"><a class="nolink" title="Line 187, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"8"</span>, mock.oneArg(<span class="string">"bcde"</span>));</a></span></td>
</tr>
        

<tr id="l188">
<td align="right" class="lineCount Good">188</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 188, 'Tests that hit line # 188');"
    >
    <a title="Line 188, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-188" class="srcLine"><a class="nolink" title="Line 188, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"4"</span>, mock.oneArg((<span class="keyword">float</span>) 2));</a></span></td>
</tr>
        

<tr id="l189">
<td align="right" class="lineCount Good">189</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 189, 'Tests that hit line # 189');"
    >
    <a title="Line 189, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-189" class="srcLine"><a class="nolink" title="Line 189, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"5"</span>, mock.oneArg((<span class="keyword">int</span>) 2));</a></span></td>
</tr>
        

<tr id="l190">
<td align="right" class="lineCount Good">190</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 190, 'Tests that hit line # 190');"
    >
    <a title="Line 190, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-190" class="srcLine"><a class="nolink" title="Line 190, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"6"</span>, mock.oneArg((<span class="keyword">long</span>) 2));</a></span></td>
</tr>
        

<tr id="l191">
<td align="right" class="lineCount Good">191</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 191, 'Tests that hit line # 191');"
    >
    <a title="Line 191, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-191" class="srcLine"><a class="nolink" title="Line 191, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l192">
<td align="right" class="lineCount NoHilight">192</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-192" class="srcLine">    }</span></td>
</tr>
        

<tr id="l193">
<td align="right" class="lineCount NoHilight">193</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-193" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="194" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-194' onclick="toggleInlineStats(this, 'inlinestats-194');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-194" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-194'), 'inlinestats-194');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (16)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,06</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l194">
<td align="right" class="lineCount Good">194</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 194, 'Tests that hit &lt;span class=\'srcFragment\'&gt; lessOrEqualOverloaded()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 194, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-194" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 194,212);" id="img-194" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-194" class="srcLine"><a class="nolink" title="Line 194, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-194'), 194,212);" id="e194" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l195">
<td align="right" class="lineCount NoHilight">195</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-195" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> lessOrEqualOverloaded() {</span></td>
</tr>
        

<tr id="l196">
<td align="right" class="lineCount Good">196</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 196, 'Tests that hit line # 196');"
    >
    <a title="Line 196, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-196" class="srcLine"><a class="nolink" title="Line 196, Col 9: statement executed 1 time.">        expect(mock.oneArg(leq((<span class="keyword">byte</span>) 1))).andReturn(<span class="string">"1"</span>);</a></span></td>
</tr>
        

<tr id="l197">
<td align="right" class="lineCount Good">197</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 197, 'Tests that hit line # 197');"
    >
    <a title="Line 197, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-197" class="srcLine"><a class="nolink" title="Line 197, Col 9: statement executed 1 time.">        expect(mock.oneArg(leq((<span class="keyword">double</span>) 1))).andReturn(<span class="string">"3"</span>);</a></span></td>
</tr>
        

<tr id="l198">
<td align="right" class="lineCount Good">198</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 198, 'Tests that hit line # 198');"
    >
    <a title="Line 198, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-198" class="srcLine"><a class="nolink" title="Line 198, Col 9: statement executed 1 time.">        expect(mock.oneArg(leq((<span class="keyword">float</span>) 1))).andReturn(<span class="string">"4"</span>);</a></span></td>
</tr>
        

<tr id="l199">
<td align="right" class="lineCount Good">199</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 199, 'Tests that hit line # 199');"
    >
    <a title="Line 199, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-199" class="srcLine"><a class="nolink" title="Line 199, Col 9: statement executed 1 time.">        expect(mock.oneArg(leq((<span class="keyword">int</span>) 1))).andReturn(<span class="string">"5"</span>);</a></span></td>
</tr>
        

<tr id="l200">
<td align="right" class="lineCount Good">200</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 200, 'Tests that hit line # 200');"
    >
    <a title="Line 200, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-200" class="srcLine"><a class="nolink" title="Line 200, Col 9: statement executed 1 time.">        expect(mock.oneArg(leq((<span class="keyword">long</span>) 1))).andReturn(<span class="string">"6"</span>);</a></span></td>
</tr>
        

<tr id="l201">
<td align="right" class="lineCount Good">201</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 201, 'Tests that hit line # 201');"
    >
    <a title="Line 201, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-201" class="srcLine"><a class="nolink" title="Line 201, Col 9: statement executed 1 time.">        expect(mock.oneArg(leq((<span class="keyword">short</span>) 1))).andReturn(<span class="string">"7"</span>);</a></span></td>
</tr>
        

<tr id="l202">
<td align="right" class="lineCount Good">202</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 202, 'Tests that hit line # 202');"
    >
    <a title="Line 202, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-202" class="srcLine"><a class="nolink" title="Line 202, Col 9: statement executed 1 time.">        expect(mock.oneArg(leq(<span class="keyword">new</span> BigDecimal(<span class="string">"1"</span>)))).andReturn(<span class="string">"8"</span>);</a></span></td>
</tr>
        

<tr id="l203">
<td align="right" class="lineCount Good">203</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 203, 'Tests that hit line # 203');"
    >
    <a title="Line 203, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-203" class="srcLine"><a class="nolink" title="Line 203, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l204">
<td align="right" class="lineCount Good">204</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 204, 'Tests that hit line # 204');"
    >
    <a title="Line 204, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-204" class="srcLine"><a class="nolink" title="Line 204, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg((<span class="keyword">byte</span>) 1));</a></span></td>
</tr>
        

<tr id="l205">
<td align="right" class="lineCount Good">205</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 205, 'Tests that hit line # 205');"
    >
    <a title="Line 205, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-205" class="srcLine"><a class="nolink" title="Line 205, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"3"</span>, mock.oneArg((<span class="keyword">double</span>) 1));</a></span></td>
</tr>
        

<tr id="l206">
<td align="right" class="lineCount Good">206</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 206, 'Tests that hit line # 206');"
    >
    <a title="Line 206, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-206" class="srcLine"><a class="nolink" title="Line 206, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"7"</span>, mock.oneArg((<span class="keyword">short</span>) 0));</a></span></td>
</tr>
        

<tr id="l207">
<td align="right" class="lineCount Good">207</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 207, 'Tests that hit line # 207');"
    >
    <a title="Line 207, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-207" class="srcLine"><a class="nolink" title="Line 207, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"4"</span>, mock.oneArg((<span class="keyword">float</span>) -5));</a></span></td>
</tr>
        

<tr id="l208">
<td align="right" class="lineCount Good">208</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 208, 'Tests that hit line # 208');"
    >
    <a title="Line 208, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-208" class="srcLine"><a class="nolink" title="Line 208, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"5"</span>, mock.oneArg((<span class="keyword">int</span>) -2));</a></span></td>
</tr>
        

<tr id="l209">
<td align="right" class="lineCount Good">209</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 209, 'Tests that hit line # 209');"
    >
    <a title="Line 209, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-209" class="srcLine"><a class="nolink" title="Line 209, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"6"</span>, mock.oneArg((<span class="keyword">long</span>) -3));</a></span></td>
</tr>
        

<tr id="l210">
<td align="right" class="lineCount Good">210</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 210, 'Tests that hit line # 210');"
    >
    <a title="Line 210, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-210" class="srcLine"><a class="nolink" title="Line 210, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"8"</span>, mock.oneArg(<span class="keyword">new</span> BigDecimal(<span class="string">"0.5"</span>)));</a></span></td>
</tr>
        

<tr id="l211">
<td align="right" class="lineCount Good">211</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 211, 'Tests that hit line # 211');"
    >
    <a title="Line 211, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-211" class="srcLine"><a class="nolink" title="Line 211, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l212">
<td align="right" class="lineCount NoHilight">212</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-212" class="srcLine">    }</span></td>
</tr>
        

<tr id="l213">
<td align="right" class="lineCount NoHilight">213</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-213" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="214" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-214' onclick="toggleInlineStats(this, 'inlinestats-214');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-214" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-214'), 'inlinestats-214');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (16)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,06</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l214">
<td align="right" class="lineCount Good">214</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 214, 'Tests that hit &lt;span class=\'srcFragment\'&gt; lessThanOverloaded()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 214, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-214" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 214,232);" id="img-214" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-214" class="srcLine"><a class="nolink" title="Line 214, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-214'), 214,232);" id="e214" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l215">
<td align="right" class="lineCount NoHilight">215</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-215" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> lessThanOverloaded() {</span></td>
</tr>
        

<tr id="l216">
<td align="right" class="lineCount Good">216</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 216, 'Tests that hit line # 216');"
    >
    <a title="Line 216, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-216" class="srcLine"><a class="nolink" title="Line 216, Col 9: statement executed 1 time.">        expect(mock.oneArg(lt((<span class="keyword">byte</span>) 1))).andReturn(<span class="string">"1"</span>);</a></span></td>
</tr>
        

<tr id="l217">
<td align="right" class="lineCount Good">217</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 217, 'Tests that hit line # 217');"
    >
    <a title="Line 217, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-217" class="srcLine"><a class="nolink" title="Line 217, Col 9: statement executed 1 time.">        expect(mock.oneArg(lt((<span class="keyword">double</span>) 1))).andReturn(<span class="string">"3"</span>);</a></span></td>
</tr>
        

<tr id="l218">
<td align="right" class="lineCount Good">218</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 218, 'Tests that hit line # 218');"
    >
    <a title="Line 218, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-218" class="srcLine"><a class="nolink" title="Line 218, Col 9: statement executed 1 time.">        expect(mock.oneArg(lt((<span class="keyword">float</span>) 1))).andReturn(<span class="string">"4"</span>);</a></span></td>
</tr>
        

<tr id="l219">
<td align="right" class="lineCount Good">219</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 219, 'Tests that hit line # 219');"
    >
    <a title="Line 219, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-219" class="srcLine"><a class="nolink" title="Line 219, Col 9: statement executed 1 time.">        expect(mock.oneArg(lt((<span class="keyword">int</span>) 1))).andReturn(<span class="string">"5"</span>);</a></span></td>
</tr>
        

<tr id="l220">
<td align="right" class="lineCount Good">220</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 220, 'Tests that hit line # 220');"
    >
    <a title="Line 220, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-220" class="srcLine"><a class="nolink" title="Line 220, Col 9: statement executed 1 time.">        expect(mock.oneArg(lt((<span class="keyword">long</span>) 1))).andReturn(<span class="string">"6"</span>);</a></span></td>
</tr>
        

<tr id="l221">
<td align="right" class="lineCount Good">221</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 221, 'Tests that hit line # 221');"
    >
    <a title="Line 221, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-221" class="srcLine"><a class="nolink" title="Line 221, Col 9: statement executed 1 time.">        expect(mock.oneArg(lt((<span class="keyword">short</span>) 1))).andReturn(<span class="string">"7"</span>);</a></span></td>
</tr>
        

<tr id="l222">
<td align="right" class="lineCount Good">222</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 222, 'Tests that hit line # 222');"
    >
    <a title="Line 222, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-222" class="srcLine"><a class="nolink" title="Line 222, Col 9: statement executed 1 time.">        expect(mock.oneArg(lt(<span class="keyword">new</span> BigDecimal(<span class="string">"1"</span>)))).andReturn(<span class="string">"8"</span>);</a></span></td>
</tr>
        

<tr id="l223">
<td align="right" class="lineCount Good">223</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 223, 'Tests that hit line # 223');"
    >
    <a title="Line 223, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-223" class="srcLine"><a class="nolink" title="Line 223, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l224">
<td align="right" class="lineCount Good">224</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 224, 'Tests that hit line # 224');"
    >
    <a title="Line 224, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-224" class="srcLine"><a class="nolink" title="Line 224, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg((<span class="keyword">byte</span>) 0));</a></span></td>
</tr>
        

<tr id="l225">
<td align="right" class="lineCount Good">225</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 225, 'Tests that hit line # 225');"
    >
    <a title="Line 225, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-225" class="srcLine"><a class="nolink" title="Line 225, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"3"</span>, mock.oneArg((<span class="keyword">double</span>) 0));</a></span></td>
</tr>
        

<tr id="l226">
<td align="right" class="lineCount Good">226</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 226, 'Tests that hit line # 226');"
    >
    <a title="Line 226, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-226" class="srcLine"><a class="nolink" title="Line 226, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"7"</span>, mock.oneArg((<span class="keyword">short</span>) 0));</a></span></td>
</tr>
        

<tr id="l227">
<td align="right" class="lineCount Good">227</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 227, 'Tests that hit line # 227');"
    >
    <a title="Line 227, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-227" class="srcLine"><a class="nolink" title="Line 227, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"4"</span>, mock.oneArg((<span class="keyword">float</span>) -4));</a></span></td>
</tr>
        

<tr id="l228">
<td align="right" class="lineCount Good">228</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 228, 'Tests that hit line # 228');"
    >
    <a title="Line 228, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-228" class="srcLine"><a class="nolink" title="Line 228, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"5"</span>, mock.oneArg((<span class="keyword">int</span>) -34));</a></span></td>
</tr>
        

<tr id="l229">
<td align="right" class="lineCount Good">229</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 229, 'Tests that hit line # 229');"
    >
    <a title="Line 229, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-229" class="srcLine"><a class="nolink" title="Line 229, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"6"</span>, mock.oneArg((<span class="keyword">long</span>) -6));</a></span></td>
</tr>
        

<tr id="l230">
<td align="right" class="lineCount Good">230</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 230, 'Tests that hit line # 230');"
    >
    <a title="Line 230, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-230" class="srcLine"><a class="nolink" title="Line 230, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"8"</span>, mock.oneArg(<span class="keyword">new</span> BigDecimal(<span class="string">"0.5"</span>)));</a></span></td>
</tr>
        

<tr id="l231">
<td align="right" class="lineCount Good">231</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 231, 'Tests that hit line # 231');"
    >
    <a title="Line 231, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-231" class="srcLine"><a class="nolink" title="Line 231, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l232">
<td align="right" class="lineCount NoHilight">232</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-232" class="srcLine">    }</span></td>
</tr>
        

<tr id="l233">
<td align="right" class="lineCount NoHilight">233</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-233" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="234" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-234' onclick="toggleInlineStats(this, 'inlinestats-234');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-234" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-234'), 'inlinestats-234');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (16)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,06</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l234">
<td align="right" class="lineCount Good">234</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 234, 'Tests that hit &lt;span class=\'srcFragment\'&gt; greaterOrEqualOverloaded()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 234, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-234" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 234,252);" id="img-234" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-234" class="srcLine"><a class="nolink" title="Line 234, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-234'), 234,252);" id="e234" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l235">
<td align="right" class="lineCount NoHilight">235</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-235" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> greaterOrEqualOverloaded() {</span></td>
</tr>
        

<tr id="l236">
<td align="right" class="lineCount Good">236</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 236, 'Tests that hit line # 236');"
    >
    <a title="Line 236, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-236" class="srcLine"><a class="nolink" title="Line 236, Col 9: statement executed 1 time.">        expect(mock.oneArg(geq((<span class="keyword">byte</span>) 1))).andReturn(<span class="string">"1"</span>);</a></span></td>
</tr>
        

<tr id="l237">
<td align="right" class="lineCount Good">237</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 237, 'Tests that hit line # 237');"
    >
    <a title="Line 237, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-237" class="srcLine"><a class="nolink" title="Line 237, Col 9: statement executed 1 time.">        expect(mock.oneArg(geq((<span class="keyword">double</span>) 1))).andReturn(<span class="string">"3"</span>);</a></span></td>
</tr>
        

<tr id="l238">
<td align="right" class="lineCount Good">238</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 238, 'Tests that hit line # 238');"
    >
    <a title="Line 238, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-238" class="srcLine"><a class="nolink" title="Line 238, Col 9: statement executed 1 time.">        expect(mock.oneArg(geq((<span class="keyword">float</span>) 1))).andReturn(<span class="string">"4"</span>);</a></span></td>
</tr>
        

<tr id="l239">
<td align="right" class="lineCount Good">239</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 239, 'Tests that hit line # 239');"
    >
    <a title="Line 239, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-239" class="srcLine"><a class="nolink" title="Line 239, Col 9: statement executed 1 time.">        expect(mock.oneArg(geq((<span class="keyword">int</span>) 1))).andReturn(<span class="string">"5"</span>);</a></span></td>
</tr>
        

<tr id="l240">
<td align="right" class="lineCount Good">240</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 240, 'Tests that hit line # 240');"
    >
    <a title="Line 240, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-240" class="srcLine"><a class="nolink" title="Line 240, Col 9: statement executed 1 time.">        expect(mock.oneArg(geq((<span class="keyword">long</span>) 1))).andReturn(<span class="string">"6"</span>);</a></span></td>
</tr>
        

<tr id="l241">
<td align="right" class="lineCount Good">241</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 241, 'Tests that hit line # 241');"
    >
    <a title="Line 241, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-241" class="srcLine"><a class="nolink" title="Line 241, Col 9: statement executed 1 time.">        expect(mock.oneArg(geq((<span class="keyword">short</span>) 1))).andReturn(<span class="string">"7"</span>);</a></span></td>
</tr>
        

<tr id="l242">
<td align="right" class="lineCount Good">242</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 242, 'Tests that hit line # 242');"
    >
    <a title="Line 242, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-242" class="srcLine"><a class="nolink" title="Line 242, Col 9: statement executed 1 time.">        expect(mock.oneArg(geq(<span class="keyword">new</span> BigDecimal(<span class="string">"1"</span>)))).andReturn(<span class="string">"8"</span>);</a></span></td>
</tr>
        

<tr id="l243">
<td align="right" class="lineCount Good">243</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 243, 'Tests that hit line # 243');"
    >
    <a title="Line 243, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-243" class="srcLine"><a class="nolink" title="Line 243, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l244">
<td align="right" class="lineCount Good">244</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 244, 'Tests that hit line # 244');"
    >
    <a title="Line 244, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-244" class="srcLine"><a class="nolink" title="Line 244, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg((<span class="keyword">byte</span>) 2));</a></span></td>
</tr>
        

<tr id="l245">
<td align="right" class="lineCount Good">245</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 245, 'Tests that hit line # 245');"
    >
    <a title="Line 245, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-245" class="srcLine"><a class="nolink" title="Line 245, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"3"</span>, mock.oneArg((<span class="keyword">double</span>) 1));</a></span></td>
</tr>
        

<tr id="l246">
<td align="right" class="lineCount Good">246</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 246, 'Tests that hit line # 246');"
    >
    <a title="Line 246, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-246" class="srcLine"><a class="nolink" title="Line 246, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"7"</span>, mock.oneArg((<span class="keyword">short</span>) 2));</a></span></td>
</tr>
        

<tr id="l247">
<td align="right" class="lineCount Good">247</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 247, 'Tests that hit line # 247');"
    >
    <a title="Line 247, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-247" class="srcLine"><a class="nolink" title="Line 247, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"4"</span>, mock.oneArg((<span class="keyword">float</span>) 3));</a></span></td>
</tr>
        

<tr id="l248">
<td align="right" class="lineCount Good">248</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 248, 'Tests that hit line # 248');"
    >
    <a title="Line 248, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-248" class="srcLine"><a class="nolink" title="Line 248, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"5"</span>, mock.oneArg((<span class="keyword">int</span>) 4));</a></span></td>
</tr>
        

<tr id="l249">
<td align="right" class="lineCount Good">249</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 249, 'Tests that hit line # 249');"
    >
    <a title="Line 249, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-249" class="srcLine"><a class="nolink" title="Line 249, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"6"</span>, mock.oneArg((<span class="keyword">long</span>) 5));</a></span></td>
</tr>
        

<tr id="l250">
<td align="right" class="lineCount Good">250</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 250, 'Tests that hit line # 250');"
    >
    <a title="Line 250, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-250" class="srcLine"><a class="nolink" title="Line 250, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"8"</span>, mock.oneArg(<span class="keyword">new</span> BigDecimal(<span class="string">"1.5"</span>)));</a></span></td>
</tr>
        

<tr id="l251">
<td align="right" class="lineCount Good">251</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 251, 'Tests that hit line # 251');"
    >
    <a title="Line 251, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-251" class="srcLine"><a class="nolink" title="Line 251, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l252">
<td align="right" class="lineCount NoHilight">252</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-252" class="srcLine">    }</span></td>
</tr>
        

<tr id="l253">
<td align="right" class="lineCount NoHilight">253</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-253" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="254" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-254' onclick="toggleInlineStats(this, 'inlinestats-254');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-254" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-254'), 'inlinestats-254');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (16)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,06</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l254">
<td align="right" class="lineCount Good">254</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 254, 'Tests that hit &lt;span class=\'srcFragment\'&gt; greaterThanOverloaded()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 254, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-254" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 254,272);" id="img-254" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-254" class="srcLine"><a class="nolink" title="Line 254, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-254'), 254,272);" id="e254" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l255">
<td align="right" class="lineCount NoHilight">255</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-255" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> greaterThanOverloaded() {</span></td>
</tr>
        

<tr id="l256">
<td align="right" class="lineCount Good">256</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 256, 'Tests that hit line # 256');"
    >
    <a title="Line 256, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-256" class="srcLine"><a class="nolink" title="Line 256, Col 9: statement executed 1 time.">        expect(mock.oneArg(gt((<span class="keyword">byte</span>) 1))).andReturn(<span class="string">"1"</span>);</a></span></td>
</tr>
        

<tr id="l257">
<td align="right" class="lineCount Good">257</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 257, 'Tests that hit line # 257');"
    >
    <a title="Line 257, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-257" class="srcLine"><a class="nolink" title="Line 257, Col 9: statement executed 1 time.">        expect(mock.oneArg(gt((<span class="keyword">double</span>) 1))).andReturn(<span class="string">"3"</span>);</a></span></td>
</tr>
        

<tr id="l258">
<td align="right" class="lineCount Good">258</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 258, 'Tests that hit line # 258');"
    >
    <a title="Line 258, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-258" class="srcLine"><a class="nolink" title="Line 258, Col 9: statement executed 1 time.">        expect(mock.oneArg(gt((<span class="keyword">float</span>) 1))).andReturn(<span class="string">"4"</span>);</a></span></td>
</tr>
        

<tr id="l259">
<td align="right" class="lineCount Good">259</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 259, 'Tests that hit line # 259');"
    >
    <a title="Line 259, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-259" class="srcLine"><a class="nolink" title="Line 259, Col 9: statement executed 1 time.">        expect(mock.oneArg(gt((<span class="keyword">int</span>) 1))).andReturn(<span class="string">"5"</span>);</a></span></td>
</tr>
        

<tr id="l260">
<td align="right" class="lineCount Good">260</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 260, 'Tests that hit line # 260');"
    >
    <a title="Line 260, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-260" class="srcLine"><a class="nolink" title="Line 260, Col 9: statement executed 1 time.">        expect(mock.oneArg(gt((<span class="keyword">long</span>) 1))).andReturn(<span class="string">"6"</span>);</a></span></td>
</tr>
        

<tr id="l261">
<td align="right" class="lineCount Good">261</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 261, 'Tests that hit line # 261');"
    >
    <a title="Line 261, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-261" class="srcLine"><a class="nolink" title="Line 261, Col 9: statement executed 1 time.">        expect(mock.oneArg(gt((<span class="keyword">short</span>) 1))).andReturn(<span class="string">"7"</span>);</a></span></td>
</tr>
        

<tr id="l262">
<td align="right" class="lineCount Good">262</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 262, 'Tests that hit line # 262');"
    >
    <a title="Line 262, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-262" class="srcLine"><a class="nolink" title="Line 262, Col 9: statement executed 1 time.">        expect(mock.oneArg(gt(<span class="keyword">new</span> BigDecimal(<span class="string">"1"</span>)))).andReturn(<span class="string">"8"</span>);</a></span></td>
</tr>
        

<tr id="l263">
<td align="right" class="lineCount Good">263</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 263, 'Tests that hit line # 263');"
    >
    <a title="Line 263, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-263" class="srcLine"><a class="nolink" title="Line 263, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l264">
<td align="right" class="lineCount Good">264</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 264, 'Tests that hit line # 264');"
    >
    <a title="Line 264, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-264" class="srcLine"><a class="nolink" title="Line 264, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg((<span class="keyword">byte</span>) 2));</a></span></td>
</tr>
        

<tr id="l265">
<td align="right" class="lineCount Good">265</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 265, 'Tests that hit line # 265');"
    >
    <a title="Line 265, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-265" class="srcLine"><a class="nolink" title="Line 265, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"3"</span>, mock.oneArg((<span class="keyword">double</span>) 2));</a></span></td>
</tr>
        

<tr id="l266">
<td align="right" class="lineCount Good">266</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 266, 'Tests that hit line # 266');"
    >
    <a title="Line 266, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-266" class="srcLine"><a class="nolink" title="Line 266, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"7"</span>, mock.oneArg((<span class="keyword">short</span>) 2));</a></span></td>
</tr>
        

<tr id="l267">
<td align="right" class="lineCount Good">267</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 267, 'Tests that hit line # 267');"
    >
    <a title="Line 267, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-267" class="srcLine"><a class="nolink" title="Line 267, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"4"</span>, mock.oneArg((<span class="keyword">float</span>) 3));</a></span></td>
</tr>
        

<tr id="l268">
<td align="right" class="lineCount Good">268</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 268, 'Tests that hit line # 268');"
    >
    <a title="Line 268, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-268" class="srcLine"><a class="nolink" title="Line 268, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"5"</span>, mock.oneArg((<span class="keyword">int</span>) 2));</a></span></td>
</tr>
        

<tr id="l269">
<td align="right" class="lineCount Good">269</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 269, 'Tests that hit line # 269');"
    >
    <a title="Line 269, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-269" class="srcLine"><a class="nolink" title="Line 269, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"6"</span>, mock.oneArg((<span class="keyword">long</span>) 5));</a></span></td>
</tr>
        

<tr id="l270">
<td align="right" class="lineCount Good">270</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 270, 'Tests that hit line # 270');"
    >
    <a title="Line 270, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-270" class="srcLine"><a class="nolink" title="Line 270, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"8"</span>, mock.oneArg(<span class="keyword">new</span> BigDecimal(<span class="string">"1.5"</span>)));</a></span></td>
</tr>
        

<tr id="l271">
<td align="right" class="lineCount Good">271</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 271, 'Tests that hit line # 271');"
    >
    <a title="Line 271, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-271" class="srcLine"><a class="nolink" title="Line 271, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l272">
<td align="right" class="lineCount NoHilight">272</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-272" class="srcLine">    }</span></td>
</tr>
        

<tr id="l273">
<td align="right" class="lineCount NoHilight">273</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-273" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="274" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-274' onclick="toggleInlineStats(this, 'inlinestats-274');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-274" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-274'), 'inlinestats-274');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (4)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,25</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l274">
<td align="right" class="lineCount Good">274</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 274, 'Tests that hit &lt;span class=\'srcFragment\'&gt; cmpTo()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 274, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-274" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 274,280);" id="img-274" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-274" class="srcLine"><a class="nolink" title="Line 274, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-274'), 274,280);" id="e274" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l275">
<td align="right" class="lineCount NoHilight">275</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-275" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> cmpTo() {</span></td>
</tr>
        

<tr id="l276">
<td align="right" class="lineCount Good">276</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 276, 'Tests that hit line # 276');"
    >
    <a title="Line 276, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-276" class="srcLine"><a class="nolink" title="Line 276, Col 9: statement executed 1 time.">        expect(mock.oneArg(cmpEq(<span class="keyword">new</span> BigDecimal(<span class="string">"1.5"</span>)))).andReturn(<span class="string">"0"</span>);</a></span></td>
</tr>
        

<tr id="l277">
<td align="right" class="lineCount Good">277</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 277, 'Tests that hit line # 277');"
    >
    <a title="Line 277, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-277" class="srcLine"><a class="nolink" title="Line 277, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l278">
<td align="right" class="lineCount Good">278</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 278, 'Tests that hit line # 278');"
    >
    <a title="Line 278, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-278" class="srcLine"><a class="nolink" title="Line 278, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"0"</span>, mock.oneArg(<span class="keyword">new</span> BigDecimal(<span class="string">"1.50"</span>)));</a></span></td>
</tr>
        

<tr id="l279">
<td align="right" class="lineCount Good">279</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 279, 'Tests that hit line # 279');"
    >
    <a title="Line 279, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-279" class="srcLine"><a class="nolink" title="Line 279, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l280">
<td align="right" class="lineCount NoHilight">280</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-280" class="srcLine">    }</span></td>
</tr>
        

<tr id="l281">
<td align="right" class="lineCount NoHilight">281</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-281" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="282" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-282' onclick="toggleInlineStats(this, 'inlinestats-282');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-282" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-282'), 'inlinestats-282');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (4)</td>
           <td class="inlineStat">Complexity: 2</td>
           <td class="inlineStat">Complexity Density: 1</td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l282">
<td align="right" class="lineCount NoHilight">282</td>
<td align="right" class="coverageCount NoHilight "
           onclick="return showTestsForLine(this, 282, 'Tests that hit &lt;span class=\'srcFragment\'&gt; UsageConstraintsTest.A &lt;/span&gt;');"
       >
    &nbsp;&nbsp;

</td>
<td class="  srcCell" id="id-282" >
    <span class="spacer"></span><span id="src-282" class="srcLineClassStart">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> A {</span></td>
</tr>
        

<tr id="l283">
<td align="right" class="lineCount NoHilight">283</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-283" class="srcLine">        <span class="keyword">private</span> <span class="keyword">int</span> value;</span></td>
</tr>
        

<tr id="l284">
<td align="right" class="lineCount NoHilight">284</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-284" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="285" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-285' onclick="toggleInlineStats(this, 'inlinestats-285');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-285" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-285'), 'inlinestats-285');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (1)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 1</td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l285">
<td align="right" class="lineCount Good">285</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 285, 'Tests that hit &lt;span class=\'srcFragment\'&gt; A(int) &lt;/span&gt;');"
       >
    <a title="Line 285, Col 9: method entered 28 times." class="nolink">&nbsp;28</a>

</td>
<td class="  methodStart  srcCell" id="id-285" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 285,287);" id="img-285" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-285" class="srcLine"><a class="nolink" title="Line 285, Col 9: method entered 28 times.">        <span class="keyword">public</span> A(<span class="keyword">int</span> value) {</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-285'), 285,287);" id="e285" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l286">
<td align="right" class="lineCount Good">286</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 286, 'Tests that hit line # 286');"
    >
    <a title="Line 286, Col 13: statement executed 28 times." class="nolink">&nbsp;28</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-286" class="srcLine"><a class="nolink" title="Line 286, Col 13: statement executed 28 times.">            <span class="keyword">this</span>.value = value;</a></span></td>
</tr>
        

<tr id="l287">
<td align="right" class="lineCount NoHilight">287</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-287" class="srcLine">        }</span></td>
</tr>
        

<tr id="l288">
<td align="right" class="lineCount NoHilight">288</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-288" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="289" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-289' onclick="toggleInlineStats(this, 'inlinestats-289');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-289" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-289'), 'inlinestats-289');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (1)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 1</td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l289">
<td align="right" class="lineCount Good">289</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 289, 'Tests that hit &lt;span class=\'srcFragment\'&gt; getValue()&amp;nbsp;:&amp;nbsp;int &lt;/span&gt;');"
       >
    <a title="Line 289, Col 9: method entered 100 times." class="nolink">&nbsp;100</a>

</td>
<td class="  methodStart  srcCell" id="id-289" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 289,291);" id="img-289" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-289" class="srcLine"><a class="nolink" title="Line 289, Col 9: method entered 100 times.">        <span class="keyword">public</span> <span class="keyword">int</span> getValue() {</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-289'), 289,291);" id="e289" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l290">
<td align="right" class="lineCount Good">290</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 290, 'Tests that hit line # 290');"
    >
    <a title="Line 290, Col 13: statement executed 100 times." class="nolink">&nbsp;100</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-290" class="srcLine"><a class="nolink" title="Line 290, Col 13: statement executed 100 times.">            <span class="keyword">return</span> value;</a></span></td>
</tr>
        

<tr id="l291">
<td align="right" class="lineCount NoHilight">291</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-291" class="srcLine">        }</span></td>
</tr>
        

<tr id="l292">
<td align="right" class="lineCount NoHilight">292</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-292" class="srcLine">    }</span></td>
</tr>
        

<tr id="l293">
<td align="right" class="lineCount NoHilight">293</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-293" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="294" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-294' onclick="toggleInlineStats(this, 'inlinestats-294');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-294" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-294'), 'inlinestats-294');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="3% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="97% Covered" class="barPositive barPositive" style="width: 97%"></div>
    </div>
</div></td><td>97%</td>
           <td class="inlineStat">Uncovered Elements: 1 (33)</td>
           <td class="inlineStat">Complexity: 2</td>
           <td class="inlineStat">Complexity Density: 0,06</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l294">
<td align="right" class="lineCount Good">294</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 294, 'Tests that hit &lt;span class=\'srcFragment\'&gt; compareWithComparator()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 294, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-294" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 294,364);" id="img-294" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-294" class="srcLine"><a class="nolink" title="Line 294, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-294'), 294,364);" id="e294" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l295">
<td align="right" class="lineCount NoHilight">295</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-295" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> compareWithComparator() {</span></td>
</tr>
        

<tr id="l296">
<td align="right" class="lineCount NoHilight">296</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-296" class="srcLine">        <span class="comment">// Undertype just to make sure the generic typing works</span></span></td>
</tr>
        

<tr id="l297">
<td align="right" class="lineCount Good">297</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 297, 'Tests that hit line # 297');"
    >
    <a title="Line 297, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-297" class="srcLine"><a class="nolink" title="Line 297, Col 9: statement executed 1 time.">        Comparator&lt;Object&gt; comparator = <span class="keyword">new</span> Comparator&lt;Object&gt;() {</a></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="298" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-298' onclick="toggleInlineStats(this, 'inlinestats-298');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-298" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-298'), 'inlinestats-298');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (1)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 1</td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l298">
<td align="right" class="lineCount Good">298</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 298, 'Tests that hit &lt;span class=\'srcFragment\'&gt; compare(A,A)&amp;nbsp;:&amp;nbsp;int &lt;/span&gt;');"
       >
    <a title="Line 298, Col 13: method entered 50 times." class="nolink">&nbsp;50</a>

</td>
<td class="  methodStart  srcCell" id="id-298" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 298,300);" id="img-298" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-298" class="srcLine"><a class="nolink" title="Line 298, Col 13: method entered 50 times.">            <span class="keyword">private</span> <span class="keyword">int</span> compare(A a1, A a2) {</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-298'), 298,300);" id="e298" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l299">
<td align="right" class="lineCount Good">299</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 299, 'Tests that hit line # 299');"
    >
    <a title="Line 299, Col 17: statement executed 50 times." class="nolink">&nbsp;50</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-299" class="srcLine"><a class="nolink" title="Line 299, Col 17: statement executed 50 times.">                <span class="keyword">return</span> a1.getValue() - a2.getValue();</a></span></td>
</tr>
        

<tr id="l300">
<td align="right" class="lineCount NoHilight">300</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-300" class="srcLine">            }</span></td>
</tr>
        

<tr id="l301">
<td align="right" class="lineCount NoHilight">301</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-301" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="302" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-302' onclick="toggleInlineStats(this, 'inlinestats-302');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-302" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-302'), 'inlinestats-302');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (1)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 1</td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l302">
<td align="right" class="lineCount Good">302</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 302, 'Tests that hit &lt;span class=\'srcFragment\'&gt; compare(Object,Object)&amp;nbsp;:&amp;nbsp;int &lt;/span&gt;');"
       >
    <a title="Line 302, Col 13: method entered 50 times." class="nolink">&nbsp;50</a>

</td>
<td class="  methodStart  srcCell" id="id-302" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 302,304);" id="img-302" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-302" class="srcLine"><a class="nolink" title="Line 302, Col 13: method entered 50 times.">            <span class="keyword">public</span> <span class="keyword">int</span> compare(Object o1, Object o2) {</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-302'), 302,304);" id="e302" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l303">
<td align="right" class="lineCount Good">303</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 303, 'Tests that hit line # 303');"
    >
    <a title="Line 303, Col 17: statement executed 50 times." class="nolink">&nbsp;50</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-303" class="srcLine"><a class="nolink" title="Line 303, Col 17: statement executed 50 times.">                <span class="keyword">return</span> compare((A)o1, (A)o2);</a></span></td>
</tr>
        

<tr id="l304">
<td align="right" class="lineCount NoHilight">304</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-304" class="srcLine">            }</span></td>
</tr>
        

<tr id="l305">
<td align="right" class="lineCount NoHilight">305</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-305" class="srcLine">        };</span></td>
</tr>
        

<tr id="l306">
<td align="right" class="lineCount NoHilight">306</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-306" class="srcLine"></span></td>
</tr>
        

<tr id="l307">
<td align="right" class="lineCount NoHilight">307</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-307" class="srcLine">        <span class="comment">// Check my comparator works</span></span></td>
</tr>
        

<tr id="l308">
<td align="right" class="lineCount Good">308</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 308, 'Tests that hit line # 308');"
    >
    <a title="Line 308, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-308" class="srcLine"><a class="nolink" title="Line 308, Col 9: statement executed 1 time.">        assertTrue(comparator.compare(<span class="keyword">new</span> A(1), <span class="keyword">new</span> A(2)) &lt; 0);</a></span></td>
</tr>
        

<tr id="l309">
<td align="right" class="lineCount Good">309</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 309, 'Tests that hit line # 309');"
    >
    <a title="Line 309, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-309" class="srcLine"><a class="nolink" title="Line 309, Col 9: statement executed 1 time.">        assertTrue(comparator.compare(<span class="keyword">new</span> A(2), <span class="keyword">new</span> A(1)) &gt; 0);</a></span></td>
</tr>
        

<tr id="l310">
<td align="right" class="lineCount Good">310</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 310, 'Tests that hit line # 310');"
    >
    <a title="Line 310, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-310" class="srcLine"><a class="nolink" title="Line 310, Col 9: statement executed 1 time.">        assertTrue(comparator.compare(<span class="keyword">new</span> A(1), <span class="keyword">new</span> A(1)) == 0);</a></span></td>
</tr>
        

<tr id="l311">
<td align="right" class="lineCount NoHilight">311</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-311" class="srcLine"></span></td>
</tr>
        

<tr id="l312">
<td align="right" class="lineCount NoHilight">312</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-312" class="srcLine">        <span class="comment">// Now test EasyMock.cmp</span></span></td>
</tr>
        

<tr id="l313">
<td align="right" class="lineCount Good">313</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 313, 'Tests that hit line # 313');"
    >
    <a title="Line 313, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-313" class="srcLine"><a class="nolink" title="Line 313, Col 9: statement executed 1 time.">        checkOrder(mock, <span class="keyword">true</span>);</a></span></td>
</tr>
        

<tr id="l314">
<td align="right" class="lineCount NoHilight">314</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-314" class="srcLine">        </span></td>
</tr>
        

<tr id="l315">
<td align="right" class="lineCount Good">315</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 315, 'Tests that hit line # 315');"
    >
    <a title="Line 315, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-315" class="srcLine"><a class="nolink" title="Line 315, Col 9: statement executed 1 time.">        expect(mock.oneArg(cmp(<span class="keyword">new</span> A(5), comparator, </a></span></td>
</tr>
        

<tr id="l316">
<td align="right" class="lineCount NoHilight">316</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-316" class="srcLine">                LogicalOperator.EQUAL))).andReturn(<span class="string">"0"</span>);</span></td>
</tr>
        

<tr id="l317">
<td align="right" class="lineCount NoHilight">317</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-317" class="srcLine">        </span></td>
</tr>
        

<tr id="l318">
<td align="right" class="lineCount Good">318</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 318, 'Tests that hit line # 318');"
    >
    <a title="Line 318, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-318" class="srcLine"><a class="nolink" title="Line 318, Col 9: statement executed 1 time.">        expect(mock.oneArg(cmp(<span class="keyword">new</span> A(5), comparator, </a></span></td>
</tr>
        

<tr id="l319">
<td align="right" class="lineCount NoHilight">319</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-319" class="srcLine">                LogicalOperator.GREATER))).andReturn(<span class="string">"1"</span>);</span></td>
</tr>
        

<tr id="l320">
<td align="right" class="lineCount NoHilight">320</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-320" class="srcLine">        </span></td>
</tr>
        

<tr id="l321">
<td align="right" class="lineCount Good">321</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 321, 'Tests that hit line # 321');"
    >
    <a title="Line 321, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-321" class="srcLine"><a class="nolink" title="Line 321, Col 9: statement executed 1 time.">        expect(mock.oneArg(cmp(<span class="keyword">new</span> A(5), comparator, </a></span></td>
</tr>
        

<tr id="l322">
<td align="right" class="lineCount NoHilight">322</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-322" class="srcLine">                LogicalOperator.GREATER_OR_EQUAL))).andReturn(<span class="string">"2"</span>);</span></td>
</tr>
        

<tr id="l323">
<td align="right" class="lineCount Good">323</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 323, 'Tests that hit line # 323');"
    >
    <a title="Line 323, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-323" class="srcLine"><a class="nolink" title="Line 323, Col 9: statement executed 1 time.">        expect(mock.oneArg(cmp(<span class="keyword">new</span> A(5), comparator, </a></span></td>
</tr>
        

<tr id="l324">
<td align="right" class="lineCount NoHilight">324</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-324" class="srcLine">                LogicalOperator.GREATER_OR_EQUAL))).andReturn(<span class="string">"2"</span>);</span></td>
</tr>
        

<tr id="l325">
<td align="right" class="lineCount NoHilight">325</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-325" class="srcLine">        </span></td>
</tr>
        

<tr id="l326">
<td align="right" class="lineCount Good">326</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 326, 'Tests that hit line # 326');"
    >
    <a title="Line 326, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-326" class="srcLine"><a class="nolink" title="Line 326, Col 9: statement executed 1 time.">        expect(mock.oneArg(cmp(<span class="keyword">new</span> A(5), comparator, </a></span></td>
</tr>
        

<tr id="l327">
<td align="right" class="lineCount NoHilight">327</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-327" class="srcLine">                LogicalOperator.LESS_OR_EQUAL))).andReturn(<span class="string">"3"</span>);</span></td>
</tr>
        

<tr id="l328">
<td align="right" class="lineCount Good">328</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 328, 'Tests that hit line # 328');"
    >
    <a title="Line 328, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-328" class="srcLine"><a class="nolink" title="Line 328, Col 9: statement executed 1 time.">        expect(mock.oneArg(cmp(<span class="keyword">new</span> A(5), comparator, </a></span></td>
</tr>
        

<tr id="l329">
<td align="right" class="lineCount NoHilight">329</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-329" class="srcLine">                LogicalOperator.LESS_OR_EQUAL))).andReturn(<span class="string">"3"</span>);</span></td>
</tr>
        

<tr id="l330">
<td align="right" class="lineCount NoHilight">330</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-330" class="srcLine">        </span></td>
</tr>
        

<tr id="l331">
<td align="right" class="lineCount Good">331</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 331, 'Tests that hit line # 331');"
    >
    <a title="Line 331, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-331" class="srcLine"><a class="nolink" title="Line 331, Col 9: statement executed 1 time.">        expect(mock.oneArg(cmp(<span class="keyword">new</span> A(5), comparator, </a></span></td>
</tr>
        

<tr id="l332">
<td align="right" class="lineCount NoHilight">332</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-332" class="srcLine">                LogicalOperator.LESS_THAN))).andReturn(<span class="string">"4"</span>);</span></td>
</tr>
        

<tr id="l333">
<td align="right" class="lineCount NoHilight">333</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-333" class="srcLine">                </span></td>
</tr>
        

<tr id="l334">
<td align="right" class="lineCount Good">334</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 334, 'Tests that hit line # 334');"
    >
    <a title="Line 334, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-334" class="srcLine"><a class="nolink" title="Line 334, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l335">
<td align="right" class="lineCount NoHilight">335</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-335" class="srcLine">        </span></td>
</tr>
        

<tr id="l336">
<td align="right" class="lineCount Good">336</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 336, 'Tests that hit line # 336');"
    >
    <a title="Line 336, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-336" class="srcLine"><a class="nolink" title="Line 336, Col 9: statement executed 1 time.">        checkItFails(<span class="keyword">null</span>); <span class="comment">// null is not comparable so always return false</span></a></span></td>
</tr>
        

<tr id="l337">
<td align="right" class="lineCount Good">337</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 337, 'Tests that hit line # 337');"
    >
    <a title="Line 337, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-337" class="srcLine"><a class="nolink" title="Line 337, Col 9: statement executed 1 time.">        <span class="keyword">try</span> {</a></span></td>
</tr>
        

<tr id="l338">
<td align="right" class="lineCount Good">338</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 338, 'Tests that hit line # 338');"
    >
    <a title="Line 338, Col 13: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-338" class="srcLine"><a class="nolink" title="Line 338, Col 13: statement executed 1 time.">            mock.oneArg(<span class="string">""</span>);</a></span></td>
</tr>
        

<tr id="l339">
<td align="right" class="lineCount Bad">339</td>
<td align="right" class="coverageCount Bad missedByTest"
         >
    <a title="Line 339, Col 13: statement not executed." class="nolink">&nbsp;0</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-339" class="srcLineHilight"><a class="nolink" title="Line 339, Col 13: statement not executed.">            fail();</a></span></td>
</tr>
        

<tr id="l340">
<td align="right" class="lineCount NoHilight">340</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-340" class="srcLine">        }</span></td>
</tr>
        

<tr id="l341">
<td align="right" class="lineCount NoHilight">341</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-341" class="srcLine">        <span class="keyword">catch</span>(AssertionError e) {} <span class="comment">// different type isn't either</span></span></td>
</tr>
        

<tr id="l342">
<td align="right" class="lineCount NoHilight">342</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-342" class="srcLine">        </span></td>
</tr>
        

<tr id="l343">
<td align="right" class="lineCount Good">343</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 343, 'Tests that hit line # 343');"
    >
    <a title="Line 343, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-343" class="srcLine"><a class="nolink" title="Line 343, Col 9: statement executed 1 time.">        checkItFails(<span class="keyword">new</span> A(4));</a></span></td>
</tr>
        

<tr id="l344">
<td align="right" class="lineCount Good">344</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 344, 'Tests that hit line # 344');"
    >
    <a title="Line 344, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-344" class="srcLine"><a class="nolink" title="Line 344, Col 9: statement executed 1 time.">        checkItFails(<span class="keyword">new</span> A(6));</a></span></td>
</tr>
        

<tr id="l345">
<td align="right" class="lineCount Good">345</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 345, 'Tests that hit line # 345');"
    >
    <a title="Line 345, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-345" class="srcLine"><a class="nolink" title="Line 345, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"0"</span>, mock.oneArg(<span class="keyword">new</span> A(5)));</a></span></td>
</tr>
        

<tr id="l346">
<td align="right" class="lineCount NoHilight">346</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-346" class="srcLine"></span></td>
</tr>
        

<tr id="l347">
<td align="right" class="lineCount Good">347</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 347, 'Tests that hit line # 347');"
    >
    <a title="Line 347, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-347" class="srcLine"><a class="nolink" title="Line 347, Col 9: statement executed 1 time.">        checkItFails(<span class="keyword">new</span> A(4));</a></span></td>
</tr>
        

<tr id="l348">
<td align="right" class="lineCount Good">348</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 348, 'Tests that hit line # 348');"
    >
    <a title="Line 348, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-348" class="srcLine"><a class="nolink" title="Line 348, Col 9: statement executed 1 time.">        checkItFails(<span class="keyword">new</span> A(5));        </a></span></td>
</tr>
        

<tr id="l349">
<td align="right" class="lineCount Good">349</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 349, 'Tests that hit line # 349');"
    >
    <a title="Line 349, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-349" class="srcLine"><a class="nolink" title="Line 349, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(<span class="keyword">new</span> A(6)));</a></span></td>
</tr>
        

<tr id="l350">
<td align="right" class="lineCount NoHilight">350</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-350" class="srcLine">        </span></td>
</tr>
        

<tr id="l351">
<td align="right" class="lineCount Good">351</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 351, 'Tests that hit line # 351');"
    >
    <a title="Line 351, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-351" class="srcLine"><a class="nolink" title="Line 351, Col 9: statement executed 1 time.">        checkItFails(<span class="keyword">new</span> A(4));</a></span></td>
</tr>
        

<tr id="l352">
<td align="right" class="lineCount Good">352</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 352, 'Tests that hit line # 352');"
    >
    <a title="Line 352, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-352" class="srcLine"><a class="nolink" title="Line 352, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(<span class="keyword">new</span> A(6)));</a></span></td>
</tr>
        

<tr id="l353">
<td align="right" class="lineCount Good">353</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 353, 'Tests that hit line # 353');"
    >
    <a title="Line 353, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-353" class="srcLine"><a class="nolink" title="Line 353, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(<span class="keyword">new</span> A(5)));</a></span></td>
</tr>
        

<tr id="l354">
<td align="right" class="lineCount NoHilight">354</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-354" class="srcLine">        </span></td>
</tr>
        

<tr id="l355">
<td align="right" class="lineCount Good">355</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 355, 'Tests that hit line # 355');"
    >
    <a title="Line 355, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-355" class="srcLine"><a class="nolink" title="Line 355, Col 9: statement executed 1 time.">        checkItFails(<span class="keyword">new</span> A(6));</a></span></td>
</tr>
        

<tr id="l356">
<td align="right" class="lineCount Good">356</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 356, 'Tests that hit line # 356');"
    >
    <a title="Line 356, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-356" class="srcLine"><a class="nolink" title="Line 356, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"3"</span>, mock.oneArg(<span class="keyword">new</span> A(4)));</a></span></td>
</tr>
        

<tr id="l357">
<td align="right" class="lineCount Good">357</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 357, 'Tests that hit line # 357');"
    >
    <a title="Line 357, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-357" class="srcLine"><a class="nolink" title="Line 357, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"3"</span>, mock.oneArg(<span class="keyword">new</span> A(5)));</a></span></td>
</tr>
        

<tr id="l358">
<td align="right" class="lineCount NoHilight">358</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-358" class="srcLine"></span></td>
</tr>
        

<tr id="l359">
<td align="right" class="lineCount Good">359</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 359, 'Tests that hit line # 359');"
    >
    <a title="Line 359, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-359" class="srcLine"><a class="nolink" title="Line 359, Col 9: statement executed 1 time.">        checkItFails(<span class="keyword">new</span> A(5));</a></span></td>
</tr>
        

<tr id="l360">
<td align="right" class="lineCount Good">360</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 360, 'Tests that hit line # 360');"
    >
    <a title="Line 360, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-360" class="srcLine"><a class="nolink" title="Line 360, Col 9: statement executed 1 time.">        checkItFails(<span class="keyword">new</span> A(6));</a></span></td>
</tr>
        

<tr id="l361">
<td align="right" class="lineCount Good">361</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 361, 'Tests that hit line # 361');"
    >
    <a title="Line 361, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-361" class="srcLine"><a class="nolink" title="Line 361, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"4"</span>, mock.oneArg(<span class="keyword">new</span> A(4)));</a></span></td>
</tr>
        

<tr id="l362">
<td align="right" class="lineCount NoHilight">362</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-362" class="srcLine">        </span></td>
</tr>
        

<tr id="l363">
<td align="right" class="lineCount Good">363</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 363, 'Tests that hit line # 363');"
    >
    <a title="Line 363, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-363" class="srcLine"><a class="nolink" title="Line 363, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l364">
<td align="right" class="lineCount NoHilight">364</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-364" class="srcLine">    }</span></td>
</tr>
        

<tr id="l365">
<td align="right" class="lineCount NoHilight">365</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-365" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="366" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-366' onclick="toggleInlineStats(this, 'inlinestats-366');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-366" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-366'), 'inlinestats-366');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="33,3% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="66,7% Covered" class="barPositive barPositive" style="width: 66.7%"></div>
    </div>
</div></td><td>66,7%</td>
           <td class="inlineStat">Uncovered Elements: 1 (3)</td>
           <td class="inlineStat">Complexity: 2</td>
           <td class="inlineStat">Complexity Density: 0,67</td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l366">
<td align="right" class="lineCount Good">366</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 366, 'Tests that hit &lt;span class=\'srcFragment\'&gt; checkItFails(A)&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 366, Col 5: method entered 9 times." class="nolink">&nbsp;9</a>

</td>
<td class="  methodStart  srcCell" id="id-366" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 366,372);" id="img-366" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-366" class="srcLine"><a class="nolink" title="Line 366, Col 5: method entered 9 times.">    <span class="keyword">private</span> <span class="keyword">void</span> checkItFails(A a) {</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-366'), 366,372);" id="e366" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l367">
<td align="right" class="lineCount Good">367</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 367, 'Tests that hit line # 367');"
    >
    <a title="Line 367, Col 9: statement executed 9 times." class="nolink">&nbsp;9</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-367" class="srcLine"><a class="nolink" title="Line 367, Col 9: statement executed 9 times.">        <span class="keyword">try</span> {</a></span></td>
</tr>
        

<tr id="l368">
<td align="right" class="lineCount Good">368</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 368, 'Tests that hit line # 368');"
    >
    <a title="Line 368, Col 13: statement executed 9 times." class="nolink">&nbsp;9</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-368" class="srcLine"><a class="nolink" title="Line 368, Col 13: statement executed 9 times.">            mock.oneArg(a);</a></span></td>
</tr>
        

<tr id="l369">
<td align="right" class="lineCount Bad">369</td>
<td align="right" class="coverageCount Bad missedByTest"
         >
    <a title="Line 369, Col 13: statement not executed." class="nolink">&nbsp;0</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-369" class="srcLineHilight"><a class="nolink" title="Line 369, Col 13: statement not executed.">            fail();</a></span></td>
</tr>
        

<tr id="l370">
<td align="right" class="lineCount NoHilight">370</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-370" class="srcLine">        }</span></td>
</tr>
        

<tr id="l371">
<td align="right" class="lineCount NoHilight">371</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-371" class="srcLine">        <span class="keyword">catch</span>(AssertionError e) {}</span></td>
</tr>
        

<tr id="l372">
<td align="right" class="lineCount NoHilight">372</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-372" class="srcLine">    }</span></td>
</tr>
        

<tr id="l373">
<td align="right" class="lineCount NoHilight">373</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-373" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="374" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-374' onclick="toggleInlineStats(this, 'inlinestats-374');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-374" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-374'), 'inlinestats-374');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (22)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,05</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l374">
<td align="right" class="lineCount Good">374</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 374, 'Tests that hit &lt;span class=\'srcFragment\'&gt; any()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 374, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-374" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 374,398);" id="img-374" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-374" class="srcLine"><a class="nolink" title="Line 374, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-374'), 374,398);" id="e374" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l375">
<td align="right" class="lineCount NoHilight">375</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-375" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> any() {</span></td>
</tr>
        

<tr id="l376">
<td align="right" class="lineCount Good">376</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 376, 'Tests that hit line # 376');"
    >
    <a title="Line 376, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-376" class="srcLine"><a class="nolink" title="Line 376, Col 9: statement executed 1 time.">        expect(mock.oneArg(anyBoolean())).andReturn(<span class="string">"0"</span>);</a></span></td>
</tr>
        

<tr id="l377">
<td align="right" class="lineCount Good">377</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 377, 'Tests that hit line # 377');"
    >
    <a title="Line 377, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-377" class="srcLine"><a class="nolink" title="Line 377, Col 9: statement executed 1 time.">        expect(mock.oneArg(anyByte())).andReturn(<span class="string">"1"</span>);</a></span></td>
</tr>
        

<tr id="l378">
<td align="right" class="lineCount Good">378</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 378, 'Tests that hit line # 378');"
    >
    <a title="Line 378, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-378" class="srcLine"><a class="nolink" title="Line 378, Col 9: statement executed 1 time.">        expect(mock.oneArg(anyChar())).andReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l379">
<td align="right" class="lineCount Good">379</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 379, 'Tests that hit line # 379');"
    >
    <a title="Line 379, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-379" class="srcLine"><a class="nolink" title="Line 379, Col 9: statement executed 1 time.">        expect(mock.oneArg(anyDouble())).andReturn(<span class="string">"3"</span>);</a></span></td>
</tr>
        

<tr id="l380">
<td align="right" class="lineCount Good">380</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 380, 'Tests that hit line # 380');"
    >
    <a title="Line 380, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-380" class="srcLine"><a class="nolink" title="Line 380, Col 9: statement executed 1 time.">        expect(mock.oneArg(anyFloat())).andReturn(<span class="string">"4"</span>);</a></span></td>
</tr>
        

<tr id="l381">
<td align="right" class="lineCount Good">381</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 381, 'Tests that hit line # 381');"
    >
    <a title="Line 381, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-381" class="srcLine"><a class="nolink" title="Line 381, Col 9: statement executed 1 time.">        expect(mock.oneArg(anyInt())).andReturn(<span class="string">"5"</span>);</a></span></td>
</tr>
        

<tr id="l382">
<td align="right" class="lineCount Good">382</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 382, 'Tests that hit line # 382');"
    >
    <a title="Line 382, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-382" class="srcLine"><a class="nolink" title="Line 382, Col 9: statement executed 1 time.">        expect(mock.oneArg(anyLong())).andReturn(<span class="string">"6"</span>);</a></span></td>
</tr>
        

<tr id="l383">
<td align="right" class="lineCount Good">383</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 383, 'Tests that hit line # 383');"
    >
    <a title="Line 383, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-383" class="srcLine"><a class="nolink" title="Line 383, Col 9: statement executed 1 time.">        expect(mock.oneArg(anyShort())).andReturn(<span class="string">"7"</span>);</a></span></td>
</tr>
        

<tr id="l384">
<td align="right" class="lineCount Good">384</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 384, 'Tests that hit line # 384');"
    >
    <a title="Line 384, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-384" class="srcLine"><a class="nolink" title="Line 384, Col 9: statement executed 1 time.">        expect(mock.oneArg((String) anyObject())).andReturn(<span class="string">"8"</span>);</a></span></td>
</tr>
        

<tr id="l385">
<td align="right" class="lineCount Good">385</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 385, 'Tests that hit line # 385');"
    >
    <a title="Line 385, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-385" class="srcLine"><a class="nolink" title="Line 385, Col 9: statement executed 1 time.">        expect(mock.oneArg((List&lt;String&gt;) EasyMock.&lt;List&lt;String&gt;&gt;anyObject())).andReturn(<span class="string">"9"</span>); <span class="comment">// make sure there's no warning on the cast</span></a></span></td>
</tr>
        

<tr id="l386">
<td align="right" class="lineCount Good">386</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 386, 'Tests that hit line # 386');"
    >
    <a title="Line 386, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-386" class="srcLine"><a class="nolink" title="Line 386, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l387">
<td align="right" class="lineCount Good">387</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 387, 'Tests that hit line # 387');"
    >
    <a title="Line 387, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-387" class="srcLine"><a class="nolink" title="Line 387, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"9"</span>, mock.oneArg(Collections.emptyList()));</a></span></td>
</tr>
        

<tr id="l388">
<td align="right" class="lineCount Good">388</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 388, 'Tests that hit line # 388');"
    >
    <a title="Line 388, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-388" class="srcLine"><a class="nolink" title="Line 388, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"0"</span>, mock.oneArg(<span class="keyword">true</span>));</a></span></td>
</tr>
        

<tr id="l389">
<td align="right" class="lineCount Good">389</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 389, 'Tests that hit line # 389');"
    >
    <a title="Line 389, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-389" class="srcLine"><a class="nolink" title="Line 389, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg((<span class="keyword">byte</span>) 1));</a></span></td>
</tr>
        

<tr id="l390">
<td align="right" class="lineCount Good">390</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 390, 'Tests that hit line # 390');"
    >
    <a title="Line 390, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-390" class="srcLine"><a class="nolink" title="Line 390, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg((<span class="keyword">char</span>) 1));</a></span></td>
</tr>
        

<tr id="l391">
<td align="right" class="lineCount Good">391</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 391, 'Tests that hit line # 391');"
    >
    <a title="Line 391, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-391" class="srcLine"><a class="nolink" title="Line 391, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"3"</span>, mock.oneArg((<span class="keyword">double</span>) 1));</a></span></td>
</tr>
        

<tr id="l392">
<td align="right" class="lineCount Good">392</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 392, 'Tests that hit line # 392');"
    >
    <a title="Line 392, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-392" class="srcLine"><a class="nolink" title="Line 392, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"7"</span>, mock.oneArg((<span class="keyword">short</span>) 1));</a></span></td>
</tr>
        

<tr id="l393">
<td align="right" class="lineCount Good">393</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 393, 'Tests that hit line # 393');"
    >
    <a title="Line 393, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-393" class="srcLine"><a class="nolink" title="Line 393, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"8"</span>, mock.oneArg(<span class="string">"Test"</span>));</a></span></td>
</tr>
        

<tr id="l394">
<td align="right" class="lineCount Good">394</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 394, 'Tests that hit line # 394');"
    >
    <a title="Line 394, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-394" class="srcLine"><a class="nolink" title="Line 394, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"4"</span>, mock.oneArg((<span class="keyword">float</span>) 1));</a></span></td>
</tr>
        

<tr id="l395">
<td align="right" class="lineCount Good">395</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 395, 'Tests that hit line # 395');"
    >
    <a title="Line 395, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-395" class="srcLine"><a class="nolink" title="Line 395, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"5"</span>, mock.oneArg((<span class="keyword">int</span>) 1));</a></span></td>
</tr>
        

<tr id="l396">
<td align="right" class="lineCount Good">396</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 396, 'Tests that hit line # 396');"
    >
    <a title="Line 396, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-396" class="srcLine"><a class="nolink" title="Line 396, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"6"</span>, mock.oneArg((<span class="keyword">long</span>) 1));</a></span></td>
</tr>
        

<tr id="l397">
<td align="right" class="lineCount Good">397</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 397, 'Tests that hit line # 397');"
    >
    <a title="Line 397, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-397" class="srcLine"><a class="nolink" title="Line 397, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l398">
<td align="right" class="lineCount NoHilight">398</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-398" class="srcLine">    }    </span></td>
</tr>
        

<tr id="l399">
<td align="right" class="lineCount NoHilight">399</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-399" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="400" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-400' onclick="toggleInlineStats(this, 'inlinestats-400');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-400" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-400'), 'inlinestats-400');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (22)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,05</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l400">
<td align="right" class="lineCount Good">400</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 400, 'Tests that hit &lt;span class=\'srcFragment\'&gt; arrayEquals()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 400, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-400" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 400,424);" id="img-400" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-400" class="srcLine"><a class="nolink" title="Line 400, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-400'), 400,424);" id="e400" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l401">
<td align="right" class="lineCount NoHilight">401</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-401" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> arrayEquals() {</span></td>
</tr>
        

<tr id="l402">
<td align="right" class="lineCount Good">402</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 402, 'Tests that hit line # 402');"
    >
    <a title="Line 402, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-402" class="srcLine"><a class="nolink" title="Line 402, Col 9: statement executed 1 time.">        expect(mock.oneArray(aryEq(<span class="keyword">new</span> <span class="keyword">boolean</span>[] { <span class="keyword">true</span> }))).andReturn(<span class="string">"0"</span>);</a></span></td>
</tr>
        

<tr id="l403">
<td align="right" class="lineCount Good">403</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 403, 'Tests that hit line # 403');"
    >
    <a title="Line 403, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-403" class="srcLine"><a class="nolink" title="Line 403, Col 9: statement executed 1 time.">        expect(mock.oneArray(aryEq(<span class="keyword">new</span> <span class="keyword">byte</span>[] { 1 }))).andReturn(<span class="string">"1"</span>);</a></span></td>
</tr>
        

<tr id="l404">
<td align="right" class="lineCount Good">404</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 404, 'Tests that hit line # 404');"
    >
    <a title="Line 404, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-404" class="srcLine"><a class="nolink" title="Line 404, Col 9: statement executed 1 time.">        expect(mock.oneArray(aryEq(<span class="keyword">new</span> <span class="keyword">char</span>[] { 1 }))).andReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l405">
<td align="right" class="lineCount Good">405</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 405, 'Tests that hit line # 405');"
    >
    <a title="Line 405, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-405" class="srcLine"><a class="nolink" title="Line 405, Col 9: statement executed 1 time.">        expect(mock.oneArray(aryEq(<span class="keyword">new</span> <span class="keyword">double</span>[] { 1 }))).andReturn(<span class="string">"3"</span>);</a></span></td>
</tr>
        

<tr id="l406">
<td align="right" class="lineCount Good">406</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 406, 'Tests that hit line # 406');"
    >
    <a title="Line 406, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-406" class="srcLine"><a class="nolink" title="Line 406, Col 9: statement executed 1 time.">        expect(mock.oneArray(aryEq(<span class="keyword">new</span> <span class="keyword">float</span>[] { 1 }))).andReturn(<span class="string">"4"</span>);</a></span></td>
</tr>
        

<tr id="l407">
<td align="right" class="lineCount Good">407</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 407, 'Tests that hit line # 407');"
    >
    <a title="Line 407, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-407" class="srcLine"><a class="nolink" title="Line 407, Col 9: statement executed 1 time.">        expect(mock.oneArray(aryEq(<span class="keyword">new</span> <span class="keyword">int</span>[] { 1 }))).andReturn(<span class="string">"5"</span>);</a></span></td>
</tr>
        

<tr id="l408">
<td align="right" class="lineCount Good">408</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 408, 'Tests that hit line # 408');"
    >
    <a title="Line 408, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-408" class="srcLine"><a class="nolink" title="Line 408, Col 9: statement executed 1 time.">        expect(mock.oneArray(aryEq(<span class="keyword">new</span> <span class="keyword">long</span>[] { 1 }))).andReturn(<span class="string">"6"</span>);</a></span></td>
</tr>
        

<tr id="l409">
<td align="right" class="lineCount Good">409</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 409, 'Tests that hit line # 409');"
    >
    <a title="Line 409, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-409" class="srcLine"><a class="nolink" title="Line 409, Col 9: statement executed 1 time.">        expect(mock.oneArray(aryEq(<span class="keyword">new</span> <span class="keyword">short</span>[] { 1 }))).andReturn(<span class="string">"7"</span>);</a></span></td>
</tr>
        

<tr id="l410">
<td align="right" class="lineCount Good">410</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 410, 'Tests that hit line # 410');"
    >
    <a title="Line 410, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-410" class="srcLine"><a class="nolink" title="Line 410, Col 9: statement executed 1 time.">        expect(mock.oneArray(aryEq(<span class="keyword">new</span> String[] { <span class="string">"Test"</span> }))).andReturn(<span class="string">"8"</span>);</a></span></td>
</tr>
        

<tr id="l411">
<td align="right" class="lineCount Good">411</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 411, 'Tests that hit line # 411');"
    >
    <a title="Line 411, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-411" class="srcLine"><a class="nolink" title="Line 411, Col 9: statement executed 1 time.">        expect(mock.oneArray(aryEq(<span class="keyword">new</span> Object[] { <span class="string">"Test"</span> }))).andReturn(<span class="string">"9"</span>);</a></span></td>
</tr>
        

<tr id="l412">
<td align="right" class="lineCount Good">412</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 412, 'Tests that hit line # 412');"
    >
    <a title="Line 412, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-412" class="srcLine"><a class="nolink" title="Line 412, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l413">
<td align="right" class="lineCount Good">413</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 413, 'Tests that hit line # 413');"
    >
    <a title="Line 413, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-413" class="srcLine"><a class="nolink" title="Line 413, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"9"</span>, mock.oneArray(<span class="keyword">new</span> Object[] { <span class="string">"Test"</span> }));</a></span></td>
</tr>
        

<tr id="l414">
<td align="right" class="lineCount Good">414</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 414, 'Tests that hit line # 414');"
    >
    <a title="Line 414, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-414" class="srcLine"><a class="nolink" title="Line 414, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"0"</span>, mock.oneArray(<span class="keyword">new</span> <span class="keyword">boolean</span>[] { <span class="keyword">true</span> }));</a></span></td>
</tr>
        

<tr id="l415">
<td align="right" class="lineCount Good">415</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 415, 'Tests that hit line # 415');"
    >
    <a title="Line 415, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-415" class="srcLine"><a class="nolink" title="Line 415, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArray(<span class="keyword">new</span> <span class="keyword">byte</span>[] { 1 }));</a></span></td>
</tr>
        

<tr id="l416">
<td align="right" class="lineCount Good">416</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 416, 'Tests that hit line # 416');"
    >
    <a title="Line 416, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-416" class="srcLine"><a class="nolink" title="Line 416, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArray(<span class="keyword">new</span> <span class="keyword">char</span>[] { 1 }));</a></span></td>
</tr>
        

<tr id="l417">
<td align="right" class="lineCount Good">417</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 417, 'Tests that hit line # 417');"
    >
    <a title="Line 417, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-417" class="srcLine"><a class="nolink" title="Line 417, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"3"</span>, mock.oneArray(<span class="keyword">new</span> <span class="keyword">double</span>[] { 1 }));</a></span></td>
</tr>
        

<tr id="l418">
<td align="right" class="lineCount Good">418</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 418, 'Tests that hit line # 418');"
    >
    <a title="Line 418, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-418" class="srcLine"><a class="nolink" title="Line 418, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"7"</span>, mock.oneArray(<span class="keyword">new</span> <span class="keyword">short</span>[] { 1 }));</a></span></td>
</tr>
        

<tr id="l419">
<td align="right" class="lineCount Good">419</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 419, 'Tests that hit line # 419');"
    >
    <a title="Line 419, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-419" class="srcLine"><a class="nolink" title="Line 419, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"8"</span>, mock.oneArray(<span class="keyword">new</span> String[] { <span class="string">"Test"</span> }));</a></span></td>
</tr>
        

<tr id="l420">
<td align="right" class="lineCount Good">420</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 420, 'Tests that hit line # 420');"
    >
    <a title="Line 420, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-420" class="srcLine"><a class="nolink" title="Line 420, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"4"</span>, mock.oneArray(<span class="keyword">new</span> <span class="keyword">float</span>[] { 1 }));</a></span></td>
</tr>
        

<tr id="l421">
<td align="right" class="lineCount Good">421</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 421, 'Tests that hit line # 421');"
    >
    <a title="Line 421, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-421" class="srcLine"><a class="nolink" title="Line 421, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"5"</span>, mock.oneArray(<span class="keyword">new</span> <span class="keyword">int</span>[] { 1 }));</a></span></td>
</tr>
        

<tr id="l422">
<td align="right" class="lineCount Good">422</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 422, 'Tests that hit line # 422');"
    >
    <a title="Line 422, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-422" class="srcLine"><a class="nolink" title="Line 422, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"6"</span>, mock.oneArray(<span class="keyword">new</span> <span class="keyword">long</span>[] { 1 }));</a></span></td>
</tr>
        

<tr id="l423">
<td align="right" class="lineCount Good">423</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 423, 'Tests that hit line # 423');"
    >
    <a title="Line 423, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-423" class="srcLine"><a class="nolink" title="Line 423, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l424">
<td align="right" class="lineCount NoHilight">424</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-424" class="srcLine">    }</span></td>
</tr>
        

<tr id="l425">
<td align="right" class="lineCount NoHilight">425</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-425" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="426" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-426' onclick="toggleInlineStats(this, 'inlinestats-426');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-426" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-426'), 'inlinestats-426');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (9)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,11</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l426">
<td align="right" class="lineCount Good">426</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 426, 'Tests that hit &lt;span class=\'srcFragment\'&gt; greaterOrEqual()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 426, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-426" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 426,440);" id="img-426" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-426" class="srcLine"><a class="nolink" title="Line 426, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-426'), 426,440);" id="e426" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l427">
<td align="right" class="lineCount NoHilight">427</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-427" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> greaterOrEqual() {</span></td>
</tr>
        

<tr id="l428">
<td align="right" class="lineCount Good">428</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 428, 'Tests that hit line # 428');"
    >
    <a title="Line 428, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-428" class="srcLine"><a class="nolink" title="Line 428, Col 9: statement executed 1 time.">        expect(mock.oneArg(geq(7))).andReturn(<span class="string">"1"</span>).times(3);</a></span></td>
</tr>
        

<tr id="l429">
<td align="right" class="lineCount Good">429</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 429, 'Tests that hit line # 429');"
    >
    <a title="Line 429, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-429" class="srcLine"><a class="nolink" title="Line 429, Col 9: statement executed 1 time.">        expect(mock.oneArg(lt(7))).andStubReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l430">
<td align="right" class="lineCount NoHilight">430</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-430" class="srcLine"></span></td>
</tr>
        

<tr id="l431">
<td align="right" class="lineCount Good">431</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 431, 'Tests that hit line # 431');"
    >
    <a title="Line 431, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-431" class="srcLine"><a class="nolink" title="Line 431, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l432">
<td align="right" class="lineCount NoHilight">432</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-432" class="srcLine"></span></td>
</tr>
        

<tr id="l433">
<td align="right" class="lineCount Good">433</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 433, 'Tests that hit line # 433');"
    >
    <a title="Line 433, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-433" class="srcLine"><a class="nolink" title="Line 433, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(7));</a></span></td>
</tr>
        

<tr id="l434">
<td align="right" class="lineCount Good">434</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 434, 'Tests that hit line # 434');"
    >
    <a title="Line 434, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-434" class="srcLine"><a class="nolink" title="Line 434, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(6));</a></span></td>
</tr>
        

<tr id="l435">
<td align="right" class="lineCount Good">435</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 435, 'Tests that hit line # 435');"
    >
    <a title="Line 435, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-435" class="srcLine"><a class="nolink" title="Line 435, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(8));</a></span></td>
</tr>
        

<tr id="l436">
<td align="right" class="lineCount Good">436</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 436, 'Tests that hit line # 436');"
    >
    <a title="Line 436, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-436" class="srcLine"><a class="nolink" title="Line 436, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(6));</a></span></td>
</tr>
        

<tr id="l437">
<td align="right" class="lineCount Good">437</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 437, 'Tests that hit line # 437');"
    >
    <a title="Line 437, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-437" class="srcLine"><a class="nolink" title="Line 437, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(9));</a></span></td>
</tr>
        

<tr id="l438">
<td align="right" class="lineCount NoHilight">438</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-438" class="srcLine"></span></td>
</tr>
        

<tr id="l439">
<td align="right" class="lineCount Good">439</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 439, 'Tests that hit line # 439');"
    >
    <a title="Line 439, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-439" class="srcLine"><a class="nolink" title="Line 439, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l440">
<td align="right" class="lineCount NoHilight">440</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-440" class="srcLine">    }</span></td>
</tr>
        

<tr id="l441">
<td align="right" class="lineCount NoHilight">441</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-441" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="442" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-442' onclick="toggleInlineStats(this, 'inlinestats-442');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-442" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-442'), 'inlinestats-442');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (9)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,11</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l442">
<td align="right" class="lineCount Good">442</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 442, 'Tests that hit &lt;span class=\'srcFragment\'&gt; greaterThan()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 442, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-442" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 442,456);" id="img-442" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-442" class="srcLine"><a class="nolink" title="Line 442, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-442'), 442,456);" id="e442" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l443">
<td align="right" class="lineCount NoHilight">443</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-443" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> greaterThan() {</span></td>
</tr>
        

<tr id="l444">
<td align="right" class="lineCount Good">444</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 444, 'Tests that hit line # 444');"
    >
    <a title="Line 444, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-444" class="srcLine"><a class="nolink" title="Line 444, Col 9: statement executed 1 time.">        expect(mock.oneArg(gt(7))).andReturn(<span class="string">"1"</span>).times(3);</a></span></td>
</tr>
        

<tr id="l445">
<td align="right" class="lineCount Good">445</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 445, 'Tests that hit line # 445');"
    >
    <a title="Line 445, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-445" class="srcLine"><a class="nolink" title="Line 445, Col 9: statement executed 1 time.">        expect(mock.oneArg(leq(7))).andStubReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l446">
<td align="right" class="lineCount NoHilight">446</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-446" class="srcLine"></span></td>
</tr>
        

<tr id="l447">
<td align="right" class="lineCount Good">447</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 447, 'Tests that hit line # 447');"
    >
    <a title="Line 447, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-447" class="srcLine"><a class="nolink" title="Line 447, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l448">
<td align="right" class="lineCount NoHilight">448</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-448" class="srcLine"></span></td>
</tr>
        

<tr id="l449">
<td align="right" class="lineCount Good">449</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 449, 'Tests that hit line # 449');"
    >
    <a title="Line 449, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-449" class="srcLine"><a class="nolink" title="Line 449, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(8));</a></span></td>
</tr>
        

<tr id="l450">
<td align="right" class="lineCount Good">450</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 450, 'Tests that hit line # 450');"
    >
    <a title="Line 450, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-450" class="srcLine"><a class="nolink" title="Line 450, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(7));</a></span></td>
</tr>
        

<tr id="l451">
<td align="right" class="lineCount Good">451</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 451, 'Tests that hit line # 451');"
    >
    <a title="Line 451, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-451" class="srcLine"><a class="nolink" title="Line 451, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(9));</a></span></td>
</tr>
        

<tr id="l452">
<td align="right" class="lineCount Good">452</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 452, 'Tests that hit line # 452');"
    >
    <a title="Line 452, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-452" class="srcLine"><a class="nolink" title="Line 452, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(6));</a></span></td>
</tr>
        

<tr id="l453">
<td align="right" class="lineCount Good">453</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 453, 'Tests that hit line # 453');"
    >
    <a title="Line 453, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-453" class="srcLine"><a class="nolink" title="Line 453, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(10));</a></span></td>
</tr>
        

<tr id="l454">
<td align="right" class="lineCount NoHilight">454</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-454" class="srcLine"></span></td>
</tr>
        

<tr id="l455">
<td align="right" class="lineCount Good">455</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 455, 'Tests that hit line # 455');"
    >
    <a title="Line 455, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-455" class="srcLine"><a class="nolink" title="Line 455, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l456">
<td align="right" class="lineCount NoHilight">456</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-456" class="srcLine">    }</span></td>
</tr>
        

<tr id="l457">
<td align="right" class="lineCount NoHilight">457</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-457" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="458" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-458' onclick="toggleInlineStats(this, 'inlinestats-458');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-458" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-458'), 'inlinestats-458');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (9)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,11</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l458">
<td align="right" class="lineCount Good">458</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 458, 'Tests that hit &lt;span class=\'srcFragment\'&gt; lessOrEqual()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 458, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-458" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 458,472);" id="img-458" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-458" class="srcLine"><a class="nolink" title="Line 458, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-458'), 458,472);" id="e458" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l459">
<td align="right" class="lineCount NoHilight">459</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-459" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> lessOrEqual() {</span></td>
</tr>
        

<tr id="l460">
<td align="right" class="lineCount Good">460</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 460, 'Tests that hit line # 460');"
    >
    <a title="Line 460, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-460" class="srcLine"><a class="nolink" title="Line 460, Col 9: statement executed 1 time.">        expect(mock.oneArg(leq(7))).andReturn(<span class="string">"1"</span>).times(3);</a></span></td>
</tr>
        

<tr id="l461">
<td align="right" class="lineCount Good">461</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 461, 'Tests that hit line # 461');"
    >
    <a title="Line 461, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-461" class="srcLine"><a class="nolink" title="Line 461, Col 9: statement executed 1 time.">        expect(mock.oneArg(gt(7))).andStubReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l462">
<td align="right" class="lineCount NoHilight">462</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-462" class="srcLine"></span></td>
</tr>
        

<tr id="l463">
<td align="right" class="lineCount Good">463</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 463, 'Tests that hit line # 463');"
    >
    <a title="Line 463, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-463" class="srcLine"><a class="nolink" title="Line 463, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l464">
<td align="right" class="lineCount NoHilight">464</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-464" class="srcLine"></span></td>
</tr>
        

<tr id="l465">
<td align="right" class="lineCount Good">465</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 465, 'Tests that hit line # 465');"
    >
    <a title="Line 465, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-465" class="srcLine"><a class="nolink" title="Line 465, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(7));</a></span></td>
</tr>
        

<tr id="l466">
<td align="right" class="lineCount Good">466</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 466, 'Tests that hit line # 466');"
    >
    <a title="Line 466, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-466" class="srcLine"><a class="nolink" title="Line 466, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(8));</a></span></td>
</tr>
        

<tr id="l467">
<td align="right" class="lineCount Good">467</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 467, 'Tests that hit line # 467');"
    >
    <a title="Line 467, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-467" class="srcLine"><a class="nolink" title="Line 467, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(6));</a></span></td>
</tr>
        

<tr id="l468">
<td align="right" class="lineCount Good">468</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 468, 'Tests that hit line # 468');"
    >
    <a title="Line 468, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-468" class="srcLine"><a class="nolink" title="Line 468, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(9));</a></span></td>
</tr>
        

<tr id="l469">
<td align="right" class="lineCount Good">469</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 469, 'Tests that hit line # 469');"
    >
    <a title="Line 469, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-469" class="srcLine"><a class="nolink" title="Line 469, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(5));</a></span></td>
</tr>
        

<tr id="l470">
<td align="right" class="lineCount NoHilight">470</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-470" class="srcLine"></span></td>
</tr>
        

<tr id="l471">
<td align="right" class="lineCount Good">471</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 471, 'Tests that hit line # 471');"
    >
    <a title="Line 471, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-471" class="srcLine"><a class="nolink" title="Line 471, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l472">
<td align="right" class="lineCount NoHilight">472</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-472" class="srcLine">    }</span></td>
</tr>
        

<tr id="l473">
<td align="right" class="lineCount NoHilight">473</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-473" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="474" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-474' onclick="toggleInlineStats(this, 'inlinestats-474');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-474" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-474'), 'inlinestats-474');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (9)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,11</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l474">
<td align="right" class="lineCount Good">474</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 474, 'Tests that hit &lt;span class=\'srcFragment\'&gt; lessThan()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 474, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-474" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 474,488);" id="img-474" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-474" class="srcLine"><a class="nolink" title="Line 474, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-474'), 474,488);" id="e474" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l475">
<td align="right" class="lineCount NoHilight">475</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-475" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> lessThan() {</span></td>
</tr>
        

<tr id="l476">
<td align="right" class="lineCount Good">476</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 476, 'Tests that hit line # 476');"
    >
    <a title="Line 476, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-476" class="srcLine"><a class="nolink" title="Line 476, Col 9: statement executed 1 time.">        expect(mock.oneArg(lt(7))).andReturn(<span class="string">"1"</span>).times(3);</a></span></td>
</tr>
        

<tr id="l477">
<td align="right" class="lineCount Good">477</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 477, 'Tests that hit line # 477');"
    >
    <a title="Line 477, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-477" class="srcLine"><a class="nolink" title="Line 477, Col 9: statement executed 1 time.">        expect(mock.oneArg(geq(7))).andStubReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l478">
<td align="right" class="lineCount NoHilight">478</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-478" class="srcLine"></span></td>
</tr>
        

<tr id="l479">
<td align="right" class="lineCount Good">479</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 479, 'Tests that hit line # 479');"
    >
    <a title="Line 479, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-479" class="srcLine"><a class="nolink" title="Line 479, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l480">
<td align="right" class="lineCount NoHilight">480</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-480" class="srcLine"></span></td>
</tr>
        

<tr id="l481">
<td align="right" class="lineCount Good">481</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 481, 'Tests that hit line # 481');"
    >
    <a title="Line 481, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-481" class="srcLine"><a class="nolink" title="Line 481, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(5));</a></span></td>
</tr>
        

<tr id="l482">
<td align="right" class="lineCount Good">482</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 482, 'Tests that hit line # 482');"
    >
    <a title="Line 482, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-482" class="srcLine"><a class="nolink" title="Line 482, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(7));</a></span></td>
</tr>
        

<tr id="l483">
<td align="right" class="lineCount Good">483</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 483, 'Tests that hit line # 483');"
    >
    <a title="Line 483, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-483" class="srcLine"><a class="nolink" title="Line 483, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(6));</a></span></td>
</tr>
        

<tr id="l484">
<td align="right" class="lineCount Good">484</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 484, 'Tests that hit line # 484');"
    >
    <a title="Line 484, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-484" class="srcLine"><a class="nolink" title="Line 484, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(8));</a></span></td>
</tr>
        

<tr id="l485">
<td align="right" class="lineCount Good">485</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 485, 'Tests that hit line # 485');"
    >
    <a title="Line 485, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-485" class="srcLine"><a class="nolink" title="Line 485, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(4));</a></span></td>
</tr>
        

<tr id="l486">
<td align="right" class="lineCount NoHilight">486</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-486" class="srcLine"></span></td>
</tr>
        

<tr id="l487">
<td align="right" class="lineCount Good">487</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 487, 'Tests that hit line # 487');"
    >
    <a title="Line 487, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-487" class="srcLine"><a class="nolink" title="Line 487, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l488">
<td align="right" class="lineCount NoHilight">488</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-488" class="srcLine">    }</span></td>
</tr>
        

<tr id="l489">
<td align="right" class="lineCount NoHilight">489</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-489" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="490" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-490' onclick="toggleInlineStats(this, 'inlinestats-490');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-490" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-490'), 'inlinestats-490');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (7)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,14</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l490">
<td align="right" class="lineCount Good">490</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 490, 'Tests that hit &lt;span class=\'srcFragment\'&gt; testOr()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 490, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-490" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 490,502);" id="img-490" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-490" class="srcLine"><a class="nolink" title="Line 490, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-490'), 490,502);" id="e490" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l491">
<td align="right" class="lineCount NoHilight">491</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-491" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> testOr() {</span></td>
</tr>
        

<tr id="l492">
<td align="right" class="lineCount Good">492</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 492, 'Tests that hit line # 492');"
    >
    <a title="Line 492, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-492" class="srcLine"><a class="nolink" title="Line 492, Col 9: statement executed 1 time.">        expect(mock.oneArg(or(eq(7), eq(9)))).andReturn(<span class="string">"1"</span>).atLeastOnce();</a></span></td>
</tr>
        

<tr id="l493">
<td align="right" class="lineCount Good">493</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 493, 'Tests that hit line # 493');"
    >
    <a title="Line 493, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-493" class="srcLine"><a class="nolink" title="Line 493, Col 9: statement executed 1 time.">        expect(mock.oneArg(anyInt())).andStubReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l494">
<td align="right" class="lineCount NoHilight">494</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-494" class="srcLine"></span></td>
</tr>
        

<tr id="l495">
<td align="right" class="lineCount Good">495</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 495, 'Tests that hit line # 495');"
    >
    <a title="Line 495, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-495" class="srcLine"><a class="nolink" title="Line 495, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l496">
<td align="right" class="lineCount NoHilight">496</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-496" class="srcLine"></span></td>
</tr>
        

<tr id="l497">
<td align="right" class="lineCount Good">497</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 497, 'Tests that hit line # 497');"
    >
    <a title="Line 497, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-497" class="srcLine"><a class="nolink" title="Line 497, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(7));</a></span></td>
</tr>
        

<tr id="l498">
<td align="right" class="lineCount Good">498</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 498, 'Tests that hit line # 498');"
    >
    <a title="Line 498, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-498" class="srcLine"><a class="nolink" title="Line 498, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(9));</a></span></td>
</tr>
        

<tr id="l499">
<td align="right" class="lineCount Good">499</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 499, 'Tests that hit line # 499');"
    >
    <a title="Line 499, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-499" class="srcLine"><a class="nolink" title="Line 499, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(10));</a></span></td>
</tr>
        

<tr id="l500">
<td align="right" class="lineCount NoHilight">500</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-500" class="srcLine"></span></td>
</tr>
        

<tr id="l501">
<td align="right" class="lineCount Good">501</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 501, 'Tests that hit line # 501');"
    >
    <a title="Line 501, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-501" class="srcLine"><a class="nolink" title="Line 501, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l502">
<td align="right" class="lineCount NoHilight">502</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-502" class="srcLine">    }</span></td>
</tr>
        

<tr id="l503">
<td align="right" class="lineCount NoHilight">503</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-503" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="504" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-504' onclick="toggleInlineStats(this, 'inlinestats-504');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-504" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-504'), 'inlinestats-504');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (6)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,17</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l504">
<td align="right" class="lineCount Good">504</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 504, 'Tests that hit &lt;span class=\'srcFragment\'&gt; testNull()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 504, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-504" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 504,517);" id="img-504" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-504" class="srcLine"><a class="nolink" title="Line 504, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-504'), 504,517);" id="e504" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l505">
<td align="right" class="lineCount NoHilight">505</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-505" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> testNull() {</span></td>
</tr>
        

<tr id="l506">
<td align="right" class="lineCount Good">506</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 506, 'Tests that hit line # 506');"
    >
    <a title="Line 506, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-506" class="srcLine"><a class="nolink" title="Line 506, Col 9: statement executed 1 time.">        expect(mock.threeArgumentMethod(eq(1), isNull(), eq(<span class="string">""</span>)))</a></span></td>
</tr>
        

<tr id="l507">
<td align="right" class="lineCount NoHilight">507</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-507" class="srcLine">                .andReturn(<span class="string">"1"</span>).atLeastOnce();</span></td>
</tr>
        

<tr id="l508">
<td align="right" class="lineCount Good">508</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 508, 'Tests that hit line # 508');"
    >
    <a title="Line 508, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-508" class="srcLine"><a class="nolink" title="Line 508, Col 9: statement executed 1 time.">        expect(mock.threeArgumentMethod(eq(1), not(isNull()), eq(<span class="string">""</span>)))</a></span></td>
</tr>
        

<tr id="l509">
<td align="right" class="lineCount NoHilight">509</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-509" class="srcLine">                .andStubReturn(<span class="string">"2"</span>);</span></td>
</tr>
        

<tr id="l510">
<td align="right" class="lineCount NoHilight">510</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-510" class="srcLine"></span></td>
</tr>
        

<tr id="l511">
<td align="right" class="lineCount Good">511</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 511, 'Tests that hit line # 511');"
    >
    <a title="Line 511, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-511" class="srcLine"><a class="nolink" title="Line 511, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l512">
<td align="right" class="lineCount NoHilight">512</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-512" class="srcLine"></span></td>
</tr>
        

<tr id="l513">
<td align="right" class="lineCount Good">513</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 513, 'Tests that hit line # 513');"
    >
    <a title="Line 513, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-513" class="srcLine"><a class="nolink" title="Line 513, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.threeArgumentMethod(1, <span class="keyword">null</span>, <span class="string">""</span>));</a></span></td>
</tr>
        

<tr id="l514">
<td align="right" class="lineCount Good">514</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 514, 'Tests that hit line # 514');"
    >
    <a title="Line 514, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-514" class="srcLine"><a class="nolink" title="Line 514, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.threeArgumentMethod(1, <span class="keyword">new</span> Object(), <span class="string">""</span>));</a></span></td>
</tr>
        

<tr id="l515">
<td align="right" class="lineCount NoHilight">515</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-515" class="srcLine"></span></td>
</tr>
        

<tr id="l516">
<td align="right" class="lineCount Good">516</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 516, 'Tests that hit line # 516');"
    >
    <a title="Line 516, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-516" class="srcLine"><a class="nolink" title="Line 516, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l517">
<td align="right" class="lineCount NoHilight">517</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-517" class="srcLine">    }</span></td>
</tr>
        

<tr id="l518">
<td align="right" class="lineCount NoHilight">518</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-518" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="519" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-519' onclick="toggleInlineStats(this, 'inlinestats-519');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-519" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-519'), 'inlinestats-519');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (6)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,17</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l519">
<td align="right" class="lineCount Good">519</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 519, 'Tests that hit &lt;span class=\'srcFragment\'&gt; testNotNull()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 519, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-519" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 519,532);" id="img-519" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-519" class="srcLine"><a class="nolink" title="Line 519, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-519'), 519,532);" id="e519" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l520">
<td align="right" class="lineCount NoHilight">520</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-520" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> testNotNull() {</span></td>
</tr>
        

<tr id="l521">
<td align="right" class="lineCount Good">521</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 521, 'Tests that hit line # 521');"
    >
    <a title="Line 521, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-521" class="srcLine"><a class="nolink" title="Line 521, Col 9: statement executed 1 time.">        expect(mock.threeArgumentMethod(eq(1), notNull(), eq(<span class="string">""</span>))).andReturn(</a></span></td>
</tr>
        

<tr id="l522">
<td align="right" class="lineCount NoHilight">522</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-522" class="srcLine">                <span class="string">"1"</span>).atLeastOnce();</span></td>
</tr>
        

<tr id="l523">
<td align="right" class="lineCount Good">523</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 523, 'Tests that hit line # 523');"
    >
    <a title="Line 523, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-523" class="srcLine"><a class="nolink" title="Line 523, Col 9: statement executed 1 time.">        expect(mock.threeArgumentMethod(eq(1), not(notNull()), eq(<span class="string">""</span>)))</a></span></td>
</tr>
        

<tr id="l524">
<td align="right" class="lineCount NoHilight">524</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-524" class="srcLine">                .andStubReturn(<span class="string">"2"</span>);</span></td>
</tr>
        

<tr id="l525">
<td align="right" class="lineCount NoHilight">525</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-525" class="srcLine"></span></td>
</tr>
        

<tr id="l526">
<td align="right" class="lineCount Good">526</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 526, 'Tests that hit line # 526');"
    >
    <a title="Line 526, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-526" class="srcLine"><a class="nolink" title="Line 526, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l527">
<td align="right" class="lineCount NoHilight">527</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-527" class="srcLine"></span></td>
</tr>
        

<tr id="l528">
<td align="right" class="lineCount Good">528</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 528, 'Tests that hit line # 528');"
    >
    <a title="Line 528, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-528" class="srcLine"><a class="nolink" title="Line 528, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.threeArgumentMethod(1, <span class="keyword">new</span> Object(), <span class="string">""</span>));</a></span></td>
</tr>
        

<tr id="l529">
<td align="right" class="lineCount Good">529</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 529, 'Tests that hit line # 529');"
    >
    <a title="Line 529, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-529" class="srcLine"><a class="nolink" title="Line 529, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.threeArgumentMethod(1, <span class="keyword">null</span>, <span class="string">""</span>));</a></span></td>
</tr>
        

<tr id="l530">
<td align="right" class="lineCount NoHilight">530</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-530" class="srcLine"></span></td>
</tr>
        

<tr id="l531">
<td align="right" class="lineCount Good">531</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 531, 'Tests that hit line # 531');"
    >
    <a title="Line 531, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-531" class="srcLine"><a class="nolink" title="Line 531, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l532">
<td align="right" class="lineCount NoHilight">532</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-532" class="srcLine">    }</span></td>
</tr>
        

<tr id="l533">
<td align="right" class="lineCount NoHilight">533</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-533" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="534" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-534' onclick="toggleInlineStats(this, 'inlinestats-534');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-534" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-534'), 'inlinestats-534');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (6)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,17</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l534">
<td align="right" class="lineCount Good">534</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 534, 'Tests that hit &lt;span class=\'srcFragment\'&gt; testFind()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 534, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-534" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 534,545);" id="img-534" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-534" class="srcLine"><a class="nolink" title="Line 534, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-534'), 534,545);" id="e534" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l535">
<td align="right" class="lineCount NoHilight">535</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-535" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> testFind() {</span></td>
</tr>
        

<tr id="l536">
<td align="right" class="lineCount Good">536</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 536, 'Tests that hit line # 536');"
    >
    <a title="Line 536, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-536" class="srcLine"><a class="nolink" title="Line 536, Col 9: statement executed 1 time.">        expect(mock.oneArg(find(<span class="string">"[a-z]+\\d"</span>))).andReturn(<span class="string">"1"</span>).atLeastOnce();</a></span></td>
</tr>
        

<tr id="l537">
<td align="right" class="lineCount Good">537</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 537, 'Tests that hit line # 537');"
    >
    <a title="Line 537, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-537" class="srcLine"><a class="nolink" title="Line 537, Col 9: statement executed 1 time.">        expect(mock.oneArg(find(<span class="string">"\\d\\d"</span>))).andStubReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l538">
<td align="right" class="lineCount NoHilight">538</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-538" class="srcLine"></span></td>
</tr>
        

<tr id="l539">
<td align="right" class="lineCount Good">539</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 539, 'Tests that hit line # 539');"
    >
    <a title="Line 539, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-539" class="srcLine"><a class="nolink" title="Line 539, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l540">
<td align="right" class="lineCount NoHilight">540</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-540" class="srcLine"></span></td>
</tr>
        

<tr id="l541">
<td align="right" class="lineCount Good">541</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 541, 'Tests that hit line # 541');"
    >
    <a title="Line 541, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-541" class="srcLine"><a class="nolink" title="Line 541, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(<span class="string">"1ab12"</span>));</a></span></td>
</tr>
        

<tr id="l542">
<td align="right" class="lineCount Good">542</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 542, 'Tests that hit line # 542');"
    >
    <a title="Line 542, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-542" class="srcLine"><a class="nolink" title="Line 542, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(<span class="string">"312xx"</span>));</a></span></td>
</tr>
        

<tr id="l543">
<td align="right" class="lineCount NoHilight">543</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-543" class="srcLine"></span></td>
</tr>
        

<tr id="l544">
<td align="right" class="lineCount Good">544</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 544, 'Tests that hit line # 544');"
    >
    <a title="Line 544, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-544" class="srcLine"><a class="nolink" title="Line 544, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l545">
<td align="right" class="lineCount NoHilight">545</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-545" class="srcLine">    }</span></td>
</tr>
        

<tr id="l546">
<td align="right" class="lineCount NoHilight">546</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-546" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="547" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-547' onclick="toggleInlineStats(this, 'inlinestats-547');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-547" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-547'), 'inlinestats-547');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (6)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,17</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l547">
<td align="right" class="lineCount Good">547</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 547, 'Tests that hit &lt;span class=\'srcFragment\'&gt; testMatches()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 547, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-547" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 547,559);" id="img-547" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-547" class="srcLine"><a class="nolink" title="Line 547, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-547'), 547,559);" id="e547" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l548">
<td align="right" class="lineCount NoHilight">548</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-548" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> testMatches() {</span></td>
</tr>
        

<tr id="l549">
<td align="right" class="lineCount Good">549</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 549, 'Tests that hit line # 549');"
    >
    <a title="Line 549, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-549" class="srcLine"><a class="nolink" title="Line 549, Col 9: statement executed 1 time.">        expect(mock.oneArg(matches(<span class="string">"[a-z]+\\d\\d"</span>))).andReturn(<span class="string">"1"</span>)</a></span></td>
</tr>
        

<tr id="l550">
<td align="right" class="lineCount NoHilight">550</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-550" class="srcLine">                .atLeastOnce();</span></td>
</tr>
        

<tr id="l551">
<td align="right" class="lineCount Good">551</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 551, 'Tests that hit line # 551');"
    >
    <a title="Line 551, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-551" class="srcLine"><a class="nolink" title="Line 551, Col 9: statement executed 1 time.">        expect(mock.oneArg(matches(<span class="string">"\\d\\d\\d"</span>))).andStubReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l552">
<td align="right" class="lineCount NoHilight">552</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-552" class="srcLine"></span></td>
</tr>
        

<tr id="l553">
<td align="right" class="lineCount Good">553</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 553, 'Tests that hit line # 553');"
    >
    <a title="Line 553, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-553" class="srcLine"><a class="nolink" title="Line 553, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l554">
<td align="right" class="lineCount NoHilight">554</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-554" class="srcLine"></span></td>
</tr>
        

<tr id="l555">
<td align="right" class="lineCount Good">555</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 555, 'Tests that hit line # 555');"
    >
    <a title="Line 555, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-555" class="srcLine"><a class="nolink" title="Line 555, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(<span class="string">"a12"</span>));</a></span></td>
</tr>
        

<tr id="l556">
<td align="right" class="lineCount Good">556</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 556, 'Tests that hit line # 556');"
    >
    <a title="Line 556, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-556" class="srcLine"><a class="nolink" title="Line 556, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(<span class="string">"131"</span>));</a></span></td>
</tr>
        

<tr id="l557">
<td align="right" class="lineCount NoHilight">557</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-557" class="srcLine"></span></td>
</tr>
        

<tr id="l558">
<td align="right" class="lineCount Good">558</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 558, 'Tests that hit line # 558');"
    >
    <a title="Line 558, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-558" class="srcLine"><a class="nolink" title="Line 558, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l559">
<td align="right" class="lineCount NoHilight">559</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-559" class="srcLine">    }</span></td>
</tr>
        

<tr id="l560">
<td align="right" class="lineCount NoHilight">560</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-560" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="561" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-561' onclick="toggleInlineStats(this, 'inlinestats-561');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-561" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-561'), 'inlinestats-561');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (6)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,17</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l561">
<td align="right" class="lineCount Good">561</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 561, 'Tests that hit &lt;span class=\'srcFragment\'&gt; testContains()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 561, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-561" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 561,572);" id="img-561" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-561" class="srcLine"><a class="nolink" title="Line 561, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-561'), 561,572);" id="e561" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l562">
<td align="right" class="lineCount NoHilight">562</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-562" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> testContains() {</span></td>
</tr>
        

<tr id="l563">
<td align="right" class="lineCount Good">563</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 563, 'Tests that hit line # 563');"
    >
    <a title="Line 563, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-563" class="srcLine"><a class="nolink" title="Line 563, Col 9: statement executed 1 time.">        expect(mock.oneArg(contains(<span class="string">"ab"</span>))).andReturn(<span class="string">"1"</span>).atLeastOnce();</a></span></td>
</tr>
        

<tr id="l564">
<td align="right" class="lineCount Good">564</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 564, 'Tests that hit line # 564');"
    >
    <a title="Line 564, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-564" class="srcLine"><a class="nolink" title="Line 564, Col 9: statement executed 1 time.">        expect(mock.oneArg(contains(<span class="string">"bc"</span>))).andStubReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l565">
<td align="right" class="lineCount NoHilight">565</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-565" class="srcLine"></span></td>
</tr>
        

<tr id="l566">
<td align="right" class="lineCount Good">566</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 566, 'Tests that hit line # 566');"
    >
    <a title="Line 566, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-566" class="srcLine"><a class="nolink" title="Line 566, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l567">
<td align="right" class="lineCount NoHilight">567</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-567" class="srcLine"></span></td>
</tr>
        

<tr id="l568">
<td align="right" class="lineCount Good">568</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 568, 'Tests that hit line # 568');"
    >
    <a title="Line 568, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-568" class="srcLine"><a class="nolink" title="Line 568, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(<span class="string">"xabcx"</span>));</a></span></td>
</tr>
        

<tr id="l569">
<td align="right" class="lineCount Good">569</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 569, 'Tests that hit line # 569');"
    >
    <a title="Line 569, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-569" class="srcLine"><a class="nolink" title="Line 569, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(<span class="string">"xdbcx"</span>));</a></span></td>
</tr>
        

<tr id="l570">
<td align="right" class="lineCount NoHilight">570</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-570" class="srcLine"></span></td>
</tr>
        

<tr id="l571">
<td align="right" class="lineCount Good">571</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 571, 'Tests that hit line # 571');"
    >
    <a title="Line 571, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-571" class="srcLine"><a class="nolink" title="Line 571, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l572">
<td align="right" class="lineCount NoHilight">572</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-572" class="srcLine">    }</span></td>
</tr>
        

<tr id="l573">
<td align="right" class="lineCount NoHilight">573</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-573" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="574" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-574' onclick="toggleInlineStats(this, 'inlinestats-574');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-574" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-574'), 'inlinestats-574');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (6)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,17</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l574">
<td align="right" class="lineCount Good">574</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 574, 'Tests that hit &lt;span class=\'srcFragment\'&gt; testStartsWith()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 574, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-574" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 574,585);" id="img-574" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-574" class="srcLine"><a class="nolink" title="Line 574, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-574'), 574,585);" id="e574" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l575">
<td align="right" class="lineCount NoHilight">575</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-575" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> testStartsWith() {</span></td>
</tr>
        

<tr id="l576">
<td align="right" class="lineCount Good">576</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 576, 'Tests that hit line # 576');"
    >
    <a title="Line 576, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-576" class="srcLine"><a class="nolink" title="Line 576, Col 9: statement executed 1 time.">        expect(mock.oneArg(startsWith(<span class="string">"ab"</span>))).andReturn(<span class="string">"1"</span>).atLeastOnce();</a></span></td>
</tr>
        

<tr id="l577">
<td align="right" class="lineCount Good">577</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 577, 'Tests that hit line # 577');"
    >
    <a title="Line 577, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-577" class="srcLine"><a class="nolink" title="Line 577, Col 9: statement executed 1 time.">        expect(mock.oneArg(startsWith(<span class="string">"bc"</span>))).andStubReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l578">
<td align="right" class="lineCount NoHilight">578</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-578" class="srcLine"></span></td>
</tr>
        

<tr id="l579">
<td align="right" class="lineCount Good">579</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 579, 'Tests that hit line # 579');"
    >
    <a title="Line 579, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-579" class="srcLine"><a class="nolink" title="Line 579, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l580">
<td align="right" class="lineCount NoHilight">580</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-580" class="srcLine"></span></td>
</tr>
        

<tr id="l581">
<td align="right" class="lineCount Good">581</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 581, 'Tests that hit line # 581');"
    >
    <a title="Line 581, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-581" class="srcLine"><a class="nolink" title="Line 581, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(<span class="string">"abcx"</span>));</a></span></td>
</tr>
        

<tr id="l582">
<td align="right" class="lineCount Good">582</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 582, 'Tests that hit line # 582');"
    >
    <a title="Line 582, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-582" class="srcLine"><a class="nolink" title="Line 582, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(<span class="string">"bcxe"</span>));</a></span></td>
</tr>
        

<tr id="l583">
<td align="right" class="lineCount NoHilight">583</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-583" class="srcLine"></span></td>
</tr>
        

<tr id="l584">
<td align="right" class="lineCount Good">584</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 584, 'Tests that hit line # 584');"
    >
    <a title="Line 584, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-584" class="srcLine"><a class="nolink" title="Line 584, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l585">
<td align="right" class="lineCount NoHilight">585</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-585" class="srcLine">    }</span></td>
</tr>
        

<tr id="l586">
<td align="right" class="lineCount NoHilight">586</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-586" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="587" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-587' onclick="toggleInlineStats(this, 'inlinestats-587');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-587" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-587'), 'inlinestats-587');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (6)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,17</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l587">
<td align="right" class="lineCount Good">587</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 587, 'Tests that hit &lt;span class=\'srcFragment\'&gt; testEndsWith()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 587, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-587" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 587,598);" id="img-587" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-587" class="srcLine"><a class="nolink" title="Line 587, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-587'), 587,598);" id="e587" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l588">
<td align="right" class="lineCount NoHilight">588</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-588" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> testEndsWith() {</span></td>
</tr>
        

<tr id="l589">
<td align="right" class="lineCount Good">589</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 589, 'Tests that hit line # 589');"
    >
    <a title="Line 589, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-589" class="srcLine"><a class="nolink" title="Line 589, Col 9: statement executed 1 time.">        expect(mock.oneArg(endsWith(<span class="string">"ab"</span>))).andReturn(<span class="string">"1"</span>).atLeastOnce();</a></span></td>
</tr>
        

<tr id="l590">
<td align="right" class="lineCount Good">590</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 590, 'Tests that hit line # 590');"
    >
    <a title="Line 590, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-590" class="srcLine"><a class="nolink" title="Line 590, Col 9: statement executed 1 time.">        expect(mock.oneArg(endsWith(<span class="string">"bc"</span>))).andStubReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l591">
<td align="right" class="lineCount NoHilight">591</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-591" class="srcLine"></span></td>
</tr>
        

<tr id="l592">
<td align="right" class="lineCount Good">592</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 592, 'Tests that hit line # 592');"
    >
    <a title="Line 592, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-592" class="srcLine"><a class="nolink" title="Line 592, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l593">
<td align="right" class="lineCount NoHilight">593</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-593" class="srcLine"></span></td>
</tr>
        

<tr id="l594">
<td align="right" class="lineCount Good">594</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 594, 'Tests that hit line # 594');"
    >
    <a title="Line 594, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-594" class="srcLine"><a class="nolink" title="Line 594, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(<span class="string">"xab"</span>));</a></span></td>
</tr>
        

<tr id="l595">
<td align="right" class="lineCount Good">595</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 595, 'Tests that hit line # 595');"
    >
    <a title="Line 595, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-595" class="srcLine"><a class="nolink" title="Line 595, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(<span class="string">"xbc"</span>));</a></span></td>
</tr>
        

<tr id="l596">
<td align="right" class="lineCount NoHilight">596</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-596" class="srcLine"></span></td>
</tr>
        

<tr id="l597">
<td align="right" class="lineCount Good">597</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 597, 'Tests that hit line # 597');"
    >
    <a title="Line 597, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-597" class="srcLine"><a class="nolink" title="Line 597, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l598">
<td align="right" class="lineCount NoHilight">598</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-598" class="srcLine">    }</span></td>
</tr>
        

<tr id="l599">
<td align="right" class="lineCount NoHilight">599</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-599" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="600" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-600' onclick="toggleInlineStats(this, 'inlinestats-600');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-600" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-600'), 'inlinestats-600');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (15)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,07</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l600">
<td align="right" class="lineCount Good">600</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 600, 'Tests that hit &lt;span class=\'srcFragment\'&gt; equalsWithDelta()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 600, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-600" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 600,621);" id="img-600" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-600" class="srcLine"><a class="nolink" title="Line 600, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-600'), 600,621);" id="e600" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l601">
<td align="right" class="lineCount NoHilight">601</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-601" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> equalsWithDelta() {</span></td>
</tr>
        

<tr id="l602">
<td align="right" class="lineCount Good">602</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 602, 'Tests that hit line # 602');"
    >
    <a title="Line 602, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-602" class="srcLine"><a class="nolink" title="Line 602, Col 9: statement executed 1 time.">        expect(mock.oneArg(eq(1.0D, 0.1D))).andReturn(<span class="string">"1"</span>).atLeastOnce();</a></span></td>
</tr>
        

<tr id="l603">
<td align="right" class="lineCount Good">603</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 603, 'Tests that hit line # 603');"
    >
    <a title="Line 603, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-603" class="srcLine"><a class="nolink" title="Line 603, Col 9: statement executed 1 time.">        expect(mock.oneArg(eq(2.0D, 0.1D))).andStubReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l604">
<td align="right" class="lineCount Good">604</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 604, 'Tests that hit line # 604');"
    >
    <a title="Line 604, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-604" class="srcLine"><a class="nolink" title="Line 604, Col 9: statement executed 1 time.">        expect(mock.oneArg(eq(1.0F, 0.1F))).andReturn(<span class="string">"3"</span>).atLeastOnce();</a></span></td>
</tr>
        

<tr id="l605">
<td align="right" class="lineCount Good">605</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 605, 'Tests that hit line # 605');"
    >
    <a title="Line 605, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-605" class="srcLine"><a class="nolink" title="Line 605, Col 9: statement executed 1 time.">        expect(mock.oneArg(eq(2.0F, 0.1F))).andStubReturn(<span class="string">"4"</span>);</a></span></td>
</tr>
        

<tr id="l606">
<td align="right" class="lineCount Good">606</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 606, 'Tests that hit line # 606');"
    >
    <a title="Line 606, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-606" class="srcLine"><a class="nolink" title="Line 606, Col 9: statement executed 1 time.">        expect(mock.oneArg(eq(2.0F, 0.1F))).andStubReturn(<span class="string">"4"</span>);</a></span></td>
</tr>
        

<tr id="l607">
<td align="right" class="lineCount NoHilight">607</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-607" class="srcLine"></span></td>
</tr>
        

<tr id="l608">
<td align="right" class="lineCount Good">608</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 608, 'Tests that hit line # 608');"
    >
    <a title="Line 608, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-608" class="srcLine"><a class="nolink" title="Line 608, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l609">
<td align="right" class="lineCount NoHilight">609</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-609" class="srcLine"></span></td>
</tr>
        

<tr id="l610">
<td align="right" class="lineCount Good">610</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 610, 'Tests that hit line # 610');"
    >
    <a title="Line 610, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-610" class="srcLine"><a class="nolink" title="Line 610, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(1.0));</a></span></td>
</tr>
        

<tr id="l611">
<td align="right" class="lineCount Good">611</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 611, 'Tests that hit line # 611');"
    >
    <a title="Line 611, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-611" class="srcLine"><a class="nolink" title="Line 611, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(0.91));</a></span></td>
</tr>
        

<tr id="l612">
<td align="right" class="lineCount Good">612</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 612, 'Tests that hit line # 612');"
    >
    <a title="Line 612, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-612" class="srcLine"><a class="nolink" title="Line 612, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(1.09));</a></span></td>
</tr>
        

<tr id="l613">
<td align="right" class="lineCount Good">613</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 613, 'Tests that hit line # 613');"
    >
    <a title="Line 613, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-613" class="srcLine"><a class="nolink" title="Line 613, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(2.0));</a></span></td>
</tr>
        

<tr id="l614">
<td align="right" class="lineCount NoHilight">614</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-614" class="srcLine"></span></td>
</tr>
        

<tr id="l615">
<td align="right" class="lineCount Good">615</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 615, 'Tests that hit line # 615');"
    >
    <a title="Line 615, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-615" class="srcLine"><a class="nolink" title="Line 615, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"3"</span>, mock.oneArg(1.0F));</a></span></td>
</tr>
        

<tr id="l616">
<td align="right" class="lineCount Good">616</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 616, 'Tests that hit line # 616');"
    >
    <a title="Line 616, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-616" class="srcLine"><a class="nolink" title="Line 616, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"3"</span>, mock.oneArg(0.91F));</a></span></td>
</tr>
        

<tr id="l617">
<td align="right" class="lineCount Good">617</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 617, 'Tests that hit line # 617');"
    >
    <a title="Line 617, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-617" class="srcLine"><a class="nolink" title="Line 617, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"3"</span>, mock.oneArg(1.09F));</a></span></td>
</tr>
        

<tr id="l618">
<td align="right" class="lineCount Good">618</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 618, 'Tests that hit line # 618');"
    >
    <a title="Line 618, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-618" class="srcLine"><a class="nolink" title="Line 618, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"4"</span>, mock.oneArg(2.0F));</a></span></td>
</tr>
        

<tr id="l619">
<td align="right" class="lineCount NoHilight">619</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-619" class="srcLine"></span></td>
</tr>
        

<tr id="l620">
<td align="right" class="lineCount Good">620</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 620, 'Tests that hit line # 620');"
    >
    <a title="Line 620, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-620" class="srcLine"><a class="nolink" title="Line 620, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l621">
<td align="right" class="lineCount NoHilight">621</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-621" class="srcLine">    }</span></td>
</tr>
        

<tr id="l622">
<td align="right" class="lineCount NoHilight">622</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-622" class="srcLine"></span></td>
</tr>
           <tr class="inlineStatsRow" align="right" valign="middle" >
        <td colspan="1"  class="coverageCount">
            <a name="623" class="nolink">&nbsp;</a>
        </td>
        
       <td class="coverageCount imgbg more" id='inlineStatsToggle-623' onclick="toggleInlineStats(this, 'inlinestats-623');">
       </td>
       <td align="center" valign="middle">
           <table id="inlinestats-623" style="display:none;" class="inlineStats" width="100%" cellspacing="1px" cellpadding="1px">
           <tr onclick="toggleInlineStats(document.getElementById('inlineStatsToggle-623'), 'inlinestats-623');return true;">
           <td><div>
    <div style="width: 40px; font-size:0px;"></div>
    <div title="0% Not Covered"  style="min-width: 40px;"  class="barNegative barNegative">
       <div title="100% Covered" class="barPositive barPositive" style="width: 100%"></div>
    </div>
</div></td><td>100%</td>
           <td class="inlineStat">Uncovered Elements: 0 (10)</td>
           <td class="inlineStat">Complexity: 1</td>
           <td class="inlineStat">Complexity Density: 0,1</td>
                        <td class="inlineStat">      <span class="sortValue">1</span>
    <span class="testResultSuccess">PASS</span>
  </td>
                       </tr>
           </table>
       </td>
    </tr>
  

<tr id="l623">
<td align="right" class="lineCount Good">623</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 623, 'Tests that hit &lt;span class=\'srcFragment\'&gt; testSame()&amp;nbsp;:&amp;nbsp;void &lt;/span&gt;');"
       >
    <a title="Line 623, Col 5: method entered 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  methodStart  srcCell" id="id-623" >
    <img title="Method Statistics" onclick="toggleSrcRowVis(this, 623,640);" id="img-623" src="../../../img/collapse.gif"  alt="toggle" class="icon"/><span id="src-623" class="srcLine"><a class="nolink" title="Line 623, Col 5: method entered 1 time.">    @Test</a><span class="foldControl" onclick="toggleSrcRowVis(document.getElementById('img-623'), 623,640);" id="e623" style="display:none;border:none;">...</span></span></td>
</tr>
        

<tr id="l624">
<td align="right" class="lineCount NoHilight">624</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-624" class="srcLine">    <span class="keyword">public</span> <span class="keyword">void</span> testSame() {</span></td>
</tr>
        

<tr id="l625">
<td align="right" class="lineCount Good">625</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 625, 'Tests that hit line # 625');"
    >
    <a title="Line 625, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-625" class="srcLine"><a class="nolink" title="Line 625, Col 9: statement executed 1 time.">        Object one = <span class="keyword">new</span> String(<span class="string">"1243"</span>);</a></span></td>
</tr>
        

<tr id="l626">
<td align="right" class="lineCount Good">626</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 626, 'Tests that hit line # 626');"
    >
    <a title="Line 626, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-626" class="srcLine"><a class="nolink" title="Line 626, Col 9: statement executed 1 time.">        Object two = <span class="keyword">new</span> String(<span class="string">"1243"</span>);</a></span></td>
</tr>
        

<tr id="l627">
<td align="right" class="lineCount NoHilight">627</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-627" class="srcLine"></span></td>
</tr>
        

<tr id="l628">
<td align="right" class="lineCount Good">628</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 628, 'Tests that hit line # 628');"
    >
    <a title="Line 628, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-628" class="srcLine"><a class="nolink" title="Line 628, Col 9: statement executed 1 time.">        assertNotSame(one, two);</a></span></td>
</tr>
        

<tr id="l629">
<td align="right" class="lineCount Good">629</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 629, 'Tests that hit line # 629');"
    >
    <a title="Line 629, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-629" class="srcLine"><a class="nolink" title="Line 629, Col 9: statement executed 1 time.">        assertEquals(one, two);</a></span></td>
</tr>
        

<tr id="l630">
<td align="right" class="lineCount NoHilight">630</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-630" class="srcLine"></span></td>
</tr>
        

<tr id="l631">
<td align="right" class="lineCount Good">631</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 631, 'Tests that hit line # 631');"
    >
    <a title="Line 631, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-631" class="srcLine"><a class="nolink" title="Line 631, Col 9: statement executed 1 time.">        expect(mock.oneArg(same(one))).andReturn(<span class="string">"1"</span>).atLeastOnce();</a></span></td>
</tr>
        

<tr id="l632">
<td align="right" class="lineCount Good">632</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 632, 'Tests that hit line # 632');"
    >
    <a title="Line 632, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-632" class="srcLine"><a class="nolink" title="Line 632, Col 9: statement executed 1 time.">        expect(mock.oneArg(same(two))).andStubReturn(<span class="string">"2"</span>);</a></span></td>
</tr>
        

<tr id="l633">
<td align="right" class="lineCount NoHilight">633</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-633" class="srcLine"></span></td>
</tr>
        

<tr id="l634">
<td align="right" class="lineCount Good">634</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 634, 'Tests that hit line # 634');"
    >
    <a title="Line 634, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-634" class="srcLine"><a class="nolink" title="Line 634, Col 9: statement executed 1 time.">        replay(mock);</a></span></td>
</tr>
        

<tr id="l635">
<td align="right" class="lineCount NoHilight">635</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-635" class="srcLine"></span></td>
</tr>
        

<tr id="l636">
<td align="right" class="lineCount Good">636</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 636, 'Tests that hit line # 636');"
    >
    <a title="Line 636, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-636" class="srcLine"><a class="nolink" title="Line 636, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"1"</span>, mock.oneArg(one));</a></span></td>
</tr>
        

<tr id="l637">
<td align="right" class="lineCount Good">637</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 637, 'Tests that hit line # 637');"
    >
    <a title="Line 637, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-637" class="srcLine"><a class="nolink" title="Line 637, Col 9: statement executed 1 time.">        assertEquals(<span class="string">"2"</span>, mock.oneArg(two));</a></span></td>
</tr>
        

<tr id="l638">
<td align="right" class="lineCount NoHilight">638</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-638" class="srcLine"></span></td>
</tr>
        

<tr id="l639">
<td align="right" class="lineCount Good">639</td>
<td align="right" class="coverageCount Good hitByTest"
           onclick="return showTestsForLine(this, 639, 'Tests that hit line # 639');"
    >
    <a title="Line 639, Col 9: statement executed 1 time." class="nolink">&nbsp;1</a>

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-639" class="srcLine"><a class="nolink" title="Line 639, Col 9: statement executed 1 time.">        verify(mock);</a></span></td>
</tr>
        

<tr id="l640">
<td align="right" class="lineCount NoHilight">640</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-640" class="srcLine">    }</span></td>
</tr>
        

<tr id="l641">
<td align="right" class="lineCount NoHilight">641</td>
<td align="right" class="coverageCount NoHilight "
         >
    &nbsp;&nbsp;

</td>
<td class="  srcCell"  >
    <span class="spacer"></span><span id="src-641" class="srcLine">}</span></td>
</tr>
</tbody></table>
<table width="100%"><tr><td class="hbreak" colspan="6">&nbsp;</td></tr>
<tr><td class="footer" colspan="6">
<table>
<tr>
 <td><a target="_new" href="http://www.atlassian.com/software/clover"><img alt="Clover" src="../../../img/logo.gif" style="border:none"/></a></td><td style="white-space:nowrap;"><i>Report generated by </i><a target="_new" href="http://www.atlassian.com/software/clover">Clover Code Coverage v2.1.0</a><i><br/>mer. juil. 2 2008 02:17:39 CEST</i>.</td>
<td>&nbsp;</td><td style="BORDER-LEFT: #9c9c9c 1px solid;">&nbsp;</td><td>Clover: Open Source License registered to EasyMock . </td>
</tr>
</table>
</td>
</tr></table>
<script type="text/javascript">
    var ol_bgclass = "overBG";
    var ol_fgclass = "overFG";
    var ol_captionfontclass= "overCaption";
    var ol_closefontclass = "closeFont";
    var ol_closeclick = 1;
    var ol_close = 'X';
    var ol_wrap = 1;
    var rootRelPath = '../../../';
    var testsPerFile = -1;
</script>
<script src="UsageConstraintsTest.js" type="text/javascript"></script>
<script src="../../../help.js" type="text/javascript"></script>
<script src="../../../clover.js" type="text/javascript"></script>
<script src="../../../sorttable.js" type="text/javascript"></script>
<script src="../../../overlib.js" type="text/javascript"><!-- overLIB (c) Erik Bosrup --></script>
<script src="../../../overlib_shadow.js" type="text/javascript" ></script>
<script src="../../../utils.js" type="text/javascript"></script>
</body>

</html>
