var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = { "classes" : [
    {"id" : 120, "sl" : 14, "el" : 199, "name" : "UsageExpectAndReturnTest",
    "methods" : [
              {"sl" : 19, "el" : 23, "sc" : 5},  {"sl" : 25, "el" : 31, "sc" : 5},  {"sl" : 33, "el" : 39, "sc" : 5},  {"sl" : 41, "el" : 47, "sc" : 5},  {"sl" : 49, "el" : 55, "sc" : 5},  {"sl" : 57, "el" : 63, "sc" : 5},  {"sl" : 65, "el" : 72, "sc" : 5},  {"sl" : 74, "el" : 81, "sc" : 5},  {"sl" : 83, "el" : 90, "sc" : 5},  {"sl" : 92, "el" : 99, "sc" : 5},  {"sl" : 101, "el" : 108, "sc" : 5},  {"sl" : 110, "el" : 117, "sc" : 5},  {"sl" : 119, "el" : 126, "sc" : 5},  {"sl" : 128, "el" : 135, "sc" : 5},  {"sl" : 137, "el" : 144, "sc" : 5},  {"sl" : 146, "el" : 153, "sc" : 5},  {"sl" : 155, "el" : 162, "sc" : 5},  {"sl" : 164, "el" : 171, "sc" : 5},  {"sl" : 173, "el" : 180, "sc" : 5},  {"sl" : 182, "el" : 189, "sc" : 5},  {"sl" : 191, "el" : 198, "sc" : 5}  ]}
    
 ]
};

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {
		"test_114" : {
					  "name" : "longType",
					  "pass" : true ,
					  "methods" : [{"sl": 33 },],
					  "statements" : [{"sl": 35 },{"sl": 36 },{"sl": 37 },{"sl": 38 },]
					  },
		"test_123" : {
					  "name" : "booleanAndRange",
					  "pass" : true ,
					  "methods" : [{"sl": 65 },],
					  "statements" : [{"sl": 67 },{"sl": 69 },{"sl": 70 },{"sl": 71 },]
					  },
		"test_131" : {
					  "name" : "longAndRange",
					  "pass" : true ,
					  "methods" : [{"sl": 74 },],
					  "statements" : [{"sl": 76 },{"sl": 78 },{"sl": 79 },{"sl": 80 },]
					  },
		"test_163" : {
					  "name" : "objectAndCount",
					  "pass" : true ,
					  "methods" : [{"sl": 146 },],
					  "statements" : [{"sl": 148 },{"sl": 149 },{"sl": 150 },{"sl": 151 },{"sl": 152 },]
					  },
		"test_109" : {
					  "name" : "floatAndCount",
					  "pass" : true ,
					  "methods" : [{"sl": 128 },],
					  "statements" : [{"sl": 130 },{"sl": 131 },{"sl": 132 },{"sl": 133 },{"sl": 134 },]
					  },
		"test_182" : {
					  "name" : "doubleAndMinMax",
					  "pass" : true ,
					  "methods" : [{"sl": 182 },],
					  "statements" : [{"sl": 184 },{"sl": 185 },{"sl": 186 },{"sl": 187 },{"sl": 188 },]
					  },
		"test_92" : {
					  "name" : "booleanAndCount",
					  "pass" : true ,
					  "methods" : [{"sl": 110 },],
					  "statements" : [{"sl": 112 },{"sl": 113 },{"sl": 114 },{"sl": 115 },{"sl": 116 },]
					  },
		"test_101" : {
					  "name" : "longAndCount",
					  "pass" : true ,
					  "methods" : [{"sl": 119 },],
					  "statements" : [{"sl": 121 },{"sl": 122 },{"sl": 123 },{"sl": 124 },{"sl": 125 },]
					  },
		"test_178" : {
					  "name" : "floatAndMinMax",
					  "pass" : true ,
					  "methods" : [{"sl": 173 },],
					  "statements" : [{"sl": 175 },{"sl": 176 },{"sl": 177 },{"sl": 178 },{"sl": 179 },]
					  },
		"test_121" : {
					  "name" : "doubleType",
					  "pass" : true ,
					  "methods" : [{"sl": 49 },],
					  "statements" : [{"sl": 51 },{"sl": 52 },{"sl": 53 },{"sl": 54 },]
					  },
		"test_110" : {
					  "name" : "floatType",
					  "pass" : true ,
					  "methods" : [{"sl": 41 },],
					  "statements" : [{"sl": 43 },{"sl": 44 },{"sl": 45 },{"sl": 46 },]
					  },
		"test_46" : {
					  "name" : "booleanType",
					  "pass" : true ,
					  "methods" : [{"sl": 25 },],
					  "statements" : [{"sl": 27 },{"sl": 28 },{"sl": 29 },{"sl": 30 },]
					  },
		"test_129" : {
					  "name" : "floatAndRange",
					  "pass" : true ,
					  "methods" : [{"sl": 83 },],
					  "statements" : [{"sl": 85 },{"sl": 87 },{"sl": 88 },{"sl": 89 },]
					  },
		"test_117" : {
					  "name" : "object",
					  "pass" : true ,
					  "methods" : [{"sl": 57 },],
					  "statements" : [{"sl": 59 },{"sl": 60 },{"sl": 61 },{"sl": 62 },]
					  },
		"test_173" : {
					  "name" : "longAndMinMax",
					  "pass" : true ,
					  "methods" : [{"sl": 164 },],
					  "statements" : [{"sl": 166 },{"sl": 167 },{"sl": 168 },{"sl": 169 },{"sl": 170 },]
					  },
		"test_104" : {
					  "name" : "doubleAndCount",
					  "pass" : true ,
					  "methods" : [{"sl": 137 },],
					  "statements" : [{"sl": 139 },{"sl": 140 },{"sl": 141 },{"sl": 142 },{"sl": 143 },]
					  },
		"test_134" : {
					  "name" : "objectAndMinMax",
					  "pass" : true ,
					  "methods" : [{"sl": 191 },],
					  "statements" : [{"sl": 193 },{"sl": 194 },{"sl": 195 },{"sl": 196 },{"sl": 197 },]
					  },
		"test_168" : {
					  "name" : "booleanAndMinMax",
					  "pass" : true ,
					  "methods" : [{"sl": 155 },],
					  "statements" : [{"sl": 157 },{"sl": 158 },{"sl": 159 },{"sl": 160 },{"sl": 161 },]
					  },
		"test_96" : {
					  "name" : "objectAndRange",
					  "pass" : true ,
					  "methods" : [{"sl": 101 },],
					  "statements" : [{"sl": 103 },{"sl": 105 },{"sl": 106 },{"sl": 107 },]
					  },
		"test_87" : {
					  "name" : "doubleAndRange",
					  "pass" : true ,
					  "methods" : [{"sl": 92 },],
					  "statements" : [{"sl": 94 },{"sl": 96 },{"sl": 97 },{"sl": 98 },]
					  }
 };

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [  [],   [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [ 46   ] ,
  [  ] ,
  [ 46   ] ,
  [ 46   ] ,
  [ 46   ] ,
  [ 46   ] ,
  [  ] ,
  [  ] ,
  [ 114   ] ,
  [  ] ,
  [ 114   ] ,
  [ 114   ] ,
  [ 114   ] ,
  [ 114   ] ,
  [  ] ,
  [  ] ,
  [ 110   ] ,
  [  ] ,
  [ 110   ] ,
  [ 110   ] ,
  [ 110   ] ,
  [ 110   ] ,
  [  ] ,
  [  ] ,
  [ 121   ] ,
  [  ] ,
  [ 121   ] ,
  [ 121   ] ,
  [ 121   ] ,
  [ 121   ] ,
  [  ] ,
  [  ] ,
  [ 117   ] ,
  [  ] ,
  [ 117   ] ,
  [ 117   ] ,
  [ 117   ] ,
  [ 117   ] ,
  [  ] ,
  [  ] ,
  [ 123   ] ,
  [  ] ,
  [ 123   ] ,
  [  ] ,
  [ 123   ] ,
  [ 123   ] ,
  [ 123   ] ,
  [  ] ,
  [  ] ,
  [ 131   ] ,
  [  ] ,
  [ 131   ] ,
  [  ] ,
  [ 131   ] ,
  [ 131   ] ,
  [ 131   ] ,
  [  ] ,
  [  ] ,
  [ 129   ] ,
  [  ] ,
  [ 129   ] ,
  [  ] ,
  [ 129   ] ,
  [ 129   ] ,
  [ 129   ] ,
  [  ] ,
  [  ] ,
  [ 87   ] ,
  [  ] ,
  [ 87   ] ,
  [  ] ,
  [ 87   ] ,
  [ 87   ] ,
  [ 87   ] ,
  [  ] ,
  [  ] ,
  [ 96   ] ,
  [  ] ,
  [ 96   ] ,
  [  ] ,
  [ 96   ] ,
  [ 96   ] ,
  [ 96   ] ,
  [  ] ,
  [  ] ,
  [ 92   ] ,
  [  ] ,
  [ 92   ] ,
  [ 92   ] ,
  [ 92   ] ,
  [ 92   ] ,
  [ 92   ] ,
  [  ] ,
  [  ] ,
  [ 101   ] ,
  [  ] ,
  [ 101   ] ,
  [ 101   ] ,
  [ 101   ] ,
  [ 101   ] ,
  [ 101   ] ,
  [  ] ,
  [  ] ,
  [ 109   ] ,
  [  ] ,
  [ 109   ] ,
  [ 109   ] ,
  [ 109   ] ,
  [ 109   ] ,
  [ 109   ] ,
  [  ] ,
  [  ] ,
  [ 104   ] ,
  [  ] ,
  [ 104   ] ,
  [ 104   ] ,
  [ 104   ] ,
  [ 104   ] ,
  [ 104   ] ,
  [  ] ,
  [  ] ,
  [ 163   ] ,
  [  ] ,
  [ 163   ] ,
  [ 163   ] ,
  [ 163   ] ,
  [ 163   ] ,
  [ 163   ] ,
  [  ] ,
  [  ] ,
  [ 168   ] ,
  [  ] ,
  [ 168   ] ,
  [ 168   ] ,
  [ 168   ] ,
  [ 168   ] ,
  [ 168   ] ,
  [  ] ,
  [  ] ,
  [ 173   ] ,
  [  ] ,
  [ 173   ] ,
  [ 173   ] ,
  [ 173   ] ,
  [ 173   ] ,
  [ 173   ] ,
  [  ] ,
  [  ] ,
  [ 178   ] ,
  [  ] ,
  [ 178   ] ,
  [ 178   ] ,
  [ 178   ] ,
  [ 178   ] ,
  [ 178   ] ,
  [  ] ,
  [  ] ,
  [ 182   ] ,
  [  ] ,
  [ 182   ] ,
  [ 182   ] ,
  [ 182   ] ,
  [ 182   ] ,
  [ 182   ] ,
  [  ] ,
  [  ] ,
  [ 134   ] ,
  [  ] ,
  [ 134   ] ,
  [ 134   ] ,
  [ 134   ] ,
  [ 134   ] ,
  [ 134   ] ,
  [  ] ,
  [  ] 
];
