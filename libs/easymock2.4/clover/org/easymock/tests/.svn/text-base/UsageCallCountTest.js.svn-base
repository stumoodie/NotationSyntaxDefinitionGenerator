var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = { "classes" : [
    {"id" : 576, "sl" : 14, "el" : 133, "name" : "UsageCallCountTest",
    "methods" : [
             {"sl" : 24, "el" : 28, "sc" : 5},  {"sl" : 30, "el" : 34, "sc" : 5},  {"sl" : 36, "el" : 40, "sc" : 5},  {"sl" : 42, "el" : 47, "sc" : 5},  {"sl" : 49, "el" : 55, "sc" : 5},  {"sl" : 57, "el" : 63, "sc" : 5},  {"sl" : 65, "el" : 71, "sc" : 5},  {"sl" : 73, "el" : 79, "sc" : 5},  {"sl" : 81, "el" : 87, "sc" : 5},  {"sl" : 89, "el" : 91, "sc" : 5},  {"sl" : 93, "el" : 96, "sc" : 5},  {"sl" : 98, "el" : 102, "sc" : 5},  {"sl" : 104, "el" : 110, "sc" : 5},  {"sl" : 112, "el" : 118, "sc" : 5},  {"sl" : 120, "el" : 132, "sc" : 5}  ]}
    ,
    {"id" : 576, "sl" : 20, "el" : 22, "name" : "UsageCallCountTest.VoidMethodInterface",
    "methods" : [
              ]}
    
 ]
};

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {
		"test_287" : {
					  "name" : "mockWithNoExpectedCallsPassesWithNoCalls",
					  "pass" : true ,
					  "methods" : [{"sl": 30 },],
					  "statements" : [{"sl": 32 },{"sl": 33 },]
					  },
		"test_295" : {
					  "name" : "tooFewCalls",
					  "pass" : true ,
					  "methods" : [{"sl": 65 },{"sl": 93 },{"sl": 98 },{"sl": 104 },],
					  "statements" : [{"sl": 67 },{"sl": 68 },{"sl": 69 },{"sl": 70 },{"sl": 94 },{"sl": 95 },{"sl": 99 },{"sl": 100 },{"sl": 101 },{"sl": 105 },{"sl": 106 },]
					  },
		"test_288" : {
					  "name" : "mockWithNoExpectedCallsFailsAtFirstCall",
					  "pass" : true ,
					  "methods" : [{"sl": 36 },{"sl": 112 },],
					  "statements" : [{"sl": 38 },{"sl": 39 },{"sl": 113 },{"sl": 114 },]
					  },
		"test_282" : {
					  "name" : "mockWithOneExpectedCallPassesWithOneCall",
					  "pass" : true ,
					  "methods" : [{"sl": 49 },{"sl": 89 },],
					  "statements" : [{"sl": 51 },{"sl": 52 },{"sl": 53 },{"sl": 54 },{"sl": 90 },]
					  },
		"test_305" : {
					  "name" : "noUpperLimitWithoutCallCountSet",
					  "pass" : true ,
					  "methods" : [{"sl": 104 },{"sl": 120 },],
					  "statements" : [{"sl": 105 },{"sl": 106 },{"sl": 122 },{"sl": 123 },{"sl": 124 },{"sl": 125 },{"sl": 126 },{"sl": 127 },{"sl": 128 },{"sl": 129 },{"sl": 130 },{"sl": 131 },]
					  },
		"test_291" : {
					  "name" : "correctNumberOfCalls",
					  "pass" : true ,
					  "methods" : [{"sl": 73 },{"sl": 98 },],
					  "statements" : [{"sl": 75 },{"sl": 76 },{"sl": 77 },{"sl": 78 },{"sl": 99 },{"sl": 100 },{"sl": 101 },]
					  },
		"test_293" : {
					  "name" : "mockWithOneExpectedCallFailsAtSecondCall",
					  "pass" : true ,
					  "methods" : [{"sl": 57 },{"sl": 89 },{"sl": 112 },],
					  "statements" : [{"sl": 59 },{"sl": 60 },{"sl": 61 },{"sl": 62 },{"sl": 90 },{"sl": 113 },{"sl": 114 },]
					  },
		"test_279" : {
					  "name" : "mockWithOneExpectedCallFailsAtVerify",
					  "pass" : true ,
					  "methods" : [{"sl": 42 },{"sl": 89 },{"sl": 104 },],
					  "statements" : [{"sl": 44 },{"sl": 45 },{"sl": 46 },{"sl": 90 },{"sl": 105 },{"sl": 106 },]
					  },
		"test_297" : {
					  "name" : "tooManyCalls",
					  "pass" : true ,
					  "methods" : [{"sl": 81 },{"sl": 98 },{"sl": 112 },],
					  "statements" : [{"sl": 83 },{"sl": 84 },{"sl": 85 },{"sl": 86 },{"sl": 99 },{"sl": 100 },{"sl": 101 },{"sl": 113 },{"sl": 114 },]
					  }
 };

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [  [],   [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [ 287   ] ,
  [  ] ,
  [ 287   ] ,
  [ 287   ] ,
  [  ] ,
  [  ] ,
  [ 288   ] ,
  [  ] ,
  [ 288   ] ,
  [ 288   ] ,
  [  ] ,
  [  ] ,
  [ 279   ] ,
  [  ] ,
  [ 279   ] ,
  [ 279   ] ,
  [ 279   ] ,
  [  ] ,
  [  ] ,
  [ 282   ] ,
  [  ] ,
  [ 282   ] ,
  [ 282   ] ,
  [ 282   ] ,
  [ 282   ] ,
  [  ] ,
  [  ] ,
  [ 293   ] ,
  [  ] ,
  [ 293   ] ,
  [ 293   ] ,
  [ 293   ] ,
  [ 293   ] ,
  [  ] ,
  [  ] ,
  [ 295   ] ,
  [  ] ,
  [ 295   ] ,
  [ 295   ] ,
  [ 295   ] ,
  [ 295   ] ,
  [  ] ,
  [  ] ,
  [ 291   ] ,
  [  ] ,
  [ 291   ] ,
  [ 291   ] ,
  [ 291   ] ,
  [ 291   ] ,
  [  ] ,
  [  ] ,
  [ 297   ] ,
  [  ] ,
  [ 297   ] ,
  [ 297   ] ,
  [ 297   ] ,
  [ 297   ] ,
  [  ] ,
  [  ] ,
  [ 293 , 282 , 279   ] ,
  [ 293 , 282 , 279   ] ,
  [  ] ,
  [  ] ,
  [ 295   ] ,
  [ 295   ] ,
  [ 295   ] ,
  [  ] ,
  [  ] ,
  [ 297 , 291 , 295   ] ,
  [ 297 , 291 , 295   ] ,
  [ 297 , 291 , 295   ] ,
  [ 297 , 291 , 295   ] ,
  [  ] ,
  [  ] ,
  [ 279 , 305 , 295   ] ,
  [ 279 , 305 , 295   ] ,
  [ 279 , 305 , 295   ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [ 297 , 293 , 288   ] ,
  [ 297 , 293 , 288   ] ,
  [ 297 , 293 , 288   ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [ 305   ] ,
  [  ] ,
  [ 305   ] ,
  [ 305   ] ,
  [ 305   ] ,
  [ 305   ] ,
  [ 305   ] ,
  [ 305   ] ,
  [ 305   ] ,
  [ 305   ] ,
  [ 305   ] ,
  [ 305   ] ,
  [  ] ,
  [  ] 
];
